{"version":3,"sources":["actions/types.js","actions/profile.js","components/Feedback.js","components/Navbar.js","actions/auth.js","higherOrderComponents/Layout.js","containers/Home.js","components/CSRFToken.js","containers/Register.js","containers/Login.js","containers/Dashboard.js","containers/Chat.js","containers/FriendCard.js","containers/Friends.js","higherOrderComponents/PrivateRoute.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/index.js","store.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","GET_FRIENDS_SUCCESS","load_user","dispatch","a","config","headers","axios","get","process","res","data","error","type","payload","Feedback","sendFeedback","useState","sender","feedback","formData","setFormData","onChange","e","target","name","value","className","tabindex","id","class","onSubmit","preventDefault","err","htmlFor","cols","rows","connect","state","isAuthenticated","auth","logout","Cookies","body","JSON","stringify","post","chatState","guestLinks","exact","to","authLinks","onClick","href","chatLinks","console","log","style","marginLeft","checkAuthenticated","children","useEffect","Navbar","home","CSRFToken","csrftoken","setcsrftoken","fetchData","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","register","username","password","re_password","accountCreatedStatus","setAccountCreatedStatus","placeholder","required","minLength","login","first_name_global","profile","first_name","last_name_global","last_name","phone_global","phone","city_global","city","delete_account","success","update_user_profile","put","ChatUI","title","onDelete","FriendCard","minWidth","maxWidth","Friends","props","friendlist","undefined","map","myfriend","Component","component","rest","render","initialState","combineReducers","action","friends","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Home","Register","Login","Dashboard","Chat","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.504c5f21.chunk.js","sourcesContent":["//Dispatch types like constants to determine the flow\r\n// Dispatch state are mentioned as below\r\n//Auth Dispathc States\r\n\r\n/*************************************************************** */\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\n\r\n//For login and logout\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\r\n\r\n//For authentication status\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\n\r\n/*************************************************************** */\r\n\r\n//Loading user profile\r\n//Profile dispatch states\r\nexport const LOAD_USER_PROFILE_SUCCESS = 'LOAD_USER_PROFILE_SUCCESS'\r\nexport const LOAD_USER_PROFILE_FAIL = 'LOAD_USER_PROFILE_FAIL'\r\n\r\n//Profile update\r\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS'\r\nexport const UPDATE_USER_PROFILE_FAIL = 'UPDATE_USER_PROFILE_FAIL'\r\n\r\n//Delete User\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\r\n\r\n//GET USER FRIEND LIST\r\nexport const GET_FRIENDS_SUCCESS = 'GET_FRIENDS_SUCCESS'\r\nexport const GET_FRIENDS_FAIL = 'GET_FRIENDS_FAIL'\r\n\r\n//ADD FRIEND\r\nexport const ADD_FRIEND_SUCCESS = 'ADD_FRIEND_SUCCESS'\r\nexport const ADD_FRIEND_FAIL = 'ADD_FRIEND_FAIL'\r\n\r\n//ADD GROUP\r\nexport const ADD_GROUP_SUCCESS = 'ADD_GROUP_SUCCESS'\r\nexport const ADD_GROUP_FAIL = 'ADD_GROUP_FAIL'\r\n\r\n//SEND MESSAGE\r\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\r\nexport const SEND_MESSAGE_FAIL = 'SEND_MESSAGE_FAIL'\r\n\r\n//GET GROUP MEMBERS\r\nexport const GET_GROUP_MEMBERS_SUCCESS = 'GET_GROUP_MEMBERS_SUCCESS'\r\nexport const GET_GROUP_MEMBERS_FAIL = 'GET_GROUP_MEMBERS_FAIL'\r\n\r\n//\r\nexport const STORE_GROUP_MEMBERS_SUCCESS = 'STORE_GROUP_MEMBERS_SUCCESS'\r\nexport const STORE_GROUP_MEMBERS_FAIL = 'STORE_GROUP_MEMBERS_FAIL'\r\n\r\n\r\n//messages\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const SET_MESSAGES = \"SET_MESSAGES\";\r\nexport const GET_CHATS_SUCCESS = \"GET_CHATS_SUCCESS\";\r\n\r\nexport const OPEN_ADD_CHAT_POPUP = \"OPEN_ADD_CHAT_POPUP\";\r\nexport const CLOSE_ADD_CHAT_POPUP = \"CLOSE_ADD_CHAT_POPUP\";\r\n\r\n//Feedback \r\nexport const FEEDBACK_SEND_FAIL = 'FEEDBACK_SEND_FAIL'\r\nexport const FEEDBACK_SEND_SUCCESS = 'FEEDBACK_SEND_SUCCESS'\r\n\r\n//GET GROUPS\r\nexport const GET_GROUPS_SUCCESS = 'GET_GROUPS_SUCCESS'\r\nexport const GET_GROUPS_FAIL = 'GET_GROUPS_FAIL'\r\n\r\n\r\n","import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport { LOAD_USER_PROFILE_FAIL, LOAD_USER_PROFILE_SUCCESS ,\r\n        UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,\r\n        } from './types'\r\n//To get user data\r\n export const update_user_profile = ( first_name, last_name, phone, city)=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        first_name:first_name,\r\n        last_name:last_name, \r\n        phone:phone, \r\n        city:city\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`,body,config)\r\n\r\n        if(res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_FAIL,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:UPDATE_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//To UPDATE USER_PROFILE DATA\r\nexport const load_user = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\r\n        }\r\n    };\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOAD_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Feedback = ({ sendFeedback }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        sender: '',\r\n        feedback: ''\r\n    })\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    const { sender, feedback } = formData\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            sendFeedback(feedback, sender)\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment className=\"nav-item\">\r\n            <Link className=\"nav-link \" type=\"\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\">Feedback</Link>\r\n\r\n            <div className=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\">\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 id=\"offcanvasRightLabel\">Feedback</h5>\r\n                    <button type=\"button\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"offcanvas-body\">\r\n                    <form onSubmit={e=>{onSubmit(e)}}>\r\n                    <label htmlFor=\"sender\">Name : </label>\r\n                    <input type=\"text\" className=\"form-control mt-3\" onChange={e => { onChange(e) }} name=\"sender\" />\r\n                    <label htmlFor=\"feedback\">Message : </label>\r\n                    \r\n                    <textarea className=\"form-control mt-3\" onChange={e => { onChange(e) }} name=\"feedback\" cols=\"30\" rows=\"10\"></textarea>\r\n                    <button type=\"submit\" className=\"btn btn-primary mt-4\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Feedback;","import React, { Fragment } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logout } from \"../actions/auth\";\r\nimport Feedback from \"./Feedback\";\r\nconst navbar = ({ isAuthenticated, logout, chatState }) => {\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" exact to=\"/login\">Login</NavLink>\r\n                {/* NavLinks apply the active class when URL is same as their path */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" exact to=\"/register\">Register</NavLink>\r\n                {/* NavLinks apply the active class when URL is same as their path */}\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" exact to=\"/dashboard\">Update Profile</NavLink>\r\n                {/* NavLinks apply the active class when URL is same as their path */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} href=\"#!\">Logout</a>\r\n                {/* NavLinks apply the active class when URL is same as their path */}\r\n            </li>\r\n        </Fragment>\r\n    );\r\n     \r\n    const chatLinks = (\r\n        <Fragment >\r\n           \r\n\r\n            <ul class=\"nav nav-pills nav-fill mx-auto d-flex align-self-start\">\r\n                <li class=\"nav-item\">   \r\n                <NavLink className=\"nav-link \" onClick={()=>{console.log(\"Clicked\")}} exact to=\"/friends\">Friends</NavLink>\r\n                    {/* NavLinks apply the active class when URL is same as their path */}\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                <NavLink className=\"nav-link\" onClick={chatState} exact to=\"/chats\">Chats</NavLink>\r\n                </li>\r\n               \r\n            </ul>\r\n\r\n        </Fragment>\r\n    );\r\n    let togglerStyle = {\r\n        marginLeft : '3px'\r\n    }    \r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\r\n            <div className=\"container-fluid w-50\"  style={togglerStyle}>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <Link className=\"navbar-brand\" exact to=\"/\">ChatAppAuth</Link>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" exact to=\"/\">Home</NavLink>\r\n                            {/* NavLinks apply the active class when URL is same as their path */}\r\n                        </li>\r\n                        {/* {is user authenticated ? dashboard and logout (authlinks) : login and signup (guestlinks)} */}\r\n                        <div>{isAuthenticated}</div>\r\n                        {isAuthenticated ? authLinks : guestLinks}\r\n                        <li className=\"nav-item\">\r\n                            <Feedback className=\"nav-link\" />\r\n                            {/* NavLinks apply the active class when URL is same as their path */}\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n            {isAuthenticated ? chatLinks : \"\"}\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(navbar);\r\n","import axios from 'axios' //For making API requests and handle responses like fetch api\r\nimport { REGISTER_SUCCESS,REGISTER_FAIL,\r\n            LOGIN_FAIL,LOGIN_SUCCESS,\r\n            LOGOUT_FAIL,LOGOUT_SUCCESS,\r\n            AUTHENTICATED_FAIL,AUTHENTICATED_SUCCESS,\r\n            DELETE_USER_FAIL,DELETE_USER_SUCCESS,\r\n            FEEDBACK_SEND_FAIL,FEEDBACK_SEND_SUCCESS\r\n        } from '../actions/types'\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nimport { load_user } from './profile'\r\n//CHECK AUTHENTICATED OR NOT\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n             'X-CSRFToken':`${Cookies.get('csrftoken')}`  //no need of for get request getting auth status\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({\r\n        \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`,body,config)\r\n\r\n       if(res.data.error || res.data.isAuthenticated === 'error') {\r\n           dispatch({\r\n               type:AUTHENTICATED_FAIL,\r\n               payload:false\r\n           })\r\n       }\r\n       else if(res.data.isAuthenticated === 'success'){\r\n           dispatch({\r\n               type:AUTHENTICATED_SUCCESS,\r\n               payload:true\r\n           })\r\n       }\r\n       else { // it will act when user accessing view without authentication cookies\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n       }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//LOGIN\r\n\r\nexport const login = (username,password) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({username,password})\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGIN_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                // payload:res.data.username as profile is getting fetched after this\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n            dispatch(load_user())\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n//REGISTER\r\nexport const register = (username,password,re_password) => async dispatch => {\r\n    console.log(Cookies.get('csrftoken'))\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    const body = JSON.stringify({username,password,re_password})\r\n\r\n    try {\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`,body,config);\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:REGISTER_FAIL\r\n            });\r\n        }else {\r\n            dispatch({\r\n                type:REGISTER_SUCCESS\r\n            });\r\n        }\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    }\r\n\r\n} \r\n\r\n//LOGOUT\r\nexport const logout = () => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({\r\n        'withCredentials':true\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGOUT_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGOUT_SUCCESS,\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGOUT_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//DELETE USER\r\nexport const delete_account = () => async dispatch => {\r\n    console.log(\"Arrived\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    console.log(Cookies.get('csrftoken'))\r\n    const body = JSON.stringify({\r\n        'withCredentials':true\r\n    })\r\n    \r\n    try {\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/delete`,body,config)\r\n        \r\n        if( res.data.success ){\r\n            dispatch({\r\n                type:DELETE_USER_SUCCESS,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:DELETE_USER_FAIL\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:DELETE_USER_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n//Feedback Sending\r\nexport const sendFeedback = (feedback,sender) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({feedback,sender})\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:FEEDBACK_SEND_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:FEEDBACK_SEND_SUCCESS,\r\n                // payload:res.data.username as profile is getting fetched after this\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n            dispatch(load_user())\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n}","import React, { Fragment,useEffect } from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated } from \"../actions/auth\";\r\nimport { load_user } from \"../actions/profile\";\r\n\r\nconst Layout = ({ children, checkAuthenticated, load_user })=> {\r\n    // console.log(\"Children => \",children)\r\n\r\n    useEffect(() => {\r\n        checkAuthenticated(); //checks authenticated or not upon every render once\r\n        load_user(); //after authenticationChaeck status user will be loaded\r\n    }, [])\r\n\r\n    return(\r\n    <Fragment>\r\n        <Navbar/>\r\n        {children}\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null,{checkAuthenticated,load_user})(Layout);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst home = ()=> (\r\n    <div className=\"container\">\r\n        <div className=\"mt-5 p-5 bg-light\">\r\n            <h1 className=\"display-4\">Welcome to the ChatApp</h1>\r\n            <p className=\"lead\">\r\n                This is wonderful application to Chat..\r\n            </p>\r\n            <hr className=\"my-4\"/>\r\n            <p>Click the button below to Login</p>\r\n            <Link className=\"btn btn-primary btn-lg\" exact to=\"/login\">Login</Link>\r\n        </div>\r\n        \r\n    </div>\r\n);\r\n\r\nexport default home;\r\n","\r\nimport React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst CSRFToken = () =>{\r\n\r\n    const [csrftoken, setcsrftoken] = useState('')\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const fetchData = async ()=> {\r\n            try{\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`)\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        }\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'))\r\n\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n    );\r\n}\r\n\r\nexport default CSRFToken;","import React,{useState} from \"react\";\r\nimport { register } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect ,Link} from \"react-router-dom\";\r\n\r\nimport CSRFToken from \"../components/CSRFToken\";\r\n\r\nconst Register = ({register,isAuthenticated})=> {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username:'',\r\n        password:'',\r\n        re_password:''\r\n    })\r\n\r\n    const [accountCreatedStatus,setAccountCreatedStatus] = useState(false)\r\n\r\n    const {username,password,re_password} = formData\r\n    \r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(password === re_password) {\r\n            //then hit register action\r\n            register(username,password,re_password);\r\n            setAccountCreatedStatus(true);\r\n        }\r\n\r\n    }\r\n\r\n    if(isAuthenticated)\r\n        return <Redirect exact to='/dashboard'/>\r\n    else if (accountCreatedStatus)\r\n        return <Redirect exact to='/login'/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Register for an Account</h1>\r\n            <p>Enter your profile info..</p>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <CSRFToken/>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">\r\n                        Username:\r\n                    </label>\r\n                    <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Username\" \r\n                        name=\"username\"\r\n                        id=\"username\" \r\n                        value={username}\r\n                        onChange={e => onChange(e)} \r\n                        required/>\r\n                </div>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">\r\n                        Password:\r\n                    </label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Password\" \r\n                        name=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6' \r\n                        required/>\r\n                </div><div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"re_password\" className=\"form-label\">\r\n                        Confirm Password:\r\n                    </label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Confirm Password\" \r\n                        name=\"re_password\"\r\n                        id=\"re_password\" \r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6' \r\n                        required/>\r\n                </div>\r\n                <button className=\"btn btn-primary mt-3\" type='submit'>Register</button>\r\n            </form>\r\n            <p className=\"mt-3\">Already have an account? <Link exact to='/login'>Sign In</Link></p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated:state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps,{register})(Register);\r\n","import React,{useState} from \"react\";\r\nimport { login } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect ,Link} from \"react-router-dom\";\r\n\r\nimport CSRFToken from \"../components/CSRFToken\";\r\n\r\nconst Login = ({login,isAuthenticated})=> {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username:'',\r\n        password:'',\r\n    })\r\n\r\n    \r\n\r\n    const {username,password} = formData\r\n    \r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(password.length > 6) {\r\n            //then hit register action\r\n            login(username,password);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect exact to='/dashboard'/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Sign In</h1>\r\n            <p>To your ChatApp</p>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <CSRFToken/>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">\r\n                        Username:\r\n                    </label>\r\n                    <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Username\" \r\n                        name=\"username\"\r\n                        id=\"username\" \r\n                        value={username}\r\n                        onChange={e => onChange(e)} \r\n                        required/>\r\n                </div>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">\r\n                        Password:\r\n                    </label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Password\" \r\n                        name=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6' \r\n                        required/>\r\n                </div>\r\n                <button className=\"btn btn-primary mt-3\" type='submit'>Sign In</button>\r\n            </form>\r\n            <p className=\"mt-3\">Don't have an account? <Link exact to='/register'>Sign Up</Link></p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated:state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps,{login})(Login);\r\n","import React,{useState,useEffect} from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport { update_user_profile } from \"../actions/profile\";\r\nimport { delete_account } from \"../actions/auth\";\r\nconst Dashboard = ({\r\n    delete_account,\r\n    update_user_profile,\r\n    first_name_global,\r\n    last_name_global,\r\n    phone_global,\r\n    city_global,\r\n\r\n})=> {\r\n\r\n    \r\n\r\n    const [formData, setFormData] = useState({\r\n        first_name:'',\r\n        last_name:'',\r\n        phone:'',\r\n        city:'',\r\n    })\r\n\r\n    \r\n\r\n    const { first_name, last_name, phone, city} = formData\r\n    \r\n    //For initial global values\r\n    useEffect(() => {\r\n       setFormData({\r\n        first_name:first_name_global,\r\n        last_name:last_name_global,\r\n        phone:phone_global,\r\n        city:city_global,\r\n       });\r\n    }, [first_name_global,last_name_global,phone_global,city_global])\r\n\r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        update_user_profile( first_name, last_name, phone, city);//it async function\r\n    }   \r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <h1 className=\"mt-3\">Welcome to User Dashboard</h1>\r\n            <p className=\"mt-3 mb-3\">Update User Profiel Below..</p>\r\n                <form onSubmit={e=>onSubmit(e)}>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"first_name\">First Name:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"first_name\"\r\n                            placeholder={first_name_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={first_name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"last_name\">Last Name:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"last_name\"\r\n                            placeholder={last_name_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={last_name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"phone\">Phone:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"number\"                            \r\n                            name=\"phone\"\r\n                            placeholder={phone_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={phone}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"city\">City:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"city\"\r\n                            placeholder={city_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={city}\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n                        Update\r\n                    </button>\r\n                </form>\r\n                <p className=\"mt-5\">Click the button below to delete your User Account : </p>\r\n                <a className=\"btn btn-danger\" href=\"#!\" onClick={delete_account}>\r\n                    Delete Account\r\n                </a>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    first_name_global:state.profile.first_name,\r\n    last_name_global:state.profile.last_name,\r\n    phone_global:state.profile.phone,\r\n    city_global:state.profile.city,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n})\r\n\r\nexport default connect(mapStateToProps,{delete_account ,update_user_profile})(Dashboard);\r\n","import React, { Fragment } from 'react'\r\n\r\nexport default function ChatUI({ title, onDelete }) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                <div class=\"container-fluid\">\r\n                <input type=\"text\" className='form-control w-50 mx-auto' />\r\n                <a class=\"btn btn-success mx-auto\" href=\"#\">Send</a>\r\n                </div>\r\n            </nav>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FriendCard({ title, onDelete ,username }) {\r\n    let cardStyle = {\r\n       \r\n        minWidth:\"15rem\",\r\n        maxWidth:\"20rem\"\r\n    }\r\n    return (\r\n\r\n        \r\n        <div className=\"card d-flex border border-dark m-2\" style={cardStyle}>\r\n            <div className=\"card-header border-success\">{title}</div>\r\n            <div className=\"card-body text-dark\">\r\n                <h5 className=\"card-title\">Task</h5>\r\n                <p className=\"card-text\">{}Busy</p>\r\n            </div>\r\n            <div className=\"card-footer bg-transparent border-success\">\r\n                <button className=\"btn btn-sm btn-outline-danger \" onClick={() => onDelete(username)}> Delete </button></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {  Fragment } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {del_friend} from '../actions/friends'\r\n// import { update_user_profile } from \"../actions/profile\";\r\n// import { delete_account } from \"../actions/auth\";\r\nimport FriendCard from \"./FriendCard\";\r\nconst Friends = (props) => {\r\n\r\n    console.log(typeof(props.friendlist))\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card-group\">\r\n                {props.friendlist === undefined ? <>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            ChatApp\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <blockquote class=\"blockquote mb-0\">\r\n                                <h1>No Friends !</h1>\r\n                                <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">ADD FRIENDS</cite></footer>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                    props.friendlist.map(\r\n                        (myfriend) => {\r\n                            return (\r\n                                <FriendCard title={myfriend} />\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    friendlist_global: state.friends,\r\n    groups_global: state.groups,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n})\r\n\r\nexport default Friends;\r\n/*\r\n/* export default connect(mapStateToProps, { del_friend })(Friends);**/\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route,Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component,isAuthenticated, ...rest})=> ( // ...rest = >est of the props\r\n    \r\n    <Route\r\n    {...rest}\r\n    render={ props=> isAuthenticated ? <Component {...props}/>:<Redirect to='/login'/> }\r\n    />\r\n)\r\n\r\nconst mapStateToProps = state=>({\r\n    isAuthenticated :state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(PrivateRoute)","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    FEEDBACK_SEND_FAIL,\r\n    FEEDBACK_SEND_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    // username: '', no need as after login profile is being fetched\r\n    \r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                 ...state,\r\n                 isAuthenticated:payload\r\n             }\r\n             \r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n    \r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                username: payload\r\n            }    \r\n        \r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                isAuthenticated:false,\r\n                username:''\r\n            }     \r\n        \r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:  \r\n        case LOGOUT_FAIL:  \r\n        case DELETE_USER_FAIL:\r\n        case FEEDBACK_SEND_FAIL:\r\n        case FEEDBACK_SEND_SUCCESS:    \r\n                return state; \r\n         \r\n                \r\n                \r\n                \r\n                \r\n        default: return state    \r\n\r\n}\r\n\r\n}","import {\r\n    LOAD_USER_PROFILE_FAIL,\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: '',\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case UPDATE_USER_PROFILE_SUCCESS:\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username:payload.username,\r\n                first_name:payload.profile.first_name,\r\n                last_name:payload.profile.last_name,\r\n                phone:payload.profile.phone,\r\n                city:payload.profile.city\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username:'',\r\n                first_name:'',\r\n                last_name:'',\r\n                phone:'',\r\n                city:'',\r\n            }   \r\n        case UPDATE_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n           \r\n        default: return state    \r\n\r\n}\r\n\r\n}","import {\r\n    ADD_FRIEND_FAIL,ADD_FRIEND_SUCCESS,\r\n    GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    friendlist:[]\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState.friendlist, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case GET_FRIENDS_SUCCESS:\r\n            return [\r\n                ...state,\r\n                {friendlist:\r\n                    payload.data.friends\r\n                }\r\n            ]\r\n        case ADD_FRIEND_SUCCESS:\r\n        case GET_FRIENDS_FAIL:\r\n        case ADD_FRIEND_FAIL:\r\n            return [\r\n                ...state\r\n            ]\r\n           \r\n        default: return [...state]    \r\n\r\n}\r\n\r\n}","import {combineReducers} from 'redux';\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport friends from './friends';\r\nexport default combineReducers({\r\n    auth,\r\n    profile,\r\n    friends\r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n/*Redux thunk allows us to disptach actions like GET,POST api requests asynchronously and resolve each promise that gets returned*/  \r\nconst initialState = {}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store  = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n    );\r\n\r\nexport default store;    ","import React from 'react'\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nimport Layout from './higherOrderComponents/Layout'\r\n\r\nimport Home from './containers/Home'\r\nimport Register from './containers/Register'\r\nimport Login from './containers/Login'\r\nimport Dashboard from './containers/Dashboard'\r\nimport Chat from \"./containers/Chat\";\r\n// import friends from './reducers/friends'\r\nimport Friends from './containers/Friends'\r\nimport PrivateRoute from './higherOrderComponents/PrivateRoute'\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store' \r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n                <Layout>\r\n                        <Route exact path='/' component={Home}/>\r\n                        <Route exact path='/register' component={Register}/>\r\n                        <Route exact path='/login' component={Login}/>\r\n                        <PrivateRoute exact path='/dashboard' component={Dashboard}/>\r\n                        <PrivateRoute exact path='/friends' component={Friends}/>\r\n                        <PrivateRoute exact path=\"/chats\" component={Chat} />\r\n\r\n                </Layout>\r\n        </Router>    \r\n    </Provider>\r\n\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}