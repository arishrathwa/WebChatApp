{"version":3,"sources":["actions/types.js","actions/profile.js","components/Feedback.js","actions/auth.js","actions/notification.js","components/Notifications.js","actions/friends.js","components/Navbar.js","higherOrderComponents/Layout.js","containers/Home.js","components/CSRFToken.js","containers/Register.js","containers/Login.js","containers/Dashboard.js","containers/Chat.js","containers/FriendCard.js","containers/Friends.js","higherOrderComponents/PrivateRoute.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/notifications.js","reducers/index.js","store.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","GET_FRIENDS_SUCCESS","GET_FRIENDS_FAIL","GET_SEARCHED_FRIENDS_SUCCESS","GET_SEARCHED_FRIENDS_FAIL","ADD_FRIEND_SUCCESS","ADD_FRIEND_FAIL","FEEDBACK_SEND_FAIL","FEEDBACK_SEND_SUCCESS","GET_NOTIFICATIONS_FAIL","GET_NOTIFICATIONS_SUCCESS","load_user","dispatch","a","config","headers","axios","get","process","res","data","error","type","payload","connect","sendFeedback","feedback","sender","Cookies","body","JSON","stringify","post","alert","success","useState","formData","setFormData","onChange","e","target","name","value","className","tabindex","id","class","onSubmit","preventDefault","console","log","err","htmlFor","cols","rows","send_notification","username","receiver","status","info","state","notifications","notify_list","profile","store_friend_connection","friend","connectionid","get_notification_list","notifyList","onClick","onDeny","getNotify","length","map","notification","request","isAuthenticated","auth","logout","chatState","guestLinks","exact","to","authLinks","chatLinks","onClickLogout","href","style","marginLeft","checkAuthenticated","children","useEffect","Navbar","design","maxWidth","boxShadow","home","CSRFToken","csrftoken","setcsrftoken","fetchData","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","getCookie","register","password","re_password","accountCreatedStatus","setAccountCreatedStatus","placeholder","required","minLength","login","first_name_global","first_name","last_name_global","last_name","phone_global","phone","city_global","city","delete_account","update_user_profile","put","ChatUI","title","onDelete","params","location","useLocation","friendGroup","roomName","LoadOldMessagesStatus","this","loaded","loadmsgcount","chatSocket","WebSocket","window","host","chatmessages","setchatmessages","textItem","settextItem","onmessage","parse","onclose","message","send","onclick","tag","minWidth","pathname","friends","friendlist_global","groups_global","groups","searchedUser","friendlist","user_name","get_searched_user_list","get_friend_list","searchItem","setSearchItem","searchList","setsearchList","friendTag","deleteCommonElements","checkUsername","user","includes","elem","filter","concat","action","flag","list","undefined","myfriend","Component","component","rest","render","props","initialState","combineReducers","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Home","Register","Login","Friends","Dashboard","Chat","ReactDOM","StrictMode","getElementById"],"mappings":"wPAKaA,EAAmB,mBACnBC,EAAgB,gBAGhBC,EAAgB,gBAChBC,EAAa,aACbC,EAAiB,iBACjBC,EAAc,cAGdC,EAAwB,wBACxBC,EAAqB,qBAMrBC,EAA4B,4BAC5BC,EAAyB,yBAGzBC,EAA8B,8BAC9BC,EAA2B,2BAG3BC,EAAsB,sBACtBC,EAAmB,mBAGnBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAA+B,+BAC/BC,EAA4B,4BAG5BC,EAAqB,qBACrBC,EAAkB,kBA4BlBC,EAAqB,qBACrBC,EAAwB,wBAOxBC,EAAyB,yBACzBC,EAA4B,4B,iBC5B5BC,EAAY,yDAAI,WAAMC,GAAN,iBAAAC,EAAA,6DACnBC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,qBAJE,kBAWHC,IAAMC,IAAN,UAAaC,wBAAb,iBAA0DJ,GAXvD,QAWfK,EAXe,QAadC,KAAKC,MACRT,EAAS,CACLU,KAAK1B,IAITgB,EAAS,CACLU,KAAK3B,EACL4B,QAAQJ,EAAIC,OArBC,gDA0BrBR,EAAS,CACLU,KAAK1B,IA3BY,yDAAJ,uD,6BCCV4B,cAAQ,KAAK,CAACC,aC8JD,SAACC,EAASC,GAAV,8CAAqB,WAAMf,GAAN,mBAAAC,EAAA,6DACvCC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAI5BY,EAAOC,KAAKC,UAAU,CAAC,SAAWL,EACnC,OAASC,IAV+B,kBAcvBX,IAAMgB,KAAN,UAAcd,wBAAd,sBAAgEW,EAAKf,GAd9C,QAcnCK,EAdmC,QAgBlCC,KAAKC,MACRT,EAAS,CACLU,KAAKf,KAIT0B,MAAMd,EAAIC,KAAKc,SACftB,EAAS,CACLU,KAAKd,IAMTI,EAASD,MA9B4B,gDAkCzCC,EAAS,CACLU,KAAKhC,IAnCgC,yDAArB,wDD9JbkC,EA/CE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEhB,EAAgCU,mBAAS,CACrCR,OAAQ,GACRD,SAAU,KAFd,mBAAOU,EAAP,KAAiBC,EAAjB,KAKMC,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UACnEf,EAAqBS,EAArBT,OAAQD,EAAaU,EAAbV,SAahB,OACI,eAAC,WAAD,CAAUiB,UAAU,WAApB,UACI,cAAC,IAAD,CAAMA,UAAU,YAAYrB,KAAK,GAAG,iBAAe,YAAY,iBAAe,kBAAkB,gBAAc,iBAA9G,sBAEA,sBAAKqB,UAAU,0BAA0BC,SAAS,KAAKC,GAAG,iBAAiB,kBAAgB,sBAA3F,UACI,sBAAKF,UAAU,mBAAf,UACI,oBAAIE,GAAG,sBAAP,sBACA,wBAAQvB,KAAK,SAASqB,UAAU,uBAAuB,kBAAgB,YAAY,aAAW,aAElG,qBAAKG,MAAM,iBAAX,SACI,uBAAMC,SAAU,SAAAR,IAtBf,SAACA,GACdA,EAAES,iBACF,IACIC,QAAQC,IAAIvB,GACZsB,QAAQC,IAAIxB,GACZD,EAAaC,EAAUC,GAE3B,MAAOwB,KAeyBJ,CAASR,IAA7B,UACA,uBAAOa,QAAQ,SAAf,qBACA,uBAAO9B,KAAK,OAAOqB,UAAU,oBAAoBL,SAAU,SAAAC,GAAOD,EAASC,IAAME,KAAK,WACtF,uBAAOW,QAAQ,WAAf,wBAEA,0BAAUT,UAAU,oBAAoBL,SAAU,SAAAC,GAAOD,EAASC,IAAME,KAAK,WAAWY,KAAK,KAAKC,KAAK,OACvG,wBAAQhC,KAAK,SAASqB,UAAU,uBAAhC,kCEIPY,EAAoB,SAAEC,EAASC,EAASC,EAAOC,GAA3B,8CAAmC,WAAM/C,GAAN,mBAAAC,EAAA,6DAC9DC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAI5BY,EAAOC,KAAKC,UAAL,aACV,OAASyB,EACT,SAAWC,EACV,OAASC,EACT,KAAOC,GAJE,SAKAH,IAGbP,QAAQC,IAAI,YAAYrB,EAAKF,QAjBuC,kBAoB9CX,IAAMgB,KAAN,UAAcd,wBAAd,wBAAkEW,EAAKf,GApBzB,QAoB1DK,EApB0D,QAsBzDC,KAAKC,MACRT,EAAS,CACLU,KJW4B,6BIPhCV,EAAS,CACLU,KJO+B,8BIN/BC,QAAQJ,EAAIC,OA9B4C,kDAmChER,EAAS,CACLU,KAAKb,IApCuD,0DAAnC,uDCiDlBe,eATS,SAAAoC,GAGpB,OAFAX,QAAQC,IAAI,gBAAgBU,EAAMC,eAClCZ,QAAQC,IAAIU,EAAMC,cAAcC,aACzB,CACPD,cAAcD,EAAMC,cAAcC,YAClCN,SAASI,EAAMG,QAAQP,YAIY,CAACQ,wBCND,SAACR,EAASS,GAAV,IAAiBC,EAAjB,uDAA8B,GAA9B,8CAAmC,WAAMtD,GAAN,iBAAAC,EAAA,6DAChEC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAI5BY,EAAOC,KAAKC,UAAU,CACxB,KAAOyB,EACP,gBAAkBS,EAClB,aAAeC,IAEnBjB,QAAQC,IAAI,kBAAkBgB,GAdwC,kBAiBhDlD,IAAMgB,KAAN,UAAcd,wBAAd,sBAAgEW,EAAKf,GAjBrB,cAmB3DM,KAAKC,MACRT,EAAS,CACLU,KAAKhB,IAITM,EAAS,CACLU,KAAKjB,IA1BqD,kDA+BlEO,EAAS,CACLU,KAAKhB,IAhCyD,0DAAnC,uDDMyBiD,oBAAkBY,sBDvF7C,SAACX,GAAD,8CAAa,WAAM5C,GAAN,mBAAAC,EAAA,6DAC5CC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAI5BY,EAAOC,KAAKC,UAAU,CACzB,SAAWyB,IAVoC,kBAe5BxC,IAAMgB,KAAN,UAAcd,wBAAd,6BAAuEW,EAAKf,GAfhD,OAexCK,EAfwC,OAgB9C8B,QAAQC,IAAI,UAAU/B,EAAIC,MACvBD,EAAIC,KAAKC,MACRT,EAAS,CACLU,KAAKb,IAITG,EAAS,CACLU,KAAKZ,EACLa,QAAQJ,EAAIC,OAzB0B,kDA+B9CR,EAAS,CACLU,KAAKb,IAhCqC,0DAAb,wDCuFtBe,EAzFM,SAAC,GAA8F,IAA7FqC,EAA4F,EAA5FA,cAAcL,EAA8E,EAA9EA,SAASQ,EAAqE,EAArEA,wBAAwBT,EAA6C,EAA7CA,kBAAkBY,EAA2B,EAA3BA,sBAEpF,EAAoChC,mBAAS,IAA7C,mBAAOiC,EAAP,UAKAnB,QAAQC,IAAI,cAAckB,GAC1BnB,QAAQC,IAAI,eAAeW,GAC3B,IAAMQ,EAAO,uCAAG,WAAO9B,EAAEZ,EAAO8B,EAASC,EAAOC,GAAhC,SAAA9C,EAAA,yDACC,UAAV6C,GAAgC,QAAVA,EADb,gCAEFM,EAAwBP,EAAS9B,EAAOgC,GAFtC,UAIZV,QAAQC,IAAI,UAAUS,GACR,SAAXD,EALS,gCAMNH,EAAkB5B,EAAO8B,EAASC,EAAO,IANnC,2CAAH,8DASPY,EAAM,uCAAG,WAAM/B,EAAEZ,EAAO8B,EAASC,GAAxB,SAAA7C,EAAA,sEACL0C,EAAkB5B,EAAO8B,EAASC,EAAO,IADpC,2CAAH,4DAGNa,EAAa,SAAChC,GACf4B,EAAsBX,IAE3B,OACI,eAAC,WAAD,CAAUb,UAAU,WAApB,UACI,cAAC,IAAD,CAAMA,UAAU,YAAYrB,KAAK,GAAG,iBAAe,YAAY,iBAAe,mBAAmB+C,QAAS,SAAC9B,GAAKgC,KAAsB,gBAAc,kBAApJ,2BAEA,sBAAK5B,UAAU,0BAA0BC,SAAS,KAAKC,GAAG,kBAAkB,kBAAgB,uBAA5F,UACI,sBAAKF,UAAU,mBAAf,UACI,oBAAIE,GAAG,sBAAP,2BACA,wBAAQvB,KAAK,SAASqB,UAAU,qBAAqB0B,QAAS,SAAC9B,GAAKgC,KAAsB,kBAAgB,YAAY,aAAW,QAAjI,qBACA,wBAAQjD,KAAK,SAASqB,UAAU,uBAAuB,kBAAgB,YAAY,aAAW,aAElG,qBAAKG,MAAM,uBAAX,SAGyB,IAAzBe,EAAcW,OACdX,EAAcY,KACN,SAACC,GAEG,OADAzB,QAAQC,IAAI,qBAER,mCACA,qBAAKJ,MAAM,OAAX,SACI,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,aAAV,SAAwB4B,EAAa/C,SACrC,mBAAGmB,MAAM,YAAT,SAAsB4B,EAAahB,SACT,SAAzBgB,EAAaC,QAAmB,qCACjC,wBAAQrD,KAAK,SAASwB,MAAM,iCAAiCuB,QAAS,SAAC9B,GAAK8B,EAAQ9B,EAAEmC,EAAa/C,OAAO+C,EAAajB,SAAS,WAAhI,oBACA,wBAAQnC,KAAK,SAASwB,MAAM,gCAAgCuB,QAAS,SAAC9B,GAAK+B,EAAO/B,EAAEmC,EAAa/C,OAAO+C,EAAajB,SAAS,SAA9H,uBAGA,wBAAQnC,KAAK,SAASwB,MAAM,iCAAiCuB,QAAS,SAAC9B,GAAK8B,EAAQ9B,EAAEmC,EAAa/C,OAAO+C,EAAajB,SAAS,OAAOiB,EAAaf,OAApJ,+BAUhB,mCACI,qBAAKb,MAAM,OAAX,SACA,qBAAKA,MAAM,YAAX,kEEuDbtB,eALS,SAAAoC,GAAK,MAAK,CAC9BgB,gBAAiBhB,EAAMiB,KAAKD,gBAC5BpB,SAAUI,EAAMG,QAAQP,YAGY,CAAEsB,OJQpB,SAACtB,GAAD,8CAAc,WAAM5C,GAAN,iBAAAC,EAAA,6DAC1BC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAc,GAAd,OAAiBa,IAAQX,IAAI,gBAGrCgC,QAAQC,IAAI,iBAAiBM,GACvB3B,EAAOC,KAAKC,UAAU,CACxB,iBAAkB,EAClB,SAAWyB,IAXiB,kBAgBVxC,IAAMgB,KAAN,UAAcd,wBAAd,oBAA8DW,EAAKf,GAhBzD,cAkBrBM,KAAKC,MACRT,EAAS,CACLU,KAAK9B,IAIToB,EAAS,CACLU,KAAK/B,IAzBe,kDAgC5BqB,EAAS,CACLU,KAAK9B,IAjCmB,0DAAd,wDIRPgC,EAvHA,SAAC,GAAqD,IAAnDoD,EAAkD,EAAlDA,gBAAiBE,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAUvB,EAAe,EAAfA,SAC3CwB,EACF,eAAC,WAAD,WACI,oBAAIrC,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAU,WAAWsC,OAAK,EAACC,GAAG,SAAvC,qBAGJ,oBAAIvC,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAU,WAAWsC,OAAK,EAACC,GAAG,YAAvC,2BAMNC,EACF,cAAC,WAAD,UACI,oBAAIxC,UAAU,WAAd,SACI,cAAC,EAAD,CAAcA,UAAU,iBAkB9ByC,EACF,cAAC,WAAD,UAGI,qBAAIzC,UAAU,2DAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAU,YAAY0B,QAAS,WAAQpB,QAAQC,IAAI,YAAc+B,OAAK,EAACC,GAAG,WAAnF,uBAMJ,qBAAIvC,UAAU,kCAAd,UAEQ,wBAAQrB,KAAK,SAASwB,MAAM,gBAA5B,SAA6CU,IAC7C,wBAAQlC,KAAK,SAASwB,MAAM,sDAAsDD,GAAG,wBAAwB,iBAAe,WAAW,gBAAc,QAAQ,oBAAkB,SAA/K,SACI,sBAAMC,MAAM,kBAAZ,+BAEJ,qBAAIA,MAAM,sDAAsD,kBAAgB,wBAAhF,UACI,6BAEI,cAAC,IAAD,CAASH,UAAU,gBAAgB0B,QAASU,EAAWE,OAAK,EAACC,GAAG,SAAhE,uBAGJ,6BAEI,cAAC,IAAD,CAASvC,UAAU,gBAAgB0B,QAASU,EAAWE,OAAK,EAACC,GAAG,aAAhE,8BAGJ,6BACI,mBAAGvC,UAAU,gBAAgB0B,QAAS,SAAC9B,IArC7C,SAACA,GACnBA,EAAES,iBACFC,QAAQC,IAAI,kBAAkBM,GAC9BsB,EAAOtB,GAkC6D6B,CAAc9C,IAAK+C,KAAK,KAApE,sBAEJ,6BAAI,oBAAI3C,UAAU,uBAClB,kCAcxB,OACI,sBAAKA,UAAU,iDAAf,UACI,sBAAKA,UAAU,uBAAuB4C,MAN3B,CACfC,WAAY,OAKR,UAEI,wBAAQ7C,UAAU,iBAAiBrB,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAArH,SACI,sBAAMqB,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BE,GAAG,YAA7C,SACI,qBAAIF,UAAU,aAAd,UACI,cAAC,IAAD,CAAMA,UAAU,eAAesC,OAAK,EAACC,GAAG,IAAxC,yBACA,oBAAIvC,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAU,WAAWsC,OAAK,EAACC,GAAG,IAAvC,oBAIJ,8BAAMN,IACLA,EAAkBO,EAAYH,EAC/B,oBAAIrC,UAAU,WAAd,SACI,cAAC,EAAD,CAAUA,UAAU,uBASnCiC,EAAkBQ,EAAY,SCxF5B5D,cAAQ,KAAK,CAACiE,mBLbK,yDAAM,WAAM7E,GAAN,mBAAAC,EAAA,6DAC9BC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACd,cAAc,GAAd,OAAiBa,IAAQX,IAAI,gBAIhCY,EAAOC,KAAKC,UAAU,IATQ,kBAedf,IAAMC,IAAN,UAAaC,wBAAb,2BAAoEW,EAAKf,GAf3D,QAe1BK,EAf0B,QAiB1BC,KAAKC,OAAsC,UAA7BF,EAAIC,KAAKwD,gBAC1BhE,EAAS,CACLU,KAAK5B,EACL6B,SAAQ,IAGqB,YAA7BJ,EAAIC,KAAKwD,gBACbhE,EAAS,CACLU,KAAK7B,EACL8B,SAAQ,IAIfX,EAAS,CACLU,KAAK5B,EACL6B,SAAQ,IAhCoB,gDAqChCX,EAAS,CACLU,KAAK5B,EACL6B,SAAQ,IAvCoB,yDAAN,uDKacZ,aAAjCa,EArBA,SAAC,GAAgD,IAA9CkE,EAA6C,EAA7CA,SAAUD,EAAmC,EAAnCA,mBAAoB9E,EAAe,EAAfA,UAG5CgF,qBAAU,WACNF,IACA9E,MACD,IAOH,OACA,eAAC,WAAD,WACI,cAACiF,EAAD,CAAQC,OAPS,CACjBC,SAAS,QACTC,UAAU,UAMTL,QCJMM,EAfF,kBACT,qBAAKrD,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,YAAd,oCACA,mBAAGA,UAAU,OAAb,qDAGA,oBAAIA,UAAU,SACd,gEACA,cAAC,IAAD,CAAMA,UAAU,yBAAyBsC,OAAK,EAACC,GAAG,SAAlD,yBCiCGe,EAxCG,WAEd,MAAkC9D,mBAAS,IAA3C,mBAAO+D,EAAP,KAAkBC,EAAlB,KAiCA,OAfAR,qBAAU,WACN,IAAMS,EAAS,uCAAG,sBAAAvF,EAAA,+EAEJG,IAAMC,IAAN,UAAaC,wBAAb,0BAFI,8GAAH,qDAQfkF,IACAD,EA1Bc,SAAC1D,GACf,IAAI4D,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQhC,OAAQkC,IAAK,CACrC,IAAIH,EAASC,EAAQE,GAAGC,OACxB,GAAIJ,EAAOK,UAAU,EAAGnE,EAAK+B,OAAS,KAAQ/B,EAAO,IAAM,CACvD4D,EAAcQ,mBAAmBN,EAAOK,UAAUnE,EAAK+B,OAAS,IAChE,OAKZ,OADAvB,QAAQC,IAAI,aAAamD,GAClBA,EAaMS,CAAU,gBAEzB,IAIE,uBAAOxF,KAAK,SAASmB,KAAK,sBAAsBC,MAAOwD,KCwDhD1E,eAJS,SAAAoC,GAAK,MAAK,CAC9BgB,gBAAgBhB,EAAMiB,KAAKD,mBAGQ,CAACmC,SREhB,SAACvD,EAASwD,EAASC,GAAnB,8CAAmC,WAAMrG,GAAN,iBAAAC,EAAA,6DACvDoC,QAAQC,IAAItB,IAAQX,IAAI,cAClBH,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAc,GAAd,OAAiBa,IAAQX,IAAI,gBAG/BY,EAAOC,KAAKC,UAAU,CAACyB,WAASwD,WAASC,gBATQ,kBAajCjG,IAAMgB,KAAN,UAAcd,wBAAd,sBAAgEW,EAAKf,GAbpC,cAe5CM,KAAKC,MACRT,EAAS,CACLU,KAAKlC,IAGTwB,EAAS,CACLU,KAAKnC,IArBsC,kDA0BnDyB,EAAS,CACLU,KAAKlC,IA3B0C,0DAAnC,wDQFToC,EA1FE,SAAC,GAA+B,IAA9BuF,EAA6B,EAA7BA,SAASnC,EAAoB,EAApBA,gBAExB,EAAgCzC,mBAAS,CACrCqB,SAAS,GACTwD,SAAS,GACTC,YAAY,KAHhB,mBAAO7E,EAAP,KAAiBC,EAAjB,KAMA,EAAuDF,oBAAS,GAAhE,mBAAO+E,EAAP,KAA4BC,EAA5B,KAEO3D,EAAiCpB,EAAjCoB,SAASwD,EAAwB5E,EAAxB4E,SAASC,EAAe7E,EAAf6E,YAEnB3E,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAAID,GAAL,kBAAeG,EAAEC,OAAOC,KAAMF,EAAEC,OAAOE,UAaxE,OAAGkC,EACQ,cAAC,IAAD,CAAUK,OAAK,EAACC,GAAG,eACrBgC,EACE,cAAC,IAAD,CAAUjC,OAAK,EAACC,GAAG,WAK1B,sBAAKvC,UAAU,YAAf,UACI,yDACA,0DACA,uBAAMI,SAAU,SAAAR,GAAC,OAtBR,SAAAA,GACbA,EAAES,iBAECgE,IAAaC,IAEZF,EAASvD,EAASwD,EAASC,GAC3BE,GAAwB,IAgBLpE,CAASR,IAA5B,UACI,cAAC,EAAD,IACA,sBAAKI,UAAU,kBAAf,UACI,uBAAOS,QAAQ,WAAWT,UAAU,aAApC,uBAGA,uBAAOrB,KAAK,OACRqB,UAAU,eACVyE,YAAY,WACZ3E,KAAK,WACLI,GAAG,WACHH,MAAOc,EACPlB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxB8E,UAAQ,OAEhB,sBAAK1E,UAAU,kBAAf,UACI,uBAAOS,QAAQ,WAAWT,UAAU,aAApC,uBAGA,uBAAOrB,KAAK,WACRqB,UAAU,eACVyE,YAAY,WACZ3E,KAAK,WACLI,GAAG,WACHH,MAAOsE,EACP1E,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxB+E,UAAU,IACVD,UAAQ,OACV,sBAAK1E,UAAU,kBAAf,UACF,uBAAOS,QAAQ,cAAcT,UAAU,aAAvC,+BAGA,uBAAOrB,KAAK,WACRqB,UAAU,eACVyE,YAAY,mBACZ3E,KAAK,cACLI,GAAG,cACHH,MAAOuE,EACP3E,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxB+E,UAAU,IACVD,UAAQ,OAEhB,wBAAQ1E,UAAU,uBAAuBrB,KAAK,SAA9C,yBAEJ,oBAAGqB,UAAU,OAAb,sCAA6C,cAAC,IAAD,CAAMsC,OAAK,EAACC,GAAG,SAAf,8BCR1C1D,gBAJS,SAAAoC,GAAK,MAAK,CAC9BgB,gBAAgBhB,EAAMiB,KAAKD,mBAGQ,CAAC2C,MTlBnB,SAAC/D,EAASwD,GAAV,8CAAuB,WAAMpG,GAAN,iBAAAC,EAAA,6DAClCC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAI5BY,EAAOC,KAAKC,UAAU,CAACyB,WAASwD,aATE,kBAalBhG,IAAMgB,KAAN,UAAcd,wBAAd,mBAA6DW,EAAKf,GAbhD,cAe7BM,KAAKC,MACRT,EAAS,CACLU,KAAKhC,KAITsB,EAAS,CACLU,KAAKjC,IAKTuB,EAASD,MA3BuB,gDA+BpCC,EAAS,CACLU,KAAKhC,IAhC2B,yDAAvB,wDSkBNkC,EAxED,SAAC,GAA4B,IAA3B+F,EAA0B,EAA1BA,MAAM3C,EAAoB,EAApBA,gBAElB,EAAgCzC,mBAAS,CACrCqB,SAAS,GACTwD,SAAS,KAFb,mBAAO5E,EAAP,KAAiBC,EAAjB,KAOOmB,EAAqBpB,EAArBoB,SAASwD,EAAY5E,EAAZ4E,SAEV1E,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAAID,GAAL,kBAAeG,EAAEC,OAAOC,KAAMF,EAAEC,OAAOE,UAaxE,OAAIkC,EACO,cAAC,IAAD,CAAUK,OAAK,EAACC,GAAG,aAG1B,sBAAKvC,UAAU,YAAf,UACI,yCACA,gDACA,uBAAMI,SAAU,SAAAR,GAAC,OAlBR,SAAAA,GACbA,EAAES,iBAECgE,EAASxC,OAAS,GAEjB+C,EAAM/D,EAASwD,GAaIjE,CAASR,IAA5B,UACI,cAAC,EAAD,IACA,sBAAKI,UAAU,kBAAf,UACI,uBAAOS,QAAQ,WAAWT,UAAU,aAApC,uBAGA,uBAAOrB,KAAK,OACRqB,UAAU,eACVyE,YAAY,WACZ3E,KAAK,WACLI,GAAG,WACHH,MAAOc,EACPlB,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxB8E,UAAQ,OAEhB,sBAAK1E,UAAU,kBAAf,UACI,uBAAOS,QAAQ,WAAWT,UAAU,aAApC,uBAGA,uBAAOrB,KAAK,WACRqB,UAAU,eACVyE,YAAY,WACZ3E,KAAK,WACLI,GAAG,WACHH,MAAOsE,EACP1E,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxB+E,UAAU,IACVD,UAAQ,OAEhB,wBAAQ1E,UAAU,uBAAuBrB,KAAK,SAA9C,wBAEJ,oBAAGqB,UAAU,OAAb,oCAA2C,cAAC,IAAD,CAAMsC,OAAK,EAACC,GAAG,YAAf,8BC+CxC1D,gBATS,SAAAoC,GAAK,MAAK,CAC9BJ,SAAWI,EAAMG,QAAQP,SACzBgE,kBAAkB5D,EAAMG,QAAQ0D,WAChCC,iBAAiB9D,EAAMG,QAAQ4D,UAC/BC,aAAahE,EAAMG,QAAQ8D,MAC3BC,YAAYlE,EAAMG,QAAQgE,QAIS,CAACC,eVyDV,yDAAM,WAAMpH,GAAN,iBAAAC,EAAA,6DAChCoC,QAAQC,IAAI,WACNpC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAc,GAAd,OAAiBa,IAAQX,IAAI,gBAGrCgC,QAAQC,IAAItB,IAAQX,IAAI,cAClBY,EAAOC,KAAKC,UAAU,CACxB,iBAAkB,IAXU,kBAgBVf,IAAMgB,KAAN,UAAcd,wBAAd,oBAA8DW,EAAKf,GAhBzD,cAkBpBM,KAAKc,QACTtB,EAAS,CACLU,KAAKvB,IAITa,EAAS,CACLU,KAAKtB,IAzBe,kDA8B5BY,EAAS,CACLU,KAAKtB,IA/BmB,0DAAN,uDUzD0BiI,oBZ3GpB,SAAER,EAAYE,EAAWE,EAAOE,GAAhC,8CAAuC,WAAMnH,GAAN,mBAAAC,EAAA,6DACtEoC,QAAQC,IAAI,kBACPpC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAI5BY,EAAOC,KAAKC,UAAU,CACxB,iBAAkB,EAClB0F,WAAWA,EACXE,UAAUA,EACVE,MAAMA,EACNE,KAAKA,IAf8D,kBAoBjD/G,IAAMkH,IAAN,UAAahH,wBAAb,mBAA4DW,EAAKf,GApBhB,QAoB7DK,EApB6D,QAsB5DC,KAAK2C,SAAW5C,EAAIC,KAAKoC,SAC5B5C,EAAS,CACLU,KAAKzB,EACL0B,QAAQJ,EAAIC,OAIhBR,EAAS,CACLU,KAAKxB,IA9BsD,kDAoCnEc,EAAS,CACLU,KAAKxB,IArC0D,0DAAvC,wDY2GrB0B,EA/GG,SAAC,GAQb,IAPFwG,EAOC,EAPDA,eACAC,EAMC,EANDA,oBACAT,EAKC,EALDA,kBACAE,EAIC,EAJDA,iBACAE,EAGC,EAHDA,aACAE,EAEC,EAFDA,YAMA,EAAgC3F,mBAAS,CACrCsF,WAAW,GACXE,UAAU,GACVE,MAAM,GACNE,KAAK,KAJT,mBAAO3F,EAAP,KAAiBC,EAAjB,KASQoF,EAAsCrF,EAAtCqF,WAAYE,EAA0BvF,EAA1BuF,UAAWE,EAAezF,EAAfyF,MAAOE,EAAQ3F,EAAR2F,KAGtCpC,qBAAU,WACPtD,EAAY,CACXoF,WAAWD,EACXG,UAAUD,EACVG,MAAMD,EACNG,KAAKD,MAEN,CAACN,EAAkBE,EAAiBE,EAAaE,IAEpD,IAAMxF,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAAID,GAAL,kBAAeG,EAAEC,OAAOC,KAAMF,EAAEC,OAAOE,UAOxE,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,OAAd,uCACA,mBAAGA,UAAU,YAAb,yCACI,uBAAMI,SAAU,SAAAR,GAAC,OATZ,SAAAA,GACbA,EAAES,iBACFiF,EAAqBR,EAAYE,EAAWE,EAAOE,GAOxBhF,CAASR,IAA5B,UACI,sBAAKI,UAAU,kBAAf,UACI,uBAAOS,QAAQ,aAAf,yBACA,uBACIT,UAAU,eACVrB,KAAK,OACLmB,KAAK,aACL2E,YAAaI,EACblF,SAAU,SAAAC,GAAC,OAAED,EAASC,IACtBG,MAAO+E,OAGf,sBAAK9E,UAAU,kBAAf,UACI,uBAAOS,QAAQ,YAAf,wBACA,uBACIT,UAAU,eACVrB,KAAK,OACLmB,KAAK,YACL2E,YAAaM,EACbpF,SAAU,SAAAC,GAAC,OAAED,EAASC,IACtBG,MAAOiF,OAGf,sBAAKhF,UAAU,kBAAf,UACI,uBAAOS,QAAQ,QAAf,oBACA,uBACIT,UAAU,eACVrB,KAAK,SACLmB,KAAK,QACL2E,YAAaQ,EACbtF,SAAU,SAAAC,GAAC,OAAED,EAASC,IACtBG,MAAOmF,OAGf,sBAAKlF,UAAU,kBAAf,UACI,uBAAOS,QAAQ,OAAf,mBACA,uBACIT,UAAU,eACVrB,KAAK,OACLmB,KAAK,OACL2E,YAAaU,EACbxF,SAAU,SAAAC,GAAC,OAAED,EAASC,IACtBG,MAAOqF,OAGf,wBAAQpF,UAAU,uBAAuBrB,KAAK,SAA9C,uBAIJ,mBAAGqB,UAAU,OAAb,mEACA,mBAAGA,UAAU,iBAAiB2C,KAAK,KAAKjB,QAAS2D,EAAjD,kC,2BChGD,SAASG,GAAT,GAA4C,EAA1BC,MAA0B,EAAnBC,SAAmB,EAAVC,OAAW,IAElDC,EAAWC,cACjBvF,QAAQC,IAAI,YAAYqF,EAASD,QACjC,MAAsCnG,mBAASoG,EAASD,QAAxD,mBAAOG,EAAP,KAMMC,GANN,KAMiBD,EAAYvE,cAGvByE,EAbiD,gGAgBnD,WACI,OAAOC,KAAKC,WAjBmC,KAajDF,EACKE,QAAS,EADdF,EAEKG,aAAe,EAM1B,IAAInH,EAAQ,GAGPoH,EAAa,IAAIC,UAClB,QACEC,OAAOV,SAASW,KAChB,YACAR,EACA,KAGN/C,qBAAU,cAEP,IAEH,MAAwCxD,mBAAS,IAAjD,mBAAOgH,EAAP,KAAqBC,EAArB,KACA,EAAgCjH,mBAAS,IAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAQAP,EAAWQ,UAAY,SAAShH,GAC5B,IAAMnB,EAAOU,KAAK0H,MAAMjH,EAAEnB,MAC1B6B,QAAQC,IAAI9B,GAERgI,EAAgB,GAAD,oBAAKD,GAAL,CAAkB/H,MAgBzC2H,EAAWU,QAAU,SAASlH,GAC1BU,QAAQ5B,MAAM,oCA6BlB,OACI,cAAC,WAAD,UACI,sBAAKsB,UAAU,sBAAf,UACI,qBAAKG,MAAM,gCAAX,SACI,sBAAKA,MAAM,kBAAX,UACI,cAAC,IAAD,CAASH,UAAU,gBAAgBsC,OAAK,EAACC,GAAG,WAA5C,kBACA,6BAAKuD,EAAYxE,cAGzB,qBAAKtB,UAAU,gBAAf,SAEgC,IAAxBwG,EAAa3E,OACT2E,EAAa1E,KAAI,SAACiF,GACd,OACI,mCACCA,EAAQtI,UAKrB,gBAIR,qBAAK0B,MAAM,4CAAX,SACI,sBAAKA,MAAM,kBAAX,UACA,uBAAOxB,KAAK,OAAOuB,GAAG,sBAAsBP,SAAU,SAACC,IAjFtD,SAACA,GACd+G,EAAY/G,EAAEC,OAAOE,OAgFmDJ,CAASC,IAAKI,UAAU,8BACpF,mBAAGG,MAAM,0BAA0BuB,QAAS,SAAC9B,IA9CzC,SAASA,GAEzB,IAAMmH,EAAUL,EAChB1H,EAAW8G,EAAYjF,SACvBuF,EAAWY,KAAK7H,KAAKC,UAAU,CAC3B,QAAW2H,EACX,OAAW/H,KAGf2H,EAAY,IAqCkDM,IAAatE,KAAK,IAApE,4B,UClFL9D,gBAJS,SAAAoC,GAAK,MAAK,CAC9BJ,SAAWI,EAAMG,QAAQP,YAGU,CAACD,qBAAzB/B,EAvCI,SAAC,GAAyD,IAAvDyC,EAAsD,EAAtDA,OAAQoE,EAA8C,EAA9CA,SAAU7E,EAAoC,EAApCA,SAAUD,EAA0B,EAA1BA,kBAAkBsG,EAAQ,EAARA,IAUhE,OAJA5G,QAAQC,IAAI,YAAYM,GACxBP,QAAQC,IAAI,WAAWe,GACvBhB,QAAQC,IAAI,YAAYe,EAAOT,UAC/BP,QAAQC,IAAI,SAAS2G,GAEjB,mCACA,sBAAKlH,UAAU,qCAAqC4C,MAXxC,CAEZuE,SAAS,QACThE,SAAS,SAQT,UACI,qBAAKnD,UAAU,6BAAf,SAA6CsB,EAAOA,SACpD,sBAAKtB,UAAU,sBAAf,UACI,oBAAIA,UAAU,aAAd,kBACA,mBAAGA,UAAU,YAAb,qBAEJ,sBAAKA,UAAU,4CAAf,UACI,wBAAQA,UAAU,iCAAiC0B,QAAS,kBAAMgE,EAAS7E,IAA3E,uBAEgB,WAAfS,EAAO4F,KAA4B,WAARA,EAC3B,cAAC,IAAD,CAAMlH,UAAU,yBAA0BsC,OAAK,EAACC,GAAI,CAAC6E,SAAS,UAAD,OAAW9F,EAAOC,cAAeoE,OAAOrE,GAArG,kBAED,wBAAQtB,UAAU,iCAAiC0B,QAAS,kBAAMd,EAAkBC,EAASS,EAAOT,SAAS,OAAO,KAApH,uCC6IDhC,gBAjBS,SAAAoC,GAQpB,OAR8BX,QAAQC,IAAIU,EAAMG,SAEhDd,QAAQC,IACJ,UAAUU,EAAMiB,MAGpB5B,QAAQC,IAAI,MAAMU,EAAMoG,SAEjB,CACPC,kBAAmBrG,EAAMoG,QACzBE,cAAetG,EAAMuG,OACrBC,aAAaxG,EAAMoG,QAAQI,aAC3BC,WAAWzG,EAAMoG,QAAQK,WACzBC,UAAU1G,EAAMG,QAAQP,YAIW,CAAC+G,uBboFF,SAAA/G,GAAQ,8CAAG,WAAM5C,GAAN,mBAAAC,EAAA,6DAC7CoC,QAAQC,IAAI,UAAUM,GAChB1C,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAI5BY,EAAOC,KAAKC,UAAU,CACzB,SAAayB,IAX6B,kBAgBvBxC,IAAMgB,KAAN,UAAcd,wBAAd,gCAA0EW,EAAKf,GAhBxD,QAgBnCK,EAhBmC,QAkBlCC,KAAKC,MACRT,EAAS,CACLU,KAAKlB,KAGP6C,QAAQC,IAAI,SAAS/B,EAAIC,MAC3BR,EAAS,CACLU,KAAKnB,EACLoB,QAAQJ,EAAIC,QA1BqB,kDAgCzCR,EAAS,CACLU,KAAKlB,IAjCgC,0DAAH,uDapFiBoK,gBVhKhC,yDAAI,WAAM5J,GAAN,mBAAAC,EAAA,6DACzBC,EAAS,CACXC,QAAU,CACN,OAAS,mBACT,eAAe,mBACf,cAAca,IAAQX,IAAI,eAGlCgC,QAAQC,IAAI,iBACNrB,EAAOC,KAAKC,UAAU,IATG,kBAeTf,IAAMC,IAAN,UAAaC,wBAAb,uBAAgEW,EAAKf,GAf5D,QAerBK,EAfqB,QAiBpBC,KAAKC,MACRT,EAAS,CACLU,KAAKpB,KAIT+C,QAAQC,IAAI/B,GACZP,EAAS,CACLU,KAAKrB,EACLsB,QAAQJ,EAAIC,QA1BO,kDAgC3BR,EAAS,CACLU,KAAKpB,IAjCkB,0DAAJ,wDUgKhBsB,EA/JC,SAAC,GAAgF,IAA/E+I,EAA8E,EAA9EA,uBAAuBC,EAAuD,EAAvDA,gBAAgBJ,EAAuC,EAAvCA,aAAaC,EAA0B,EAA1BA,WAA0B,EAAfC,UAE7ErH,QAAQC,IAAI,mBAAmBkH,GAG/B,MAAoCjI,mBAAS,IAA7C,mBAAOsI,EAAP,KAAmBC,EAAnB,KACA,EAAoCvI,mBAASkI,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAGAjF,qBAAU,WACN6E,MACF,IAEF7E,qBAAU,WACNiF,EAAcP,GACdQ,IACA5H,QAAQC,IAAI,WACd,CAACmH,IAEH1E,qBAAU,WACNmF,EAAqBT,EAAWD,KAClC,CAACA,IAGHnH,QAAQC,IAAI,gBAAgByH,GAC5B1H,QAAQC,IAAI,gBAAgBmH,GAE5B,IA0BMU,EAAgB,SAACC,GACpB,OAAOA,EAAKxH,SAASyH,SAASR,IAG3BK,EAAuB,SAACT,EAAWD,GAErCA,EAAa3F,KAAI,SAACyG,GACdb,EAAW5F,KAAI,SAAAR,GACRA,EAAM,WAAiBiH,EAAI,SAC1BA,EAAI,IAAU,aAGdA,EAAI,IAAU,eAM1Bd,EAAeA,EAAae,QAAO,SAACD,GAChC,MAAuB,WAAhBA,EAAI,OAGXN,EAAcP,EAAWe,OAAOhB,KAKlCS,EAAY,WACdR,EAAW5F,KAAI,SAACR,GACZA,EAAM,IAAU,YAEpB2G,EAAcP,GACdpH,QAAQC,IAAI,WAAWmH,IAI3B,OACI,eAAC,WAAD,WAEI,qBAAK1H,UAAU,gCAAf,SACA,sBAAM0I,OAAO,GAAb,SACI,sBAAKvI,MAAM,8CAAX,UACI,uBAAOxB,KAAK,OAAOgB,SAAU,SAAAC,GAAC,OAxF7B,SAAAA,GAAC,OAAImI,EAAcnI,EAAEC,OAAOE,OAwFGJ,CAASC,IAAIM,GAAG,YAAYF,UAAU,gBAAgByE,YAAY,iBAAiB,aAAW,uBAAuB,mBAAiB,cACtK,wBAAQtE,MAAM,mCAAmCuB,QAAS,SAAA9B,GAAC,OArE3D,SAACA,GAEb,IAAI+I,EAAO,EACX,GAAwB,GAArBjB,EAAW7F,OAAY,CAElB,IAAI+G,EAAOlB,EAAWc,OAAOJ,GACX,GAAfQ,EAAK/G,SACJoG,EAAcW,GACdD,EAAO,GAKnB,GAA0B,GAAvBlB,EAAa5F,QAAwB,IAAT8G,EAAY,CACvC,IAAIC,EAAOnB,EAAae,OAAOJ,GACb,GAAfQ,EAAK/G,SACJoG,EAAcW,GACdD,EAAO,GAKJ,GAARA,GACAf,EAAuBE,GA8CiDpG,IAAY/C,KAAK,SAASuB,GAAG,YAA5F,2BAOR,qBAAKF,UAAU,aAAf,cACoB6I,IAAfb,EAA2B,mCACxB,sBAAK7H,MAAM,OAAX,UACI,qBAAKA,MAAM,cAAX,qBAGA,qBAAKA,MAAM,YAAX,SACI,6BAAYA,MAAM,kBAAlB,UACI,8CACA,yBAAQA,MAAM,oBAAd,cAAmC,sBAAMsF,MAAM,eAAZ,sCAKhC,IAAdqC,EACGJ,EAAW5F,KACP,SAACgH,GAEG,OADAxI,QAAQC,IAAI,qBAER,cAAC,GAAD,CAAY2G,IAAK,CAAC,IAAM,UAAW5F,OAAQwH,OAKvDd,EAAWlG,KACP,SAACgH,GAEG,OADAxI,QAAQC,IAAI,qBAER,cAAC,GAAD,CAAY2G,IAAK,CAAC,IAAM,SAAU5F,OAAQwH,e,4CC5H/DjK,gBAJS,SAAAoC,GAAK,MAAG,CAC5BgB,gBAAiBhB,EAAMiB,KAAKD,mBAGO,GAAxBpD,EAZM,SAAC,GAAD,IAAakK,EAAb,EAAEC,UAAqB/G,EAAvB,EAAuBA,gBAAoBgH,EAA3C,0BAEjB,aAFuE,CAEtE,IAAD,2BACIA,GADJ,IAEAC,OAAS,SAAAC,GAAK,OAAGlH,EAAkB,cAAC8G,EAAD,eAAeI,IAAS,cAAC,IAAD,CAAU5G,GAAG,kB,2BCMtE6G,GAAe,CACjBnH,gBAAiB,MCTfmH,GAAe,CAEjBvI,SAAU,GACViE,WAAY,GACZE,UAAW,GACXE,MAAO,GACPE,KAAM,ICPJgE,GAAe,CAEjB1B,WAAW,GACXD,aAAa,ICPX2B,GAAe,CACjBjI,YAAc,ICEHkI,8BAAgB,CAC3BnH,KJiBW,WAAuC,IAA7BjB,EAA4B,uDAAtBmI,GAAcV,EAAQ,uCAEzC/J,EAAiB+J,EAAjB/J,KAAKC,EAAY8J,EAAZ9J,QACb,OAAQD,GACJ,KAAK7B,EACL,KAAKC,EACD,OAAO,2BACCkE,GADR,IAEKgB,gBAAgBrD,IAGzB,KAAKpC,EACD,OAAO,2BACAyE,GADP,IAEIgB,iBAAiB,IAGzB,KAAKvF,EACD,OAAO,2BACAuE,GADP,IAEIgB,iBAAgB,EAChBpB,SAAUjC,IAGlB,KAAKhC,EACL,KAAKQ,EACD,OAAO,2BACA6D,GADP,IAEIgB,iBAAgB,EAChBpB,SAAS,KAejB,QAAS,OAAOI,II5DpBG,QHYW,WAAyC,IAA/BH,EAA8B,uDAAtBmI,GAAcV,EAAQ,uCAE3C/J,EAAiB+J,EAAjB/J,KAAKC,EAAY8J,EAAZ9J,QACb,OAAQD,GACJ,KAAKzB,EACL,KAAKF,EACD,OAAO,2BACAiE,GADP,IAEIJ,SAASjC,EAAQiC,SACjBiE,WAAWlG,EAAQwC,QAAQ0D,WAC3BE,UAAUpG,EAAQwC,QAAQ4D,UAC1BE,MAAMtG,EAAQwC,QAAQ8D,MACtBE,KAAKxG,EAAQwC,QAAQgE,OAE7B,KAAKnI,EACD,OAAO,2BACAgE,GADP,IAEIJ,SAAS,GACTiE,WAAW,GACXE,UAAU,GACVE,MAAM,GACNE,KAAK,KAEb,KAAKjI,EACD,OAAO,eACA8D,GAGX,QAAS,OAAOA,IGvCpBoG,QFOW,WAAyC,IAA/BpG,EAA8B,uDAAtBmI,GAAcV,EAAQ,uCAE3C/J,EAAiB+J,EAAjB/J,KAAKC,EAAY8J,EAAZ9J,QACb,OAAQD,GACJ,KAAKrB,EACD,OAAO,2BACA2D,GADP,IAEIyG,WACI9I,EAAQH,OAGpB,KAAKjB,EAEA,OADA8C,QAAQC,IAAI,UAAU3B,EAAQH,MACvB,2BACAwC,GADP,IAEIwG,aAAa7I,EAAQH,OAU9B,QAAS,OAAO,eAAIwC,KE/BxBC,cDHW,WAAuC,IAA7BD,EAA4B,uDAAtBmI,GAAcV,EAAQ,uCAEzC/J,EAAiB+J,EAAjB/J,KAAKC,EAAY8J,EAAZ9J,QACb,OAAQD,IACCZ,EACD,2BACOkD,GADP,IAEIE,YAAcvC,EAAQH,OAMd,eAAIwC,MEZtBqI,GAAa,CAACC,MAQLC,GANAC,uBACXC,GALiB,GAOjBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCyB5BO,I,MAnBH,kBACR,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,IAAD,UACQ,eAAC,EAAD,WACQ,cAAC,IAAD,CAAOlH,OAAK,EAACwH,KAAK,IAAId,UAAWe,IAEjC,cAAC,IAAD,CAAOzH,OAAK,EAACwH,KAAK,YAAYd,UAAWgB,IACzC,cAAC,IAAD,CAAO1H,OAAK,EAACwH,KAAK,SAASd,UAAWiB,KACtC,cAAC,GAAD,CAAc3H,OAAK,EAACwH,KAAK,WAAWd,UAAWkB,KAC/C,cAAC,GAAD,CAAc5H,OAAK,EAACwH,KAAK,aAAad,UAAWmB,KAEjD,cAAC,GAAD,CAAc7H,OAAK,EAACwH,KAAK,aAAcd,UAAWoB,cCvB1EC,IAASnB,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,GAAD,MAEF3G,SAAS4G,eAAe,W","file":"static/js/main.e45478df.chunk.js","sourcesContent":["//Dispatch types like constants to determine the flow\r\n// Dispatch state are mentioned as below\r\n//Auth Dispathc States\r\n\r\n/*************************************************************** */\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\n\r\n//For login and logout\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\r\n\r\n//For authentication status\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\n\r\n/*************************************************************** */\r\n\r\n//Loading user profile\r\n//Profile dispatch states\r\nexport const LOAD_USER_PROFILE_SUCCESS = 'LOAD_USER_PROFILE_SUCCESS'\r\nexport const LOAD_USER_PROFILE_FAIL = 'LOAD_USER_PROFILE_FAIL'\r\n\r\n//Profile update\r\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS'\r\nexport const UPDATE_USER_PROFILE_FAIL = 'UPDATE_USER_PROFILE_FAIL'\r\n\r\n//Delete User\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\r\n\r\n//GET USER FRIEND LIST\r\nexport const GET_FRIENDS_SUCCESS = 'GET_FRIENDS_SUCCESS'\r\nexport const GET_FRIENDS_FAIL = 'GET_FRIENDS_FAIL'\r\n//GET SEARCHED USERS\r\nexport const GET_SEARCHED_FRIENDS_SUCCESS = 'GET_SEARCHED_FRIENDS_SUCCESS'\r\nexport const GET_SEARCHED_FRIENDS_FAIL = 'GET_SEARCHED_FRIENDS_FAIL'\r\n\r\n//ADD FRIEND\r\nexport const ADD_FRIEND_SUCCESS = 'ADD_FRIEND_SUCCESS'\r\nexport const ADD_FRIEND_FAIL = 'ADD_FRIEND_FAIL'\r\n\r\n//ADD GROUP\r\nexport const ADD_GROUP_SUCCESS = 'ADD_GROUP_SUCCESS'\r\nexport const ADD_GROUP_FAIL = 'ADD_GROUP_FAIL'\r\n\r\n//SEND MESSAGE\r\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\r\nexport const SEND_MESSAGE_FAIL = 'SEND_MESSAGE_FAIL'\r\n\r\n//GET GROUP MEMBERS\r\nexport const GET_GROUP_MEMBERS_SUCCESS = 'GET_GROUP_MEMBERS_SUCCESS'\r\nexport const GET_GROUP_MEMBERS_FAIL = 'GET_GROUP_MEMBERS_FAIL'\r\n\r\n//\r\nexport const STORE_GROUP_MEMBERS_SUCCESS = 'STORE_GROUP_MEMBERS_SUCCESS'\r\nexport const STORE_GROUP_MEMBERS_FAIL = 'STORE_GROUP_MEMBERS_FAIL'\r\n\r\n\r\n//messages\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const SET_MESSAGES = \"SET_MESSAGES\";\r\nexport const GET_CHATS_SUCCESS = \"GET_CHATS_SUCCESS\";\r\n\r\nexport const OPEN_ADD_CHAT_POPUP = \"OPEN_ADD_CHAT_POPUP\";\r\nexport const CLOSE_ADD_CHAT_POPUP = \"CLOSE_ADD_CHAT_POPUP\";\r\n\r\n//Feedback \r\nexport const FEEDBACK_SEND_FAIL = 'FEEDBACK_SEND_FAIL'\r\nexport const FEEDBACK_SEND_SUCCESS = 'FEEDBACK_SEND_SUCCESS'\r\n\r\n//GET GROUPS\r\nexport const GET_GROUPS_SUCCESS = 'GET_GROUPS_SUCCESS'\r\nexport const GET_GROUPS_FAIL = 'GET_GROUPS_FAIL'\r\n\r\n//GET REQUESTS\r\nexport const GET_NOTIFICATIONS_FAIL = 'GET_NOTIFICATIONS_FAIL'\r\nexport const GET_NOTIFICATIONS_SUCCESS = 'GET_NOTIFICATIONS_SUCCESS'\r\n//SEND REQUESTS\r\nexport const STORE_NOTIFICATIONS_FAIL = 'STORE_NOTIFICATIONS_FAIL'\r\nexport const STORE_NOTIFICATIONS_SUCCESS = 'STORE_NOTIFICATIONS_SUCCESS'\r\n\r\n\r\n\r\n","import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport { LOAD_USER_PROFILE_FAIL, LOAD_USER_PROFILE_SUCCESS ,\r\n        UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n        } from './types'\r\n//To get user data\r\n//  const dispatch = useDispatch(function)\r\n export const update_user_profile = ( first_name, last_name, phone, city)=>async dispatch => {\r\n     console.log(\"yaha aya tha..\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        first_name:first_name,\r\n        last_name:last_name, \r\n        phone:phone, \r\n        city:city\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`,body,config)\r\n        \r\n        if(res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_FAIL,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:UPDATE_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//To UPDATE USER_PROFILE DATA\r\nexport const load_user = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\r\n        }\r\n    };\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOAD_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendFeedback } from \"../actions/auth\";\r\n\r\nconst Feedback = ({ sendFeedback }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        sender: '',\r\n        feedback: ''\r\n    })\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    const { sender, feedback } = formData\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            console.log(sender)\r\n            console.log(feedback)\r\n            sendFeedback(feedback, sender)\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n \r\n    return (\r\n        <Fragment className=\"nav-item\">\r\n            <Link className=\"nav-link \" type=\"\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\">Feedback</Link>\r\n\r\n            <div className=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\">\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 id=\"offcanvasRightLabel\">Feedback</h5>\r\n                    <button type=\"button\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"offcanvas-body\">\r\n                    <form onSubmit={e=>{onSubmit(e)}}>\r\n                    <label htmlFor=\"sender\">Name : </label>\r\n                    <input type=\"text\" className=\"form-control mt-3\" onChange={e => { onChange(e) }} name=\"sender\" />\r\n                    <label htmlFor=\"feedback\">Message : </label>\r\n                    \r\n                    <textarea className=\"form-control mt-3\" onChange={e => { onChange(e) }} name=\"feedback\" cols=\"30\" rows=\"10\"></textarea>\r\n                    <button type=\"submit\" className=\"btn btn-primary mt-4\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(null,{sendFeedback})(Feedback);","import axios from 'axios' //For making API requests and handle responses like fetch api\r\nimport { REGISTER_SUCCESS,REGISTER_FAIL,\r\n            LOGIN_FAIL,LOGIN_SUCCESS,\r\n            LOGOUT_FAIL,LOGOUT_SUCCESS,\r\n            AUTHENTICATED_FAIL,AUTHENTICATED_SUCCESS,\r\n            DELETE_USER_FAIL,DELETE_USER_SUCCESS,\r\n            FEEDBACK_SEND_FAIL,FEEDBACK_SEND_SUCCESS,\r\n            GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n        } from '../actions/types'\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nimport { load_user } from './profile'\r\n//CHECK AUTHENTICATED OR NOT\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n             'X-CSRFToken':`${Cookies.get('csrftoken')}`  //no need of for get request getting auth status\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({\r\n        \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`,body,config)\r\n\r\n       if(res.data.error || res.data.isAuthenticated === 'error') {\r\n           dispatch({\r\n               type:AUTHENTICATED_FAIL,\r\n               payload:false\r\n           })\r\n       }\r\n       else if(res.data.isAuthenticated === 'success'){\r\n           dispatch({\r\n               type:AUTHENTICATED_SUCCESS,\r\n               payload:true\r\n           })\r\n       }\r\n       else { // it will act when user accessing view without authentication cookies\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n       }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//LOGIN\r\n\r\nexport const login = (username,password) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({username,password})\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGIN_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                // payload:res.data.username as profile is getting fetched after this\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n            dispatch(load_user())\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n//REGISTER\r\nexport const register = (username,password,re_password) => async dispatch => {\r\n    console.log(Cookies.get('csrftoken'))\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    const body = JSON.stringify({username,password,re_password})\r\n\r\n    try {\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`,body,config);\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:REGISTER_FAIL\r\n            });\r\n        }else {\r\n            dispatch({\r\n                type:REGISTER_SUCCESS\r\n            });\r\n        }\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    }\r\n\r\n} \r\n\r\n//LOGOUT\r\nexport const logout = (username) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    console.log(\"logout wala : \",username)\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        'username':username\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGOUT_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGOUT_SUCCESS,\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGOUT_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//DELETE USER\r\nexport const delete_account = () => async dispatch => {\r\n    console.log(\"Arrived\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    console.log(Cookies.get('csrftoken'))\r\n    const body = JSON.stringify({\r\n        'withCredentials':true\r\n    })\r\n    \r\n    try {\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/delete`,body,config)\r\n        \r\n        if( res.data.success ){\r\n            dispatch({\r\n                type:DELETE_USER_SUCCESS,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:DELETE_USER_FAIL\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:DELETE_USER_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n//Feedback Sending\r\nexport const sendFeedback = (feedback,sender) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({'feedback':feedback\r\n        ,'sender':sender})\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/feedback`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:FEEDBACK_SEND_FAIL\r\n            })\r\n        }\r\n        else {\r\n            alert(res.data.success)\r\n            dispatch({\r\n                type:FEEDBACK_SEND_SUCCESS,\r\n                \r\n                // payload:res.data.username as profile is getting fetched after this\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n            dispatch(load_user())\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//GET SEARCHED USER LIST\r\n//GET FRIEND LIST\r\nexport const get_searched_user_list = username =>async dispatch => {\r\n    console.log(\"aa gaya\",username)\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       'username' : username,\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\r\n        \r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_SEARCHED_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {console.log(\"Ori : \",res.data)\r\n            dispatch({\r\n                type:GET_SEARCHED_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_SEARCHED_FRIENDS_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n","import {GET_NOTIFICATIONS_FAIL,GET_NOTIFICATIONS_SUCCESS,\r\n        STORE_NOTIFICATIONS_FAIL,STORE_NOTIFICATIONS_SUCCESS} from './types'\r\nimport axios from 'axios'\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n//GET FRIEND LIST\r\nexport const get_notification_list = (username) =>async dispatch => {\r\nconst config = {\r\n    headers : {\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json',\r\n        'X-CSRFToken':Cookies.get('csrftoken') \r\n    }\r\n};\r\n\r\nconst body = JSON.stringify({\r\n   'username':username,\r\n})\r\n\r\ntry {\r\n        \r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/notification/getnotified`,body,config)\r\n    console.log(\"Nsot : \",res.data)\r\n    if(res.data.error) {\r\n        dispatch({\r\n            type:GET_NOTIFICATIONS_FAIL,\r\n        })\r\n    }\r\n    else {\r\n        dispatch({\r\n            type:GET_NOTIFICATIONS_SUCCESS,\r\n            payload:res.data\r\n        \r\n        })\r\n    }\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type:GET_NOTIFICATIONS_FAIL\r\n    })\r\n}\r\n}\r\n\r\n//STORE FRIEND REQUEST\r\nexport const send_notification = ( username,receiver,status,info )=>async dispatch => {\r\nconst config = {\r\n    headers : {\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json',\r\n        'X-CSRFToken':Cookies.get('csrftoken') \r\n    }\r\n};\r\n\r\nconst body = JSON.stringify({\r\n   'sender':username,\r\n   'receiver':receiver,\r\n    'status':status, // sent ,accept and deny values\r\n    'info':info,\r\n    \"sender\":username\r\n\r\n})\r\nconsole.log(\"SENDER : \",body.sender)\r\ntry {\r\n    \r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/notification/notify`,body,config)\r\n\r\n    if(res.data.error) {\r\n        dispatch({\r\n            type:STORE_NOTIFICATIONS_FAIL,\r\n        })\r\n    }\r\n    else {\r\n        dispatch({\r\n            type:STORE_NOTIFICATIONS_SUCCESS,\r\n            payload:res.data\r\n        })\r\n    }\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type:GET_NOTIFICATIONS_FAIL\r\n    })\r\n}\r\n}\r\n","import React, { Fragment, useState,useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { store_friend_connection } from \"../actions/friends\";\r\nimport { send_notification } from \"../actions/notification\";\r\nimport { get_notification_list } from \"../actions/notification\";\r\nconst Notification = ({notifications,username,store_friend_connection,send_notification,get_notification_list}) => {\r\n\r\n    const [notifyList, setnotifyList] = useState([])\r\n\r\n    // useEffect(async ()=>{\r\n    //    setnotifyList([...notifications])\r\n    // },[notifyList]);\r\n    console.log(\"Not List : \",notifyList)\r\n    console.log(\"noti list : \",notifications);\r\n    const onClick = async (e,sender,receiver,status,info)=> {\r\n        if(status == \"accept\" || status == \"done\")\r\n            await store_friend_connection(receiver,sender,info);\r\n        \r\n        console.log(\"info : \",info)\r\n        if(status !== \"done\")\r\n        await send_notification(sender,receiver,status,\"\")\r\n\r\n    }\r\n    const onDeny = async(e,sender,receiver,status)=>{\r\n        await send_notification(sender,receiver,status,\"\")\r\n    }\r\n    const getNotify =  (e)=> {\r\n         get_notification_list(username);\r\n    }\r\n    return (\r\n        <Fragment className=\"nav-item\">\r\n            <Link className=\"nav-link \" type=\"\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasBottom\" onClick={(e)=>{getNotify(username)}} aria-controls=\"offcanvasBottom\">Notifications</Link>\r\n\r\n            <div className=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasBottom\" aria-labelledby=\"offcanvasBottomLabel\">\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 id=\"offcanvasRightLabel\">Notifications</h5>\r\n                    <button type=\"button\" className=\"btn-primary btn-sm\" onClick={(e)=>{getNotify(username)}} data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">Refresh</button>\r\n                    <button type=\"button\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"offcanvas-body small\">\r\n                {\r\n                    \r\n                notifications.length !== 0 ?  \r\n                notifications.map(\r\n                        (notification) => {\r\n                            console.log(\"in card iteration\")\r\n                            return (\r\n                                <>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">{notification.sender}</h5>\r\n                                        <p class=\"card-text\">{notification.status}</p>\r\n                                        {notification.request === \"sent\"?<>\r\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onClick={(e)=>{onClick(e,notification.sender,notification.receiver,\"accept\")}}>Accept</button>\r\n                                        <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onClick={(e)=>{onDeny(e,notification.sender,notification.receiver,\"deny\")}}>Deny X</button>\r\n                                        </>\r\n                                        :\r\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onClick={(e)=>{onClick(e,notification.sender,notification.receiver,\"done\",notification.info)}}>Confirm</button>\r\n                                              \r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                 )\r\n                            \r\n                        }\r\n                    ):\r\n                        <>\r\n                            <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                This is some text within a card body.\r\n                            </div>\r\n                            </div>\r\n                                \r\n\r\n                        </>\r\n                    }      \r\n                </div>\r\n            </div>\r\n                    \r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"state noti : \",state.notifications)\r\n    console.log(state.notifications.notify_list)\r\n    return {\r\n    notifications:state.notifications.notify_list,\r\n    username:state.profile.username\r\n    //these are the variables passed as props globally tomaintain state of application\r\n}}\r\n\r\nexport default connect(mapStateToProps,{store_friend_connection,send_notification,get_notification_list})(Notification);","\r\nimport {ADD_FRIEND_FAIL, ADD_FRIEND_SUCCESS, GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS} from './types'\r\nimport axios from 'axios'\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n//GET FRIEND LIST\r\nexport const get_friend_list = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n    console.log(\"in get friend\")\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/getfriends`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            console.log(res)\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//GET FRIEND LIST\r\n// export const get_searched_user_list = ( username )=>async dispatch => {\r\n//     console.log(\"aa gaya\")\r\n//     const config = {\r\n//         headers : {\r\n//             'Accept':'application/json',\r\n//             'Content-Type':'application/json',\r\n//             'X-CSRFToken':Cookies.get('csrftoken') \r\n//         }\r\n//     };\r\n\r\n//     const body = JSON.stringify({\r\n//        'username' : username,\r\n//     })\r\n\r\n//     try {\r\n        \r\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\r\n\r\n//         if(res.data.error) {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_FAIL,\r\n//             })\r\n//         }\r\n//         else {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_SUCCESS,\r\n//                 payload:res.data\r\n            \r\n//             })\r\n//         }\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type:GET_SEARCHED_FRIENDS_FAIL\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n//STORE FRIEND\r\n\r\nexport const store_friend_connection = (username,friend,connectionid=\"\")=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') //no need when get request is made\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'user':username,\r\n        'friend_username':friend,\r\n        'connectionid':connectionid,\r\n    })\r\n    console.log(\"info : inreq : \",connectionid)\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/friends/addfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:ADD_FRIEND_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:ADD_FRIEND_SUCCESS,\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ADD_FRIEND_FAIL\r\n        })\r\n    }\r\n}\r\n//Delete Friend\r\nexport const del_friend = ( username )=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            //'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/delfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}","import React, { Fragment } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { logout } from \"../actions/auth\";\r\nimport Feedback from \"./Feedback\";\r\nimport Notification from './Notifications'\r\nconst navbar = ({ isAuthenticated, logout, chatState,username }) => {\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" exact to=\"/login\">Login</NavLink>\r\n                {/* NavLinks apply the active class when URL is same as their path */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" exact to=\"/register\">Register</NavLink>\r\n                {/* NavLinks apply the active class when URL is same as their path */}\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <Notification className=\"nav-link\" />\r\n                {/* <NavLink className=\"nav-link\" exact to=\"/dashboard\">Update Profile</NavLink> */}\r\n                {/* NavLinks apply the active class when URL is same as their path */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} href=\"#!\">Logout</a>\r\n                {/* NavLinks apply the active class when URL is same as their path \r\n            </li> */}\r\n        </Fragment>\r\n    );\r\n    \r\n    const onClickLogout = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"Onclick wala : \",username)\r\n        logout(username)\r\n\r\n    }\r\n\r\n    const chatLinks = (\r\n        <Fragment >\r\n\r\n\r\n            <ul className=\"nav nav-pills nav-fill float-end d-flex align-self-start\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link \" onClick={() => { console.log(\"Clicked\") }} exact to=\"/friends\">Friends</NavLink>\r\n                    {/* NavLinks apply the active class when URL is same as their path */}\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" onClick={chatState} exact to=\"/chats\">Chats</NavLink>\r\n                </li> */}\r\n                <li className=\"nav-item btn-group btn-group-sm\">\r\n                   \r\n                        <button type=\"button\" class=\"btn btn-light\">{username}</button>\r\n                        <button type=\"button\" class=\"btn btn-light dropdown-toggle dropdown-toggle-split\" id=\"dropdownMenuReference\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" data-bs-reference=\"parent\">\r\n                            <span class=\"visually-hidden\">Toggle Dropdown</span>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu dropdown-menu-end dropdown-menu-light\" aria-labelledby=\"dropdownMenuReference\">\r\n                            <li>\r\n                                \r\n                                <NavLink className=\"dropdown-item\" onClick={chatState} exact to=\"/chats\">Profile</NavLink>\r\n                                \r\n                            </li>\r\n                            <li>\r\n                                \r\n                                <NavLink className=\"dropdown-item\" onClick={chatState} exact to=\"/dashboard\">Update Profile</NavLink>    \r\n                                \r\n                            </li>\r\n                            <li>\r\n                                <a className=\"dropdown-item\" onClick={(e)=>{onClickLogout(e)}} href=\"#!\">Logout</a>\r\n                            </li>\r\n                            <li><hr className=\"dropdown-divider\"/></li>\r\n                            <li></li>\r\n                        </ul>\r\n                    \r\n                </li>\r\n\r\n            </ul>\r\n\r\n        </Fragment>\r\n    );\r\n\r\n    let togglerStyle = {\r\n        marginLeft: '3px'\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-light  bg-light\">\r\n            <div className=\"container-fluid w-25\" style={togglerStyle}>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <Link className=\"navbar-brand\" exact to=\"/\">Chatter-Box</Link>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" exact to=\"/\">Home</NavLink>\r\n                            {/* NavLinks apply the active class when URL is same as their path */}\r\n                        </li>\r\n                        {/* {is user authenticated ? dashboard and logout (authlinks) : login and signup (guestlinks)} */}\r\n                        <div>{isAuthenticated}</div>\r\n                        {isAuthenticated ? authLinks : guestLinks}\r\n                        <li className=\"nav-item\">\r\n                            <Feedback className=\"nav-link\" />\r\n                            {/* NavLinks apply the active class when URL is same as their path */}\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n            {isAuthenticated ? chatLinks : \"\"}\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    username: state.profile.username\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(navbar);\r\n","import React, { Fragment,useEffect } from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated } from \"../actions/auth\";\r\nimport { load_user } from \"../actions/profile\";\r\n\r\nconst Layout = ({ children, checkAuthenticated, load_user })=> {\r\n    // console.log(\"Children => \",children)\r\n\r\n    useEffect(() => {\r\n        checkAuthenticated(); //checks authenticated or not upon every render once\r\n        load_user(); //after authenticationChaeck status user will be loaded\r\n    }, [])\r\n\r\n    let inputTextStyle = {\r\n        maxWidth:'20rem',\r\n        boxShadow:'none'\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Navbar design={inputTextStyle}/>\r\n        {children}\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null,{checkAuthenticated,load_user})(Layout);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst home = ()=> (\r\n    <div className=\"container\">\r\n        <div className=\"mt-5 p-5 bg-light\">\r\n            <h1 className=\"display-4\">Welcome to the ChatApp</h1>\r\n            <p className=\"lead\">\r\n                This is wonderful application to Chat..\r\n            </p>\r\n            <hr className=\"my-4\"/>\r\n            <p>Click the button below to Login</p>\r\n            <Link className=\"btn btn-primary btn-lg\" exact to=\"/login\">Login</Link>\r\n        </div>\r\n        \r\n    </div>\r\n);\r\n\r\nexport default home;\r\n","\r\nimport React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst CSRFToken = () =>{\r\n\r\n    const [csrftoken, setcsrftoken] = useState('')\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        console.log(\"IN CSRF : \"+cookieValue)\r\n        return cookieValue;\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const fetchData = async ()=> {\r\n            try{\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`)\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        }\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'))\r\n\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n    );\r\n}\r\n\r\nexport default CSRFToken;","import React,{useState} from \"react\";\r\nimport { register } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect ,Link} from \"react-router-dom\";\r\n\r\nimport CSRFToken from \"../components/CSRFToken\";\r\n\r\nconst Register = ({register,isAuthenticated})=> {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username:'',\r\n        password:'',\r\n        re_password:''\r\n    })\r\n\r\n    const [accountCreatedStatus,setAccountCreatedStatus] = useState(false)\r\n\r\n    const {username,password,re_password} = formData\r\n    \r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(password === re_password) {\r\n            //then hit register action\r\n            register(username,password,re_password);\r\n            setAccountCreatedStatus(true);\r\n        }\r\n\r\n    }\r\n\r\n    if(isAuthenticated)\r\n        return <Redirect exact to='/dashboard'/>\r\n    else if (accountCreatedStatus)\r\n        return <Redirect exact to='/login'/>\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Register for an Account</h1>\r\n            <p>Enter your profile info..</p>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <CSRFToken/>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">\r\n                        Username:\r\n                    </label>\r\n                    <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Username\" \r\n                        name=\"username\"\r\n                        id=\"username\" \r\n                        value={username}\r\n                        onChange={e => onChange(e)} \r\n                        required/>\r\n                </div>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">\r\n                        Password:\r\n                    </label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Password\" \r\n                        name=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6' \r\n                        required/>\r\n                </div><div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"re_password\" className=\"form-label\">\r\n                        Confirm Password:\r\n                    </label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Confirm Password\" \r\n                        name=\"re_password\"\r\n                        id=\"re_password\" \r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6' \r\n                        required/>\r\n                </div>\r\n                <button className=\"btn btn-primary mt-3\" type='submit'>Register</button>\r\n            </form>\r\n            <p className=\"mt-3\">Already have an account? <Link exact to='/login'>Sign In</Link></p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated:state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps,{register})(Register);\r\n","import React,{useState} from \"react\";\r\nimport { login } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect ,Link} from \"react-router-dom\";\r\n\r\nimport CSRFToken from \"../components/CSRFToken\";\r\n\r\nconst Login = ({login,isAuthenticated})=> {\r\n\r\n    const [formData, setFormData] = useState({\r\n        username:'',\r\n        password:'',\r\n    })\r\n\r\n    \r\n\r\n    const {username,password} = formData\r\n    \r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(password.length > 6) {   \r\n            //then hit register action\r\n            login(username,password);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect exact to='/friends'/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Sign In</h1>\r\n            <p>To your ChatApp</p>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <CSRFToken/>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">\r\n                        Username:\r\n                    </label>\r\n                    <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Username\" \r\n                        name=\"username\"\r\n                        id=\"username\" \r\n                        value={username}\r\n                        onChange={e => onChange(e)} \r\n                        required/>\r\n                </div>\r\n                <div className=\"form-group mt-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">\r\n                        Password:\r\n                    </label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Password\" \r\n                        name=\"password\"\r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6' \r\n                        required/>\r\n                </div>\r\n                <button className=\"btn btn-primary mt-3\" type='submit'>Sign In</button>\r\n            </form>\r\n            <p className=\"mt-3\">Don't have an account? <Link exact to='/register'>Sign Up</Link></p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated:state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps,{login})(Login);\r\n","import React,{useState,useEffect} from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport { update_user_profile } from \"../actions/profile\";\r\nimport { delete_account } from \"../actions/auth\";\r\n\r\nconst Dashboard = ({\r\n    delete_account,\r\n    update_user_profile,\r\n    first_name_global,\r\n    last_name_global,\r\n    phone_global,\r\n    city_global,\r\n\r\n})=> {\r\n\r\n    \r\n\r\n    const [formData, setFormData] = useState({\r\n        first_name:'',\r\n        last_name:'',\r\n        phone:'',\r\n        city:'',\r\n    })\r\n\r\n    \r\n\r\n    const { first_name, last_name, phone, city} = formData\r\n    \r\n    //For initial global values\r\n    useEffect(() => {\r\n       setFormData({\r\n        first_name:first_name_global,\r\n        last_name:last_name_global,\r\n        phone:phone_global,\r\n        city:city_global,\r\n       });\r\n    }, [first_name_global,last_name_global,phone_global,city_global])\r\n\r\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value}) \r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        update_user_profile( first_name, last_name, phone, city);//it async function\r\n    }   \r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <h1 className=\"mt-3\">Welcome to User Dashboard</h1>\r\n            <p className=\"mt-3 mb-3\">Update User Profiel Below..</p>\r\n                <form onSubmit={e=>onSubmit(e)}>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"first_name\">First Name:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"first_name\"\r\n                            placeholder={first_name_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={first_name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"last_name\">Last Name:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"last_name\"\r\n                            placeholder={last_name_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={last_name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"phone\">Phone:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"number\"                            \r\n                            name=\"phone\"\r\n                            placeholder={phone_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={phone}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor=\"city\">City:</label>\r\n                        <input \r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"city\"\r\n                            placeholder={city_global}\r\n                            onChange={e=>onChange(e)}\r\n                            value={city}\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n                        Update\r\n                    </button>\r\n                </form>\r\n                <p className=\"mt-5\">Click the button below to delete your User Account : </p>\r\n                <a className=\"btn btn-danger\" href=\"#!\" onClick={delete_account}>\r\n                    Delete Account\r\n                </a>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    username : state.profile.username,\r\n    first_name_global:state.profile.first_name,\r\n    last_name_global:state.profile.last_name,\r\n    phone_global:state.profile.phone,\r\n    city_global:state.profile.city,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n})\r\n\r\nexport default connect(mapStateToProps,{delete_account ,update_user_profile})(Dashboard);\r\n","import React, { Fragment,useState,useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function ChatUI({ title, onDelete,params }) {\r\n    // To access props from react routers useLocation hook is used\r\n    const location = useLocation()\r\n    console.log(\"PARAMS : \",location.params)\r\n    const [friendGroup, setfriendGroup] = useState(location.params)\r\n    //*************************************************************** */\r\n\r\n    //*******WEB SOCKETS********************************************* */\r\n\r\n        \r\n    const roomName = friendGroup.connectionid;\r\n    /****///\r\n    \r\n    class LoadOldMessagesStatus {\r\n        static loaded = false\r\n        static loadmsgcount = 1\r\n        static loadValue() {\r\n            return this.loaded;\r\n        }\r\n    }    \r\n\r\n    let sender =\"\";\r\n    \r\n    /**/\r\n    let  chatSocket = new WebSocket(\r\n        'ws://'\r\n        + window.location.host\r\n        + '/ws/chat/'\r\n        + roomName\r\n        + '/'\r\n    );;\r\n    \r\n    useEffect(() => {\r\n        \r\n    }, []) \r\n\r\n    const [chatmessages, setchatmessages] = useState([])\r\n    const [textItem, settextItem] = useState(\"\")\r\n\r\n\r\n    const onChange = (e)=>{\r\n        settextItem(e.target.value)\r\n    }\r\n\r\n\r\n    chatSocket.onmessage = function(e) {\r\n        const data = JSON.parse(e.data);\r\n        console.log(data)\r\n        // if(data.messagestamp == 'new' || (data.messagestamp == 'old' && !LoadOldMessagesStatus.loadValue())) {\r\n            setchatmessages([...chatmessages,data])\r\n            // if(data.sender === sender)\r\n                // document.querySelector('#chat-log').value += ('\\t\\t\\t'+data.message+'\\n')\r\n            // else    \r\n                //document.querySelector('#chat-log').value += (data.message + '\\n');\r\n            \r\n            // if (data.messagestamp == 'old') {\r\n            //     LoadOldMessagesStatus.loadmsgcount = data.messagecount\r\n            //     if (LoadOldMessagesStatus.loadmsgcount == 1){\r\n            //         LoadOldMessagesStatus.loaded = true;\r\n            //     }\r\n            // }    \r\n\r\n        // }\r\n    };\r\n\r\n    chatSocket.onclose = function(e) {\r\n        console.error('Chat socket closed unexpectedly');\r\n    };\r\n\r\n    // document.querySelector('#chat-message-input').focus();\r\n    // document.querySelector('#chat-message-input').onkeyup = function(e) {\r\n    //     if (e.keyCode === 13) {  // enter, return\r\n    //         document.querySelector('#chat-message-submit').click();\r\n    //     }\r\n    // };\r\n\r\n        const onclick = function(e) {\r\n       \r\n        const message = textItem;\r\n        sender =   friendGroup.username;\r\n        chatSocket.send(JSON.stringify({\r\n            'message': message,\r\n            'sender' : sender\r\n        }));\r\n        \r\n        settextItem(\"\")\r\n        // document.querySelector(\"#chat-message-sender\").value = \"\";\r\n    };\r\n\r\n\r\n    //*/*//////////////////////////////////////////////////////////////\r\n\r\n\r\n    //**************************************************************** */\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='container-fluid p-2'>\r\n                <nav class=\"navbar navbar-dark bg-primary\">\r\n                    <div class=\"container-fluid\">\r\n                        <NavLink className=\"btn btn-light\" exact to=\"/friends\">Back</NavLink>\r\n                        <h3>{friendGroup.friend}</h3>\r\n                    </div>\r\n                </nav>    \r\n                <div className='overflow-auto'>\r\n                    {\r\n                        chatmessages.length !== 0?\r\n                            chatmessages.map((message)=>{\r\n                                return(\r\n                                    <>\r\n                                    {message.data}\r\n                                    </>\r\n                                )\r\n                            })\r\n                        :\r\n                        \"No Messages\"\r\n                    }\r\n                    {/* CHAT COMPONENT */}\r\n                </div>\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <div class=\"container-fluid\">\r\n                    <input type=\"text\" id=\"chat-message-submit\" onChange={(e)=>{onChange(e)}} className='form-control w-50 mx-auto' />\r\n                    <a class=\"btn btn-success mx-auto\" onClick={(e)=>{onclick(e)}} href=\"#\">Send</a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { send_notification } from '../actions/notification'\r\nconst FriendCard = ({ friend, onDelete ,username ,send_notification,tag})=> {\r\n    let cardStyle = {\r\n       \r\n        minWidth:\"15rem\",\r\n        maxWidth:\"20rem\"\r\n    }\r\n    console.log(\"SENDER : \",username)\r\n    console.log(\"FREND : \",friend)\r\n    console.log(\"friend : \",friend.username)\r\n    console.log(\"TAG : \",tag)\r\n    return (\r\n        <>\r\n        <div className=\"card d-flex border border-dark m-2\" style={cardStyle}>\r\n            <div className=\"card-header border-success\">{friend.friend}</div>\r\n            <div className=\"card-body text-dark\">\r\n                <h5 className=\"card-title\">Task</h5>\r\n                <p className=\"card-text\">{}Busy</p>\r\n            </div>\r\n            <div className=\"card-footer bg-transparent border-success\">\r\n                <button className=\"btn btn-sm btn-outline-danger \" onClick={() => onDelete(username)}> Profile </button>\r\n                {\r\n                 friend.tag === \"friend\" || tag === \"friend\"?\r\n                 <Link className=\"btn btn-primary btn-sm\"  exact to={{pathname:`/chats/${friend.connectionid}`,params:friend}}>Chat</Link>\r\n                 :   \r\n                <button className=\"btn btn-sm btn-outline-primary\" onClick={() => send_notification(username,friend.username,\"sent\",\"\")}> + Add Friend </button>\r\n                    \r\n                            \r\n                }   \r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    username : state.profile.username,\r\n    \r\n})\r\nexport default connect(mapStateToProps,{send_notification})(FriendCard);\r\n","import React, { Fragment ,useState,useEffect} from \"react\";\r\nimport { get_searched_user_list } from '../actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport { get_friend_list } from \"../actions/friends\";\r\nimport { del_friend } from '../actions/friends'\r\n// import { update_user_profile } from \"../actions/profile\";\r\n// import { delete_account } from \"../actions/auth\";\r\nimport '../styles/friends.css'\r\nimport FriendCard from \"./FriendCard\";\r\n\r\nconst Friends = ({get_searched_user_list,get_friend_list,searchedUser,friendlist,user_name}) => {\r\n\r\n    console.log(\"Searched User : \",searchedUser)\r\n\r\n\r\n    const [searchItem, setSearchItem] = useState(\"\")\r\n    const [searchList, setsearchList] = useState(friendlist)\r\n    const onChange = e => setSearchItem(e.target.value)\r\n\r\n    useEffect(()=>{\r\n        get_friend_list()   \r\n    },[]);\r\n    \r\n    useEffect(()=>{\r\n        setsearchList(friendlist)\r\n        friendTag()\r\n        console.log(\"DRUGS\")\r\n    },[friendlist])\r\n    \r\n    useEffect(()=>{\r\n        deleteCommonElements(friendlist,searchedUser);    \r\n    },[searchedUser])\r\n\r\n    \r\n    console.log(\"SearchList : \",searchList)\r\n    console.log(\"FriendList : \",friendlist)\r\n\r\n    const onClick = (e) => {\r\n        // Check in friend list\r\n        let flag = 0;\r\n        if(friendlist.length != 0){\r\n             // Check in friend list\r\n                let list = friendlist.filter(checkUsername)\r\n                if(list.length != 0){    \r\n                    setsearchList(list); \r\n                    flag = 1;\r\n                }           \r\n                 \r\n        }\r\n        // Check in searched users list\r\n        if(searchedUser.length != 0 && flag === 0) {\r\n            let list = searchedUser.filter(checkUsername);\r\n            if(list.length != 0){    \r\n                setsearchList(list)\r\n                flag = 1;\r\n            }\r\n           \r\n        }\r\n        //Check all\r\n        if(flag == 0){\r\n           get_searched_user_list(searchItem)   \r\n        }        \r\n    }\r\n    const checkUsername = (user)=>{\r\n       return user.username.includes(searchItem)        \r\n    }\r\n\r\n    const deleteCommonElements = (friendlist,searchedUser) =>{\r\n            \r\n        searchedUser.map((elem)=>{\r\n            friendlist.map(friend=>{\r\n                if(friend[\"username\"] !== elem[\"username\"]){\r\n                    elem[\"tag\"] = \"not friend\"\r\n                }\r\n                else {\r\n                    elem[\"tag\"] = \"friend\"\r\n                }\r\n\r\n            })\r\n        })\r\n\r\n        searchedUser = searchedUser.filter((elem)=>{\r\n            return elem[\"tag\"] !== \"friend\"\r\n        })\r\n        \r\n            setsearchList(friendlist.concat(searchedUser))\r\n                 \r\n    }\r\n      \r\n\r\n    const friendTag = ()=> {\r\n        friendlist.map((friend)=>{\r\n            friend[\"tag\"] = \"friend\"\r\n        })\r\n        setsearchList(friendlist)\r\n        console.log(\"FEDN ls:\",friendlist)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"navbar navbar-expand-sm w-100\">\r\n            <form action=\"\">\r\n                <div class=\"input-group input-group-sm m-2  float-start\">\r\n                    <input type=\"text\" onChange={e=>onChange(e)} id=\"searchbar\" className=\"form-control \" placeholder=\"Enter username\" aria-label=\"Recipient's username\" aria-describedby=\"searchbtn\"/>\r\n                    <button class=\"btn btn-outline-secondary btn-sm\" onClick={e => onClick(e)} type=\"button\" id=\"searchbtn\">Search</button>\r\n                </div>\r\n                \r\n            </form>\r\n            \r\n            </div>\r\n\r\n            <div className=\"card-group\" >\r\n                {searchList === undefined ? <>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            ChatApp\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <blockquote class=\"blockquote mb-0\">\r\n                                <h1>No Friends !</h1>\r\n                                <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">ADD FRIENDS</cite></footer>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                     searchItem == \"\" ?\r\n                        friendlist.map(\r\n                            (myfriend) => {\r\n                                console.log(\"in card iteration\")\r\n                                return (\r\n                                    <FriendCard tag={{\"tag\":\"friend\"}} friend={myfriend} />\r\n                                )\r\n                            }\r\n                        )\r\n                        :\r\n                        searchList.map(\r\n                            (myfriend) => {\r\n                                console.log(\"in card iteration\")\r\n                                return (\r\n                                    <FriendCard tag={{\"tag\":\"mixed\"}} friend={myfriend} />\r\n                                )\r\n                            }\r\n                        )      \r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {console.log(state.profile);\r\n\r\n    console.log(\r\n        \"Auth : \",state.auth\r\n    )\r\n    \r\n    console.log(\"=> \",state.friends)\r\n    // console.log(state.friends[0])    \r\n    return {\r\n    friendlist_global: state.friends,\r\n    groups_global: state.groups,\r\n    searchedUser:state.friends.searchedUser,\r\n    friendlist:state.friends.friendlist,\r\n    user_name:state.profile.username\r\n    // username:state.profile.username,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n}}\r\nexport default connect(mapStateToProps,{get_searched_user_list,get_friend_list})(Friends);\r\n// export default Friends;\r\n/*\r\n/* export default connect(mapStateToProps, { del_friend })(Friends);**/\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route,Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component,isAuthenticated, ...rest})=> ( // ...rest = >est of the props\r\n    \r\n    <Route\r\n    {...rest}\r\n    render={ props=> isAuthenticated ? <Component {...props}/>:<Redirect to='/login'/> }\r\n    />\r\n)\r\n\r\nconst mapStateToProps = state=>({\r\n    isAuthenticated :state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(PrivateRoute)","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    FEEDBACK_SEND_FAIL,\r\n    FEEDBACK_SEND_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    // username: '', no need as after login profile is being fetched\r\n    \r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                 ...state,\r\n                 isAuthenticated:payload\r\n             }\r\n             \r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n    \r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                username: payload\r\n            }    \r\n        \r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                isAuthenticated:false,\r\n                username:''\r\n            }     \r\n        \r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:  \r\n        case LOGOUT_FAIL:  \r\n        case DELETE_USER_FAIL:\r\n        case FEEDBACK_SEND_FAIL:\r\n        case FEEDBACK_SEND_SUCCESS:    \r\n                return state; \r\n         \r\n                \r\n                \r\n                \r\n                \r\n        default: return state    \r\n\r\n}\r\n\r\n}","import {\r\n    LOAD_USER_PROFILE_FAIL,\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: '',\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case UPDATE_USER_PROFILE_SUCCESS:\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username:payload.username,\r\n                first_name:payload.profile.first_name,\r\n                last_name:payload.profile.last_name,\r\n                phone:payload.profile.phone,\r\n                city:payload.profile.city\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username:'',\r\n                first_name:'',\r\n                last_name:'',\r\n                phone:'',\r\n                city:'',\r\n            }   \r\n        case UPDATE_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n           \r\n        default: return state    \r\n\r\n}\r\n\r\n}","import {\r\n    ADD_FRIEND_FAIL,ADD_FRIEND_SUCCESS,\r\n    GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n    GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    friendlist:[],\r\n    searchedUser:[],\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case GET_FRIENDS_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                friendlist:\r\n                    payload.data\r\n                \r\n            }\r\n        case GET_SEARCHED_FRIENDS_SUCCESS:    \r\n             console.log(\"Payload\",payload.data)   \r\n             return {\r\n                 ...state,\r\n                 searchedUser:payload.data\r\n    } \r\n        case ADD_FRIEND_SUCCESS:\r\n        case GET_FRIENDS_FAIL:        \r\n        case GET_SEARCHED_FRIENDS_FAIL:        \r\n        case ADD_FRIEND_FAIL:\r\n            return {\r\n                ...state\r\n    }\r\n           \r\n        default: return {...state}    \r\n\r\n}\r\n\r\n}","import { GET_NOTIFICATIONS_FAIL,GET_NOTIFICATIONS_SUCCESS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    notify_list : []\r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case GET_NOTIFICATIONS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                notify_list : payload.data\r\n                \r\n            }\r\n                \r\n                \r\n       case GET_NOTIFICATIONS_FAIL:         \r\n        default: return {...state}    \r\n\r\n}\r\n\r\n}","import {combineReducers} from 'redux';\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport friends from './friends'\r\nimport notifications from './notifications';\r\nexport default combineReducers({\r\n    auth,\r\n    profile,\r\n    friends,\r\n    notifications,\r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n/*Redux thunk allows us to disptach actions like GET,POST api requests asynchronously and resolve each promise that gets returned*/  \r\nconst initialState = {}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store  = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n    );\r\n\r\nexport default store;    ","import React from 'react'\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\r\n\r\nimport Layout from './higherOrderComponents/Layout'\r\n\r\nimport Home from './containers/Home'\r\nimport Register from './containers/Register'\r\nimport Login from './containers/Login'\r\nimport Dashboard from './containers/Dashboard'\r\nimport Chat from \"./containers/Chat\";\r\n// import friends from './reducers/friends'\r\nimport Friends from './containers/Friends'\r\nimport PrivateRoute from './higherOrderComponents/PrivateRoute'\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store' \r\nimport './styles/friends.css'\r\nimport './styles/general.css'\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n                <Layout>\r\n                        <Route exact path='/' component={Home}/>\r\n                        \r\n                        <Route exact path='/register' component={Register}/>\r\n                        <Route exact path='/login' component={Login}/>\r\n                        <PrivateRoute exact path='/friends' component={Friends}/>\r\n                        <PrivateRoute exact path='/dashboard' component={Dashboard}/>\r\n                        \r\n                        <PrivateRoute exact path=\"/chats/:id\"  component={Chat} />\r\n\r\n                </Layout>\r\n        </Router>    \r\n    </Provider>\r\n\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}