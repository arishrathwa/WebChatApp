{"ast":null,"code":"import _regeneratorRuntime from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';//For making API requests and handle responses like fetch api\nimport{REGISTER_SUCCESS,REGISTER_FAIL,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT_FAIL,LOGOUT_SUCCESS,AUTHENTICATED_FAIL,AUTHENTICATED_SUCCESS,DELETE_USER_FAIL,DELETE_USER_SUCCESS,FEEDBACK_SEND_FAIL,FEEDBACK_SEND_SUCCESS,GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS}from'../actions/types';import Cookies from'js-cookie';import{load_user}from'./profile';//CHECK AUTHENTICATED OR NOT\nexport var checkAuthenticated=function checkAuthenticated(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':\"\".concat(Cookies.get('csrftoken'))//no need of for get request getting auth status\n}};body=JSON.stringify({});_context.prev=2;_context.next=5;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/authenticated\"),body,config);case 5:res=_context.sent;if(res.data.error||res.data.isAuthenticated==='error'){dispatch({type:AUTHENTICATED_FAIL,payload:false});}else if(res.data.isAuthenticated==='success'){dispatch({type:AUTHENTICATED_SUCCESS,payload:true});}else{// it will act when user accessing view without authentication cookies\ndispatch({type:AUTHENTICATED_FAIL,payload:false});}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);dispatch({type:AUTHENTICATED_FAIL,payload:false});case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//LOGIN\nexport var login=function login(username,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({username:username,password:password});_context2.prev=2;_context2.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/login\"),body,config);case 5:res=_context2.sent;if(res.data.error){dispatch({type:LOGIN_FAIL});}else{dispatch({type:LOGIN_SUCCESS// payload:res.data.username as profile is getting fetched after this\n});//load the user action dispatch after this\ndispatch(load_user());}_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);dispatch({type:LOGIN_FAIL});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//REGISTER\nexport var register=function register(username,password,re_password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(Cookies.get('csrftoken'));config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':\"\".concat(Cookies.get('csrftoken'))}};body=JSON.stringify({username:username,password:password,re_password:re_password});_context3.prev=3;_context3.next=6;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/register\"),body,config);case 6:res=_context3.sent;if(res.data.error){dispatch({type:REGISTER_FAIL});}else{dispatch({type:REGISTER_SUCCESS});}_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](3);dispatch({type:REGISTER_FAIL});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[3,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};//LOGOUT\nexport var logout=function logout(username){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':\"\".concat(Cookies.get('csrftoken'))}};console.log(\"logout wala : \",username);body=JSON.stringify({'withCredentials':true,'username':username});_context4.prev=3;_context4.next=6;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/logout\"),body,config);case 6:res=_context4.sent;if(res.data.error){dispatch({type:LOGOUT_FAIL});}else{dispatch({type:LOGOUT_SUCCESS});//load the user action dispatch after this\n}_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](3);dispatch({type:LOGOUT_FAIL});case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[3,10]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};//DELETE USER\nexport var delete_account=function delete_account(){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:console.log(\"Arrived\");config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':\"\".concat(Cookies.get('csrftoken'))}};console.log(Cookies.get('csrftoken'));body=JSON.stringify({'withCredentials':true});_context5.prev=4;_context5.next=7;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/delete\"),body,config);case 7:res=_context5.sent;if(res.data.success){dispatch({type:DELETE_USER_SUCCESS});}else{dispatch({type:DELETE_USER_FAIL});}_context5.next=14;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](4);dispatch({type:DELETE_USER_FAIL});case 14:case\"end\":return _context5.stop();}}},_callee5,null,[[4,11]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};//Feedback Sending\nexport var sendFeedback=function sendFeedback(feedback,sender){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({'feedback':feedback,'sender':sender});_context6.prev=2;_context6.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/feedback\"),body,config);case 5:res=_context6.sent;if(res.data.error){dispatch({type:FEEDBACK_SEND_FAIL});}else{alert(res.data.success);dispatch({type:FEEDBACK_SEND_SUCCESS// payload:res.data.username as profile is getting fetched after this\n});//load the user action dispatch after this\ndispatch(load_user());}_context6.next=12;break;case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](2);dispatch({type:LOGIN_FAIL});case 12:case\"end\":return _context6.stop();}}},_callee6,null,[[2,9]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};//GET SEARCHED USER LIST\n//GET FRIEND LIST\nexport var get_searched_user_list=function get_searched_user_list(username){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:console.log(\"aa gaya\",username);config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({'username':username});_context7.prev=3;_context7.next=6;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/get_searched_users\"),body,config);case 6:res=_context7.sent;if(res.data.error){dispatch({type:GET_SEARCHED_FRIENDS_FAIL});}else{console.log(\"Ori : \",res.data);dispatch({type:GET_SEARCHED_FRIENDS_SUCCESS,payload:res.data});}_context7.next=13;break;case 10:_context7.prev=10;_context7.t0=_context7[\"catch\"](3);dispatch({type:GET_SEARCHED_FRIENDS_FAIL});case 13:case\"end\":return _context7.stop();}}},_callee7,null,[[3,10]]);}));return function(_x7){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT_FAIL","LOGOUT_SUCCESS","AUTHENTICATED_FAIL","AUTHENTICATED_SUCCESS","DELETE_USER_FAIL","DELETE_USER_SUCCESS","FEEDBACK_SEND_FAIL","FEEDBACK_SEND_SUCCESS","GET_SEARCHED_FRIENDS_FAIL","GET_SEARCHED_FRIENDS_SUCCESS","Cookies","load_user","checkAuthenticated","dispatch","config","headers","get","body","JSON","stringify","process","env","REACT_APP_API_URL","res","data","error","isAuthenticated","type","payload","login","username","password","post","register","re_password","console","log","logout","delete_account","success","sendFeedback","feedback","sender","alert","get_searched_user_list"],"mappings":"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","sourcesContent":["import axios from 'axios' //For making API requests and handle responses like fetch api\r\nimport { REGISTER_SUCCESS,REGISTER_FAIL,\r\n            LOGIN_FAIL,LOGIN_SUCCESS,\r\n            LOGOUT_FAIL,LOGOUT_SUCCESS,\r\n            AUTHENTICATED_FAIL,AUTHENTICATED_SUCCESS,\r\n            DELETE_USER_FAIL,DELETE_USER_SUCCESS,\r\n            FEEDBACK_SEND_FAIL,FEEDBACK_SEND_SUCCESS,\r\n            GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n        } from '../actions/types'\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nimport { load_user } from './profile'\r\n//CHECK AUTHENTICATED OR NOT\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n             'X-CSRFToken':`${Cookies.get('csrftoken')}`  //no need of for get request getting auth status\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({\r\n        \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`,body,config)\r\n\r\n       if(res.data.error || res.data.isAuthenticated === 'error') {\r\n           dispatch({\r\n               type:AUTHENTICATED_FAIL,\r\n               payload:false\r\n           })\r\n       }\r\n       else if(res.data.isAuthenticated === 'success'){\r\n           dispatch({\r\n               type:AUTHENTICATED_SUCCESS,\r\n               payload:true\r\n           })\r\n       }\r\n       else { // it will act when user accessing view without authentication cookies\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n       }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//LOGIN\r\n\r\nexport const login = (username,password) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({username,password})\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGIN_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                // payload:res.data.username as profile is getting fetched after this\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n            dispatch(load_user())\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n//REGISTER\r\nexport const register = (username,password,re_password) => async dispatch => {\r\n    console.log(Cookies.get('csrftoken'))\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    const body = JSON.stringify({username,password,re_password})\r\n\r\n    try {\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`,body,config);\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:REGISTER_FAIL\r\n            });\r\n        }else {\r\n            dispatch({\r\n                type:REGISTER_SUCCESS\r\n            });\r\n        }\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    }\r\n\r\n} \r\n\r\n//LOGOUT\r\nexport const logout = (username) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    console.log(\"logout wala : \",username)\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        'username':username\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGOUT_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGOUT_SUCCESS,\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGOUT_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//DELETE USER\r\nexport const delete_account = () => async dispatch => {\r\n    console.log(\"Arrived\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':`${Cookies.get('csrftoken')}`\r\n        }\r\n    };\r\n    console.log(Cookies.get('csrftoken'))\r\n    const body = JSON.stringify({\r\n        'withCredentials':true\r\n    })\r\n    \r\n    try {\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/delete`,body,config)\r\n        \r\n        if( res.data.success ){\r\n            dispatch({\r\n                type:DELETE_USER_SUCCESS,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:DELETE_USER_FAIL\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:DELETE_USER_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n//Feedback Sending\r\nexport const sendFeedback = (feedback,sender) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({'feedback':feedback\r\n        ,'sender':sender})\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/feedback`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:FEEDBACK_SEND_FAIL\r\n            })\r\n        }\r\n        else {\r\n            alert(res.data.success)\r\n            dispatch({\r\n                type:FEEDBACK_SEND_SUCCESS,\r\n                \r\n                // payload:res.data.username as profile is getting fetched after this\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n            dispatch(load_user())\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//GET SEARCHED USER LIST\r\n//GET FRIEND LIST\r\nexport const get_searched_user_list = username =>async dispatch => {\r\n    console.log(\"aa gaya\",username)\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       'username' : username,\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\r\n        \r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_SEARCHED_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {console.log(\"Ori : \",res.data)\r\n            dispatch({\r\n                type:GET_SEARCHED_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_SEARCHED_FRIENDS_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}