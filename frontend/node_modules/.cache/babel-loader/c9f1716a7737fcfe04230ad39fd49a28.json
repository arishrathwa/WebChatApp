{"ast":null,"code":"import _regeneratorRuntime from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{ADD_FRIEND_FAIL,ADD_FRIEND_SUCCESS,GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS}from'./types';import axios from'axios';import Cookies from'js-cookie';//GET FRIEND LIST\nexport var get_friend_list=function get_friend_list(username){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json'//'X-CSRFToken':Cookies.get('csrftoken') \n}};body=JSON.stringify({});_context.prev=2;_context.next=5;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/friends/getfriends\"),body,config);case 5:res=_context.sent;if(res.data.error){dispatch({type:GET_FRIENDS_FAIL});}else{dispatch({type:GET_FRIENDS_SUCCESS,payload:res.data});}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);dispatch({type:GET_FRIENDS_FAIL});case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//GET FRIEND LIST\n// export const get_searched_user_list = ( username )=>async dispatch => {\n//     console.log(\"aa gaya\")\n//     const config = {\n//         headers : {\n//             'Accept':'application/json',\n//             'Content-Type':'application/json',\n//             'X-CSRFToken':Cookies.get('csrftoken') \n//         }\n//     };\n//     const body = JSON.stringify({\n//        'username' : username,\n//     })\n//     try {\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\n//         if(res.data.error) {\n//             dispatch({\n//                 type:GET_SEARCHED_FRIENDS_FAIL,\n//             })\n//         }\n//         else {\n//             dispatch({\n//                 type:GET_SEARCHED_FRIENDS_SUCCESS,\n//                 payload:res.data\n//             })\n//         }\n//     } catch (error) {\n//         dispatch({\n//             type:GET_SEARCHED_FRIENDS_FAIL\n//         })\n//     }\n// }\n//STORE FRIEND\nexport var store_friend_connection=function store_friend_connection(username,friend,connectionid){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')//no need when get request is made\n}};body=JSON.stringify({'user':username,'friend_username':friend});_context2.prev=2;_context2.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/friends/addfriend\"),body,config);case 5:res=_context2.sent;if(res.data.error){dispatch({type:ADD_FRIEND_FAIL});}else{dispatch({type:ADD_FRIEND_SUCCESS});}_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);dispatch({type:ADD_FRIEND_FAIL});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//Delete Friend\nexport var del_friend=function del_friend(username){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json'//'X-CSRFToken':Cookies.get('csrftoken') \n}};body=JSON.stringify({});_context3.prev=2;_context3.next=5;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/friends/delfriend\"),body,config);case 5:res=_context3.sent;if(res.data.error){dispatch({type:GET_FRIENDS_FAIL});}else{dispatch({type:GET_FRIENDS_SUCCESS,payload:res.data});}_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](2);dispatch({type:GET_FRIENDS_FAIL});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[2,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/actions/friends.js"],"names":["ADD_FRIEND_FAIL","ADD_FRIEND_SUCCESS","GET_FRIENDS_FAIL","GET_FRIENDS_SUCCESS","GET_SEARCHED_FRIENDS_FAIL","GET_SEARCHED_FRIENDS_SUCCESS","axios","Cookies","get_friend_list","username","dispatch","config","headers","body","JSON","stringify","get","process","env","REACT_APP_API_URL","res","data","error","type","payload","store_friend_connection","friend","connectionid","post","del_friend"],"mappings":"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","sourcesContent":["\r\nimport {ADD_FRIEND_FAIL, ADD_FRIEND_SUCCESS, GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS} from './types'\r\nimport axios from 'axios'\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n//GET FRIEND LIST\r\nexport const get_friend_list = ( username )=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            //'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/getfriends`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//GET FRIEND LIST\r\n// export const get_searched_user_list = ( username )=>async dispatch => {\r\n//     console.log(\"aa gaya\")\r\n//     const config = {\r\n//         headers : {\r\n//             'Accept':'application/json',\r\n//             'Content-Type':'application/json',\r\n//             'X-CSRFToken':Cookies.get('csrftoken') \r\n//         }\r\n//     };\r\n\r\n//     const body = JSON.stringify({\r\n//        'username' : username,\r\n//     })\r\n\r\n//     try {\r\n        \r\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\r\n\r\n//         if(res.data.error) {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_FAIL,\r\n//             })\r\n//         }\r\n//         else {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_SUCCESS,\r\n//                 payload:res.data\r\n            \r\n//             })\r\n//         }\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type:GET_SEARCHED_FRIENDS_FAIL\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n//STORE FRIEND\r\n\r\nexport const store_friend_connection = (username,friend,connectionid)=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') //no need when get request is made\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'user':username,\r\n        'friend_username':friend,\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/friends/addfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:ADD_FRIEND_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:ADD_FRIEND_SUCCESS,\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ADD_FRIEND_FAIL\r\n        })\r\n    }\r\n}\r\n//Delete Friend\r\nexport const del_friend = ( username )=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            //'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/delfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}