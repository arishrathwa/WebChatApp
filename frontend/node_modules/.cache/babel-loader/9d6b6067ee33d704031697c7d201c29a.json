{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import{send_notification}from'../actions/notification';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var FriendCard=function FriendCard(_ref){var friend=_ref.friend,onDelete=_ref.onDelete,username=_ref.username,send_notification=_ref.send_notification,tag=_ref.tag;var cardStyle={minWidth:\"15rem\",maxWidth:\"20rem\"};console.log(\"SENDER : \",username);console.log(\"FREND : \",friend);console.log(\"friend : \",friend.username);console.log(\"TAG : \",tag);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"card d-flex border border-dark m-2\",style:cardStyle,children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header border-success\",children:friend.friend}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body text-dark\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:\"Task\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:\"Busy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-footer bg-transparent border-success\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-outline-danger \",onClick:function onClick(){return onDelete(username);},children:\" Profile \"}),friend.tag===\"friend\"||tag===\"friend\"?/*#__PURE__*/_jsx(Link,{className:\"btn btn-primary btn-sm\",exact:true,to:{pathname:\"/chats/\".concat(friend.connectionid),params:friend},children:\"Chat\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-outline-primary\",onClick:function onClick(){return send_notification(username,friend.username,\"sent\",\"\");},children:\" + Add Friend \"})]})]})});};var mapStateToProps=function mapStateToProps(state){return{username:state.profile.username};};export default connect(mapStateToProps,{send_notification:send_notification})(FriendCard);","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/containers/FriendCard.js"],"names":["React","connect","Link","send_notification","FriendCard","friend","onDelete","username","tag","cardStyle","minWidth","maxWidth","console","log","pathname","connectionid","params","mapStateToProps","state","profile"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,iBAAT,KAAkC,yBAAlC,C,6IACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAyD,IAAtDC,CAAAA,MAAsD,MAAtDA,MAAsD,CAA9CC,QAA8C,MAA9CA,QAA8C,CAApCC,QAAoC,MAApCA,QAAoC,CAA1BJ,iBAA0B,MAA1BA,iBAA0B,CAARK,GAAQ,MAARA,GAAQ,CACxE,GAAIC,CAAAA,SAAS,CAAG,CAEZC,QAAQ,CAAC,OAFG,CAGZC,QAAQ,CAAC,OAHG,CAAhB,CAKAC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAwBN,QAAxB,EACAK,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAuBR,MAAvB,EACAO,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAwBR,MAAM,CAACE,QAA/B,EACAK,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAqBL,GAArB,EACA,mBACI,sCACA,aAAK,SAAS,CAAC,oCAAf,CAAoD,KAAK,CAAEC,SAA3D,wBACI,YAAK,SAAS,CAAC,4BAAf,UAA6CJ,MAAM,CAACA,MAApD,EADJ,cAEI,aAAK,SAAS,CAAC,qBAAf,wBACI,WAAI,SAAS,CAAC,YAAd,kBADJ,cAEI,UAAG,SAAS,CAAC,WAAb,kBAFJ,GAFJ,cAMI,aAAK,SAAS,CAAC,2CAAf,wBACI,eAAQ,SAAS,CAAC,gCAAlB,CAAmD,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAACC,QAAD,CAAd,EAA5D,uBADJ,CAGKF,MAAM,CAACG,GAAP,GAAe,QAAf,EAA2BA,GAAG,GAAK,QAAnC,cACA,KAAC,IAAD,EAAM,SAAS,CAAC,wBAAhB,CAA0C,KAAK,KAA/C,CAAgD,EAAE,CAAE,CAACM,QAAQ,kBAAWT,MAAM,CAACU,YAAlB,CAAT,CAA0CC,MAAM,CAACX,MAAjD,CAApD,kBADA,cAGD,eAAQ,SAAS,CAAC,gCAAlB,CAAmD,OAAO,CAAE,yBAAMF,CAAAA,iBAAiB,CAACI,QAAD,CAAUF,MAAM,CAACE,QAAjB,CAA0B,MAA1B,CAAiC,EAAjC,CAAvB,EAA5D,4BANJ,GANJ,GADA,EADJ,CAuBH,CAjCD,CAmCA,GAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BX,QAAQ,CAAGW,KAAK,CAACC,OAAN,CAAcZ,QADK,CAAL,EAA7B,CAIA,cAAeN,CAAAA,OAAO,CAACgB,eAAD,CAAiB,CAACd,iBAAiB,CAAjBA,iBAAD,CAAjB,CAAP,CAA6CC,UAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { send_notification } from '../actions/notification'\r\nconst FriendCard = ({ friend, onDelete ,username ,send_notification,tag})=> {\r\n    let cardStyle = {\r\n       \r\n        minWidth:\"15rem\",\r\n        maxWidth:\"20rem\"\r\n    }\r\n    console.log(\"SENDER : \",username)\r\n    console.log(\"FREND : \",friend)\r\n    console.log(\"friend : \",friend.username)\r\n    console.log(\"TAG : \",tag)\r\n    return (\r\n        <>\r\n        <div className=\"card d-flex border border-dark m-2\" style={cardStyle}>\r\n            <div className=\"card-header border-success\">{friend.friend}</div>\r\n            <div className=\"card-body text-dark\">\r\n                <h5 className=\"card-title\">Task</h5>\r\n                <p className=\"card-text\">{}Busy</p>\r\n            </div>\r\n            <div className=\"card-footer bg-transparent border-success\">\r\n                <button className=\"btn btn-sm btn-outline-danger \" onClick={() => onDelete(username)}> Profile </button>\r\n                {\r\n                 friend.tag === \"friend\" || tag === \"friend\"?\r\n                 <Link className=\"btn btn-primary btn-sm\"  exact to={{pathname:`/chats/${friend.connectionid}`,params:friend}}>Chat</Link>\r\n                 :   \r\n                <button className=\"btn btn-sm btn-outline-primary\" onClick={() => send_notification(username,friend.username,\"sent\",\"\")}> + Add Friend </button>\r\n                    \r\n                            \r\n                }   \r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    username : state.profile.username,\r\n    \r\n})\r\nexport default connect(mapStateToProps,{send_notification})(FriendCard);\r\n"]},"metadata":{},"sourceType":"module"}