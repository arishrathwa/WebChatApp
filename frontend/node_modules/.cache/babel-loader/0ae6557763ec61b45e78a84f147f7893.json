{"ast":null,"code":"import _regeneratorRuntime from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Cookies from'js-cookie';import axios from'axios';import{LOAD_USER_PROFILE_FAIL,LOAD_USER_PROFILE_SUCCESS,UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS}from'./types';//To get user data\nexport var update_user_profile=function update_user_profile(first_name,last_name,phone,city){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({'withCredentials':true,first_name:first_name,last_name:last_name,phone:phone,city:city});_context.prev=2;_context.next=5;return axios.put(\"\".concat(process.env.REACT_APP_API_URL,\"/profile/update\"),body,config);case 5:res=_context.sent;if(res.data.profile&&res.data.username){dispatch({type:UPDATE_USER_PROFILE_SUCCESS,payload:res.data});}else{dispatch({type:UPDATE_USER_PROFILE_FAIL});}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);dispatch({type:UPDATE_USER_PROFILE_FAIL});case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//To UPDATE USER_PROFILE DATA\nexport var load_user=function load_user(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json'// 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\n}};_context2.prev=1;_context2.next=4;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/profile/user\"),config);case 4:res=_context2.sent;if(res.data.error){dispatch({type:LOAD_USER_PROFILE_FAIL});}else{dispatch({type:LOAD_USER_PROFILE_SUCCESS,payload:res.data});}_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch({type:LOAD_USER_PROFILE_FAIL});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/actions/profile.js"],"names":["Cookies","axios","LOAD_USER_PROFILE_FAIL","LOAD_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","update_user_profile","first_name","last_name","phone","city","dispatch","config","headers","get","body","JSON","stringify","put","process","env","REACT_APP_API_URL","res","data","profile","username","type","payload","load_user","error"],"mappings":"uTAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,sBAAT,CAAiCC,yBAAjC,CACQC,wBADR,CACiCC,2BADjC,KAEe,SAFf,CAGA;AACC,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAEC,UAAF,CAAcC,SAAd,CAAyBC,KAAzB,CAAgCC,IAAhC,iGAAuC,iBAAMC,QAAN,sIACjEC,MADiE,CACxD,CACXC,OAAO,CAAG,CACN,SAAS,kBADH,CAEN,eAAe,kBAFT,CAGN,cAAcb,OAAO,CAACc,GAAR,CAAY,WAAZ,CAHR,CADC,CADwD,CASjEC,IATiE,CAS1DC,IAAI,CAACC,SAAL,CAAe,CACxB,kBAAkB,IADM,CAExBV,UAAU,CAACA,UAFa,CAGxBC,SAAS,CAACA,SAHc,CAIxBC,KAAK,CAACA,KAJkB,CAKxBC,IAAI,CAACA,IALmB,CAAf,CAT0D,uCAmBjDT,CAAAA,KAAK,CAACiB,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,iBAAzB,oBAA4DN,IAA5D,CAAiEH,MAAjE,CAnBiD,QAmB7DU,GAnB6D,eAqBnE,GAAGA,GAAG,CAACC,IAAJ,CAASC,OAAT,EAAoBF,GAAG,CAACC,IAAJ,CAASE,QAAhC,CAA0C,CACtCd,QAAQ,CAAC,CACLe,IAAI,CAACrB,2BADA,CAELsB,OAAO,CAACL,GAAG,CAACC,IAFP,CAAD,CAAR,CAIH,CALD,IAMK,CACDZ,QAAQ,CAAC,CACLe,IAAI,CAACtB,wBADA,CAAD,CAAR,CAIH,CAhCkE,+EAmCnEO,QAAQ,CAAC,CACLe,IAAI,CAACtB,wBADA,CAAD,CAAR,CAnCmE,oEAAvC,gEAA5B,CAwCR;AACA,MAAO,IAAMwB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,mGAAI,kBAAMjB,QAAN,qIACnBC,MADmB,CACV,CACXC,OAAO,CAAG,CACN,SAAS,kBADH,CAEN,eAAe,kBACf;AAHM,CADC,CADU,yCAWHZ,CAAAA,KAAK,CAACa,GAAN,WAAaK,OAAO,CAACC,GAAR,CAAYC,iBAAzB,kBAA0DT,MAA1D,CAXG,QAWfU,GAXe,gBAarB,GAAGA,GAAG,CAACC,IAAJ,CAASM,KAAZ,CAAmB,CACflB,QAAQ,CAAC,CACLe,IAAI,CAACxB,sBADA,CAAD,CAAR,CAGH,CAJD,IAKK,CACDS,QAAQ,CAAC,CACLe,IAAI,CAACvB,yBADA,CAELwB,OAAO,CAACL,GAAG,CAACC,IAFP,CAAD,CAAR,CAIH,CAvBoB,mFA0BrBZ,QAAQ,CAAC,CACLe,IAAI,CAACxB,sBADA,CAAD,CAAR,CA1BqB,sEAAJ,kEAAlB","sourcesContent":["import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport { LOAD_USER_PROFILE_FAIL, LOAD_USER_PROFILE_SUCCESS ,\r\n        UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,\r\n        } from './types'\r\n//To get user data\r\n export const update_user_profile = ( first_name, last_name, phone, city)=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        first_name:first_name,\r\n        last_name:last_name, \r\n        phone:phone, \r\n        city:city\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`,body,config)\r\n\r\n        if(res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_FAIL,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:UPDATE_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//To UPDATE USER_PROFILE DATA\r\nexport const load_user = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\r\n        }\r\n    };\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOAD_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}