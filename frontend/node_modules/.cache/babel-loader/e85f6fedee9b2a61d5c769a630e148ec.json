{"ast":null,"code":"import _toConsumableArray from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _slicedToArray from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{NavLink}from'react-router-dom';import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function ChatUI(_ref){var title=_ref.title,onDelete=_ref.onDelete,params=_ref.params;// To access props from react routers useLocation hook is used\nvar location=useLocation();console.log(\"PARAMS : \",location.params);var _useState=useState(location.params),_useState2=_slicedToArray(_useState,2),friendGroup=_useState2[0],setfriendGroup=_useState2[1];//*************************************************************** */\n//*******WEB SOCKETS********************************************* */\nvar roomName=friendGroup.connectionid;/****/ //\nvar LoadOldMessagesStatus=/*#__PURE__*/function(){function LoadOldMessagesStatus(){_classCallCheck(this,LoadOldMessagesStatus);}_createClass(LoadOldMessagesStatus,null,[{key:\"loadValue\",value:function loadValue(){return this.loaded;}}]);return LoadOldMessagesStatus;}();LoadOldMessagesStatus.loaded=false;LoadOldMessagesStatus.loadmsgcount=1;var sender=\"\";/**/var chatSocket=new WebSocket('ws://'+window.location.host+'/ws/chat/'+roomName+'/');;useEffect(function(){},[]);var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chatmessages=_useState4[0],setchatmessages=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),textItem=_useState6[0],settextItem=_useState6[1];var _onChange=function onChange(e){settextItem(e.target.value);};chatSocket.onmessage=function(e){var data=JSON.parse(e.data);console.log(data);// if(data.messagestamp == 'new' || (data.messagestamp == 'old' && !LoadOldMessagesStatus.loadValue())) {\nsetchatmessages([].concat(_toConsumableArray(chatmessages),[data]));// if(data.sender === sender)\n// document.querySelector('#chat-log').value += ('\\t\\t\\t'+data.message+'\\n')\n// else    \n//document.querySelector('#chat-log').value += (data.message + '\\n');\n// if (data.messagestamp == 'old') {\n//     LoadOldMessagesStatus.loadmsgcount = data.messagecount\n//     if (LoadOldMessagesStatus.loadmsgcount == 1){\n//         LoadOldMessagesStatus.loaded = true;\n//     }\n// }    \n// }\n};console.log(chatmessages);chatSocket.onclose=function(e){console.error('Chat socket closed unexpectedly');};// document.querySelector('#chat-message-input').focus();\n// document.querySelector('#chat-message-input').onkeyup = function(e) {\n//     if (e.keyCode === 13) {  // enter, return\n//         document.querySelector('#chat-message-submit').click();\n//     }\n// };\nvar onclick=function onclick(e){var message=textItem;sender=friendGroup.username;chatSocket.send(JSON.stringify({'message':message,'sender':sender}));settextItem(\"\");// document.querySelector(\"#chat-message-sender\").value = \"\";\n};//*/*//////////////////////////////////////////////////////////////\n//**************************************************************** */\nreturn/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid p-2\",children:[/*#__PURE__*/_jsx(\"nav\",{class:\"navbar navbar-dark bg-primary\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container-fluid\",children:[/*#__PURE__*/_jsx(NavLink,{className:\"btn btn-light\",exact:true,to:\"/friends\",children:\"Back\"}),/*#__PURE__*/_jsx(\"h3\",{children:friendGroup.friend})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-auto\",children:chatmessages.length!==0?chatmessages.map(function(message){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{class:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{class:\"card-title\",children:message.sender}),/*#__PURE__*/_jsx(\"p\",{class:\"card-text\",children:message.message})]})})});}):\"No Messages\"}),/*#__PURE__*/_jsx(\"nav\",{class:\"navbar fixed-bottom navbar-light bg-light\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container-fluid\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"chat-message-submit\",onChange:function onChange(e){_onChange(e);},className:\"form-control w-50 mx-auto\"}),/*#__PURE__*/_jsx(\"a\",{class:\"btn btn-success mx-auto\",onClick:function onClick(e){onclick(e);},href:\"#\",children:\"Send\"})]})})]})});}","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/containers/Chat.js"],"names":["React","Fragment","useState","useEffect","NavLink","useLocation","ChatUI","title","onDelete","params","location","console","log","friendGroup","setfriendGroup","roomName","connectionid","LoadOldMessagesStatus","loaded","loadmsgcount","sender","chatSocket","WebSocket","window","host","chatmessages","setchatmessages","textItem","settextItem","onChange","e","target","value","onmessage","data","JSON","parse","onclose","error","onclick","message","username","send","stringify","friend","length","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function ChatUI({ title, onDelete, params }) {\r\n    // To access props from react routers useLocation hook is used\r\n    const location = useLocation()\r\n    console.log(\"PARAMS : \", location.params)\r\n    const [friendGroup, setfriendGroup] = useState(location.params)\r\n    //*************************************************************** */\r\n\r\n    //*******WEB SOCKETS********************************************* */\r\n\r\n\r\n    const roomName = friendGroup.connectionid;\r\n    /****///\r\n\r\n    class LoadOldMessagesStatus {\r\n        static loaded = false\r\n        static loadmsgcount = 1\r\n        static loadValue() {\r\n            return this.loaded;\r\n        }\r\n    }\r\n\r\n    let sender = \"\";\r\n\r\n    /**/\r\n    let chatSocket = new WebSocket(\r\n        'ws://'\r\n        + window.location.host\r\n        + '/ws/chat/'\r\n        + roomName\r\n        + '/'\r\n    );;\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const [chatmessages, setchatmessages] = useState([])\r\n    const [textItem, settextItem] = useState(\"\")\r\n\r\n\r\n    const onChange = (e) => {\r\n        settextItem(e.target.value)\r\n    }\r\n\r\n\r\n    chatSocket.onmessage = function (e) {\r\n        const data = JSON.parse(e.data);\r\n        console.log(data)\r\n        // if(data.messagestamp == 'new' || (data.messagestamp == 'old' && !LoadOldMessagesStatus.loadValue())) {\r\n        setchatmessages([...chatmessages, data])\r\n        // if(data.sender === sender)\r\n        // document.querySelector('#chat-log').value += ('\\t\\t\\t'+data.message+'\\n')\r\n        // else    \r\n        //document.querySelector('#chat-log').value += (data.message + '\\n');\r\n\r\n        // if (data.messagestamp == 'old') {\r\n        //     LoadOldMessagesStatus.loadmsgcount = data.messagecount\r\n        //     if (LoadOldMessagesStatus.loadmsgcount == 1){\r\n        //         LoadOldMessagesStatus.loaded = true;\r\n        //     }\r\n        // }    \r\n\r\n        // }\r\n    };\r\n    console.log(chatmessages)\r\n    chatSocket.onclose = function (e) {\r\n        console.error('Chat socket closed unexpectedly');\r\n    };\r\n\r\n    // document.querySelector('#chat-message-input').focus();\r\n    // document.querySelector('#chat-message-input').onkeyup = function(e) {\r\n    //     if (e.keyCode === 13) {  // enter, return\r\n    //         document.querySelector('#chat-message-submit').click();\r\n    //     }\r\n    // };\r\n\r\n    const onclick = function (e) {\r\n\r\n        const message = textItem;\r\n        sender = friendGroup.username;\r\n        chatSocket.send(JSON.stringify({\r\n            'message': message,\r\n            'sender': sender\r\n        }));\r\n\r\n        settextItem(\"\")\r\n        // document.querySelector(\"#chat-message-sender\").value = \"\";\r\n    };\r\n\r\n\r\n    //*/*//////////////////////////////////////////////////////////////\r\n\r\n\r\n    //**************************************************************** */\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container-fluid p-2'>\r\n                <nav class=\"navbar navbar-dark bg-primary\">\r\n                    <div class=\"container-fluid\">\r\n                        <NavLink className=\"btn btn-light\" exact to=\"/friends\">Back</NavLink>\r\n                        <h3>{friendGroup.friend}</h3>\r\n                    </div>\r\n                </nav>\r\n                <div className='overflow-auto'>\r\n                    {\r\n                        chatmessages.length !== 0 ?\r\n                            chatmessages.map((message) => {\r\n                                return (\r\n                                    <>\r\n                                        \r\n                                        <div class=\"card\">\r\n                                            \r\n                                                <div class=\"card-body\">\r\n                                                    <h5 class=\"card-title\">{message.sender}</h5>\r\n                                                    <p class=\"card-text\">{message.message}</p>\r\n                                                </div>\r\n                                                \r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            })\r\n                            :\r\n                            \"No Messages\"\r\n                    }\r\n                    {/* CHAT COMPONENT */}\r\n                </div>\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <div class=\"container-fluid\">\r\n                        <input type=\"text\" id=\"chat-message-submit\" onChange={(e) => { onChange(e) }} className='form-control w-50 mx-auto' />\r\n                        <a class=\"btn btn-success mx-auto\" onClick={(e) => { onclick(e) }} href=\"#\">Send</a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}