{"ast":null,"code":"import _regeneratorRuntime from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Cookies from'js-cookie';import axios from'axios';import{LOAD_USER_PROFILE_FAIL,LOAD_USER_PROFILE_SUCCESS,UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS}from'./types';//To get user data\nexport var update_user_profile=function update_user_profile(first_name,last_name,phone,city){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"yaha aya tha..\");config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({'withCredentials':true,first_name:first_name,last_name:last_name,phone:phone,city:city});_context.prev=3;_context.next=6;return axios.put(\"\".concat(process.env.REACT_APP_API_URL,\"/profile/update\"),body,config);case 6:res=_context.sent;get_searched_user_list(\"ar\");if(res.data.profile&&res.data.username){dispatch({type:UPDATE_USER_PROFILE_SUCCESS,payload:res.data});}else{dispatch({type:UPDATE_USER_PROFILE_FAIL});}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](3);dispatch({type:UPDATE_USER_PROFILE_FAIL});case 14:case\"end\":return _context.stop();}}},_callee,null,[[3,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//To UPDATE USER_PROFILE DATA\nexport var load_user=function load_user(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json'// 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\n}};_context2.prev=1;_context2.next=4;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/profile/user\"),config);case 4:res=_context2.sent;if(res.data.error){dispatch({type:LOAD_USER_PROFILE_FAIL});}else{dispatch({type:LOAD_USER_PROFILE_SUCCESS,payload:res.data});}_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch({type:LOAD_USER_PROFILE_FAIL});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//GET SEARCHED USER LIST\n//GET FRIEND LIST\nexport var get_searched_user_list=function get_searched_user_list(username){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(\"aa gaya\");config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({'username':username});_context3.prev=3;_context3.next=6;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/get_searched_users\"),body,config);case 6:res=_context3.sent;if(res.data.error){dispatch({type:GET_SEARCHED_FRIENDS_FAIL});}else{dispatch({type:GET_SEARCHED_FRIENDS_SUCCESS,payload:res.data});}_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](3);dispatch({type:GET_SEARCHED_FRIENDS_FAIL});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[3,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/actions/profile.js"],"names":["Cookies","axios","LOAD_USER_PROFILE_FAIL","LOAD_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","GET_SEARCHED_FRIENDS_FAIL","GET_SEARCHED_FRIENDS_SUCCESS","update_user_profile","first_name","last_name","phone","city","dispatch","console","log","config","headers","get","body","JSON","stringify","put","process","env","REACT_APP_API_URL","res","get_searched_user_list","data","profile","username","type","payload","load_user","error"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport { LOAD_USER_PROFILE_FAIL, LOAD_USER_PROFILE_SUCCESS ,\r\n        UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n        } from './types'\r\n//To get user data\r\n export const update_user_profile = ( first_name, last_name, phone, city)=>async dispatch => {\r\n     console.log(\"yaha aya tha..\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        first_name:first_name,\r\n        last_name:last_name, \r\n        phone:phone, \r\n        city:city\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`,body,config)\r\n        get_searched_user_list(\"ar\")\r\n        if(res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_FAIL,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:UPDATE_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//To UPDATE USER_PROFILE DATA\r\nexport const load_user = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\r\n        }\r\n    };\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOAD_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//GET SEARCHED USER LIST\r\n//GET FRIEND LIST\r\nexport const get_searched_user_list = ( username )=>async dispatch => {\r\n    console.log(\"aa gaya\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       'username' : username,\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_SEARCHED_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:GET_SEARCHED_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_SEARCHED_FRIENDS_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}