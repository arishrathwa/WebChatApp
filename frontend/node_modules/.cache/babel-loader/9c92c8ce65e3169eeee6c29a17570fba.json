{"ast":null,"code":"import _regeneratorRuntime from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";var CSRFToken=function CSRFToken(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),csrftoken=_useState2[0],setcsrftoken=_useState2[1];var getCookie=function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==''){var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=cookies[i].trim();if(cookie.substring(0,name.length+1)===name+'='){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}console.log(\"IN CSRF : \"+cookieValue);return cookieValue;};useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/csrf_cookie\"));case 3:_context.next=7;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);case 7:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();setcsrftoken(getCookie('csrftoken'));},[]);return/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"csrfmiddlewaretoken\",value:csrftoken});};export default CSRFToken;","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/components/CSRFToken.js"],"names":["React","useState","useEffect","axios","CSRFToken","csrftoken","setcsrftoken","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","console","log","fetchData","get","process","env","REACT_APP_API_URL"],"mappings":"odACA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAK,CAEnB,cAAkCH,QAAQ,CAAC,EAAD,CAA1C,wCAAOI,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,CACxB,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,GAAIC,QAAQ,CAACC,MAAT,EAAmBD,QAAQ,CAACC,MAAT,GAAoB,EAA3C,CAA+C,CAC3C,GAAIC,CAAAA,OAAO,CAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,OAAO,CAACG,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACrC,GAAIH,CAAAA,MAAM,CAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CACA,GAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,CAAoBT,IAAI,CAACO,MAAL,CAAc,CAAlC,IAA0CP,IAAI,CAAG,GAArD,CAA2D,CACvDC,WAAW,CAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,CAAc,CAA/B,CAAD,CAAhC,CACA,MACH,CACJ,CACJ,CACDI,OAAO,CAACC,GAAR,CAAY,aAAaX,WAAzB,EACA,MAAOA,CAAAA,WAAP,CACH,CAdD,CAgBAP,SAAS,CAAC,UAAI,CACV,GAAMmB,CAAAA,SAAS,0FAAG,yKAEJlB,CAAAA,KAAK,CAACmB,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,iBAAzB,0BAFI,yJAAH,kBAATJ,CAAAA,SAAS,0CAAf,CAQAA,SAAS,GACTf,YAAY,CAACC,SAAS,CAAC,WAAD,CAAV,CAAZ,CAEH,CAZQ,CAYP,EAZO,CAAT,CAeA,mBACI,cAAO,IAAI,CAAC,QAAZ,CAAqB,IAAI,CAAC,qBAA1B,CAAgD,KAAK,CAAEF,SAAvD,EADJ,CAGH,CAtCD,CAwCA,cAAeD,CAAAA,SAAf","sourcesContent":["\r\nimport React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst CSRFToken = () =>{\r\n\r\n    const [csrftoken, setcsrftoken] = useState('')\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        console.log(\"IN CSRF : \"+cookieValue)\r\n        return cookieValue;\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const fetchData = async ()=> {\r\n            try{\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`)\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        }\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'))\r\n\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n    );\r\n}\r\n\r\nexport default CSRFToken;"]},"metadata":{},"sourceType":"module"}