{"ast":null,"code":"import _regeneratorRuntime from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';//For making API requests and handle responses like fetch api\nimport{REGISTER_SUCCESS,REGISTER_FAIL,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT_FAIL,LOGOUT_SUCCESS,AUTHENTICATED_FAIL,AUTHENTICATED_SUCCESS}from'../actions/types';import Cookies from'js-cookie';//CHECK AUTHENTICATED OR NOT\nexport var checkAuthenticated=function checkAuthenticated(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json'// 'X-CSRFToken':Cookies.get('csrftoken') no need of for get request getting auth status\n}};body=JSON.stringify({});_context.prev=2;_context.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/authenticated\"),body,config);case 5:res=_context.sent;if(res.data.error||res.data.isAuthenticated==='error'){dispatch({type:AUTHENTICATED_FAIL,payload:false});}else if(res.data.isAuthenticated==='success'){dispatch({type:AUTHENTICATED_SUCCESS,payload:true});}else{// it will act when user accessing view without authentication cookies\ndispatch({type:AUTHENTICATED_FAIL,payload:false});}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);dispatch({type:AUTHENTICATED_FAIL,payload:false});case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//LOGIN\nexport var login=function login(username,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({username:username,password:password});_context2.prev=2;_context2.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/login\"),body,config);case 5:res=_context2.sent;if(res.data.error){dispatch({type:LOGIN_FAIL});}else{dispatch({type:LOGIN_SUCCESS,payload:res.data.username});//load the user action dispatch after this\n}_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);dispatch({type:LOGIN_FAIL});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//REGISTER\nexport var register=function register(username,password,re_password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({username:username,password:password,re_password:re_password});_context3.prev=2;_context3.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/register\"),body,config);case 5:res=_context3.sent;if(res.data.error){dispatch({type:REGISTER_FAIL});}else{dispatch({type:REGISTER_SUCCESS});}_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](2);dispatch({type:'REGISTER_FAIL'});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[2,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};//LOGOUT\nexport var logout=function logout(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config={headers:{'Accept':'application/json','Content-Type':'application/json','X-CSRFToken':Cookies.get('csrftoken')}};body=JSON.stringify({'withCredentials':true});_context4.prev=2;_context4.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/accounts/logout\"),body,config);case 5:res=_context4.sent;if(res.data.error){dispatch({type:LOGOUT_FAIL});}else{dispatch({type:LOGOUT_SUCCESS});//load the user action dispatch after this\n}_context4.next=12;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](2);dispatch({type:LOGOUT_FAIL});case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[2,9]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT_FAIL","LOGOUT_SUCCESS","AUTHENTICATED_FAIL","AUTHENTICATED_SUCCESS","Cookies","checkAuthenticated","dispatch","config","headers","body","JSON","stringify","post","process","env","REACT_APP_API_URL","res","data","error","isAuthenticated","type","payload","login","username","password","get","register","re_password","logout"],"mappings":"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","sourcesContent":["import axios from 'axios' //For making API requests and handle responses like fetch api\r\nimport { REGISTER_SUCCESS,REGISTER_FAIL,\r\n            LOGIN_FAIL,LOGIN_SUCCESS,\r\n            LOGOUT_FAIL,LOGOUT_SUCCESS,\r\n            AUTHENTICATED_FAIL,AUTHENTICATED_SUCCESS } from '../actions/types'\r\nimport Cookies from 'js-cookie'\r\n//CHECK AUTHENTICATED OR NOT\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need of for get request getting auth status\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({\r\n        \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/authenticated`,body,config)\r\n\r\n       if(res.data.error || res.data.isAuthenticated === 'error') {\r\n           dispatch({\r\n               type:AUTHENTICATED_FAIL,\r\n               payload:false\r\n           })\r\n       }\r\n       else if(res.data.isAuthenticated === 'success'){\r\n           dispatch({\r\n               type:AUTHENTICATED_SUCCESS,\r\n               payload:true\r\n           })\r\n       }\r\n       else { // it will act when user accessing view without authentication cookies\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n       }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:AUTHENTICATED_FAIL,\r\n            payload:false\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//LOGIN\r\n\r\nexport const login = (username,password) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({username,password})\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGIN_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                payload:res.data.username\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGIN_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n//REGISTER\r\nexport const register = (username,password,re_password) => async dispatch => {\r\n\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    const body = JSON.stringify({username,password,re_password})\r\n\r\n    try {\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`,body,config);\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:REGISTER_FAIL\r\n            });\r\n        }else {\r\n            dispatch({\r\n                type:REGISTER_SUCCESS\r\n            });\r\n        }\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type:'REGISTER_FAIL'\r\n        });\r\n    }\r\n\r\n} \r\n\r\n//LOGOUT\r\nexport const logout = () => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken')\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({\r\n        'withCredentials':true\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOGOUT_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOGOUT_SUCCESS,\r\n            });\r\n            \r\n            //load the user action dispatch after this\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOGOUT_FAIL\r\n        })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}