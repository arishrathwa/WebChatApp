{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode\\\\SessionAuth\\\\ChatApp\\\\frontend\\\\src\\\\components\\\\CSRFToken.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CSRFToken = () => {\n  _s();\n\n  const [csrftoken, setcsrftoken] = useState('');\n\n  const getCookie = name => {\n    let cookieValue = null;\n\n    if (document.cookie && document.cookie !== '') {\n      let cookies = document.cookie.split(';');\n\n      for (let i = 0; i < cookies.length; i++) {\n        let cookie = cookies[i].trim();\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`);\n      } catch (err) {}\n    };\n\n    fetchData();\n    setcsrftoken(getCookie('csrftoken'));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"hidden\",\n    name: \"csrfmiddlewaretoken\",\n    value: csrftoken\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CSRFToken, \"eHZsZkoDg1vaj9We58mNjkmCmy8=\");\n\n_c = CSRFToken;\nexport default CSRFToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSRFToken\");","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/components/CSRFToken.js"],"names":["React","useState","useEffect","axios","CSRFToken","csrftoken","setcsrftoken","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetchData","get","process","env","REACT_APP_API_URL","err"],"mappings":";;;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,SAAS,GAAG,MAAK;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,SAAS,GAAIC,IAAD,IAAU;AACxB,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,UAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb;;AACA,YAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAA0CP,IAAI,GAAG,GAArD,EAA2D;AACvDC,UAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACH;AACJ;AACJ;;AACD,WAAON,WAAP;AACH,GAbD;;AAeAP,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMiB,SAAS,GAAG,YAAW;AACzB,UAAG;AACC,cAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,uBAA3C,CAAN;AACH,OAFD,CAGA,OAAMC,GAAN,EAAU,CAET;AACJ,KAPD;;AAQAL,IAAAA,SAAS;AACTb,IAAAA,YAAY,CAACC,SAAS,CAAC,WAAD,CAAV,CAAZ;AAEH,GAZQ,EAYP,EAZO,CAAT;AAeA,sBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,qBAA1B;AAAgD,IAAA,KAAK,EAAEF;AAAvD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArCD;;GAAMD,S;;KAAAA,S;AAuCN,eAAeA,SAAf","sourcesContent":["\r\nimport React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst CSRFToken = () =>{\r\n\r\n    const [csrftoken, setcsrftoken] = useState('')\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        const fetchData = async ()=> {\r\n            try{\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`)\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        }\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'))\r\n\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n    );\r\n}\r\n\r\nexport default CSRFToken;"]},"metadata":{},"sourceType":"module"}