{"ast":null,"code":"import _toConsumableArray from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _readOnlyError from\"D:/VSCode/SessionAuth/ChatApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import axios from'axios';import React,{Fragment,useState,useEffect}from'react';import{connect}from'react-redux';import{NavLink}from'react-router-dom';import{useLocation}from'react-router-dom';// import axios from 'axios'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";console.log(\"GREAT DEAl\");var count=0;var ChatUI=function ChatUI(_ref){var title=_ref.title,onDelete=_ref.onDelete,params=_ref.params;// To access props from react routers useLocation hook is used\nvar location=useLocation();console.log(\"PARAMS : \",location.params);var friendGroup=location.params;//*************************************************************** */\n//*******WEB SOCKETS********************************************* */\nconsole.log(\"count : \",count++);var roomName=friendGroup.connectionid;var sender=friendGroup.username;/**/useEffect(function(){var chatSocket=new WebSocket('ws://'+window.location.host+'/ws/chat/'+roomName+'/');},[]);var _useEffect=useEffect([]),_useEffect2=_slicedToArray(_useEffect,2),chatmessages=_useEffect2[0],setchatmessages=_useEffect2[1];var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),textItem=_useState2[0],settextItem=_useState2[1];var onChangeMsgField=function onChangeMsgField(e){e.target.value,_readOnlyError(\"textItem\");e.stopPropagation();};console.log(\"TextValue : \",textItem);console.log(\"ChatItems : \",chatmessages);chatSocket.onmessage=function(e){var data=JSON.parse(e.data);console.log(\"Receiving end : \",data);// if(data.messagestamp == 'new' || (data.messagestamp == 'old' && !LoadOldMessagesStatus.loadValue())) {\nsetchatmessages(function(chatmessages){return[].concat(_toConsumableArray(chatmessages),[data]);});// if(data.sender === sender)\n// document.querySelector('#chat-log').value += ('\\t\\t\\t'+data.message+'\\n')\n// else    \n//document.querySelector('#chat-log').value += (data.message + '\\n');\n// if (data.messagestamp == 'old') {\n//     LoadOldMessagesStatus.loadmsgcount = data.messagecount\n//     if (LoadOldMessagesStatus.loadmsgcount == 1){\n//         LoadOldMessagesStatus.loaded = true;\n//     }\n// }    \n// }\ne.stopPropagation();};chatSocket.onclose=function(e){console.error('Chat socket closed unexpectedly');};// document.querySelector('#chat-message-input').focus();\n// document.querySelector('#chat-message-input').onkeyup = function(e) {\n//     if (e.keyCode === 13) {  // enter, return\n//         document.querySelector('#chat-message-submit').click();\n//     }\n// };\nvar onClickSendMessag=function onClickSendMessag(e){var message=textItem;sender=friendGroup.username;chatSocket.send(JSON.stringify({'message':message,'sender':sender,\"connectionid\":friendGroup.connectionid}));e.stopPropagation();// settextItem(\"\")\n// document.querySelector(\"#chat-message-sender\").value = \"\";\n};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid p-2 mx-auto\",children:[/*#__PURE__*/_jsx(\"nav\",{class:\"navbar navbar-dark bg-primary\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container-fluid\",children:[/*#__PURE__*/_jsx(NavLink,{className:\"btn btn-light\",exact:true,to:\"/friends\",children:\"Back\"}),/*#__PURE__*/_jsx(\"h3\",{children:friendGroup.friend})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-auto\",children:chatmessages.length!==0?chatmessages.map(function(message){return/*#__PURE__*/_jsx(_Fragment,{children:message.sender===friendGroup.username?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid w-100\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"card mx-auto mt-1\",style:{\"max-width\":\"20rem\"},children:[/*#__PURE__*/_jsxs(\"div\",{class:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{class:\"card-title\",children:message.sender}),/*#__PURE__*/_jsx(\"p\",{class:\"card-text\",children:message.message})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-sm btn-danger\",children:\"Mark Fake\"})]})}),/*#__PURE__*/_jsx(\"br\",{})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid w-100\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"card mx-auto mt-1\",style:{\"max-width\":\"20rem\"},children:/*#__PURE__*/_jsxs(\"div\",{class:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{class:\"card-title\",children:message.sender}),/*#__PURE__*/_jsx(\"p\",{class:\"card-text\",children:message.message})]})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-sm btn-danger\",children:\"Mark Fake\"})]}),/*#__PURE__*/_jsx(\"br\",{})]})});}):\"No Messages\"}),/*#__PURE__*/_jsx(\"nav\",{class:\"navbar fixed-bottom navbar-light bg-light\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"container-fluid\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"chat-message-submit\",onChange:function onChange(e){return onChangeMsgField(e);},className:\"form-control mx-auto\"}),/*#__PURE__*/_jsx(\"a\",{class:\"btn btn-success mx-auto\",onClick:function onClick(e){return onClickSendMessag(e);},href:\"#\",children:\"Send\"})]})})]})});};export default connect(\"\",{})(ChatUI);","map":{"version":3,"sources":["D:/VSCode/SessionAuth/ChatApp/frontend/src/containers/Chat.js"],"names":["axios","React","Fragment","useState","useEffect","connect","NavLink","useLocation","console","log","count","ChatUI","title","onDelete","params","location","friendGroup","roomName","connectionid","sender","username","chatSocket","WebSocket","window","host","chatmessages","setchatmessages","textItem","settextItem","onChangeMsgField","e","target","value","stopPropagation","onmessage","data","JSON","parse","onclose","error","onClickSendMessag","message","send","stringify","friend","length","map"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\n// import axios from 'axios'\r\nconsole.log(\"GREAT DEAl\")\r\nlet count = 0;\r\n\r\n\r\n\r\n\r\nconst ChatUI = ({ title, onDelete, params })=> {\r\n    // To access props from react routers useLocation hook is used\r\n    const location = useLocation()\r\n    console.log(\"PARAMS : \", location.params)\r\n    const friendGroup = location.params\r\n    //*************************************************************** */\r\n\r\n    //*******WEB SOCKETS********************************************* */\r\n\r\n    console.log(\"count : \",count++)\r\n\r\n    const roomName = friendGroup.connectionid;\r\n   \r\n\r\n    let sender = friendGroup.username;\r\n\r\n    /**/\r\n    useEffect(()=>{\r\n    const chatSocket = new WebSocket(\r\n        'ws://'\r\n        + window.location.host\r\n        + '/ws/chat/'\r\n        + roomName\r\n        + '/'\r\n    )},[]);\r\n\r\n    \r\n\r\n    const [chatmessages,setchatmessages] = useEffect([])\r\n    const [textItem, settextItem] = useState(\"\")\r\n    \r\n\r\n    const onChangeMsgField = (e) => {\r\n        textItem = e.target.value\r\n        e.stopPropagation();\r\n    }\r\n    console.log(\"TextValue : \",textItem);\r\n    console.log(\"ChatItems : \",chatmessages)\r\n\r\n    chatSocket.onmessage =  (e)=> {\r\n        const data = JSON.parse(e.data);\r\n        console.log(\"Receiving end : \",data)\r\n        // if(data.messagestamp == 'new' || (data.messagestamp == 'old' && !LoadOldMessagesStatus.loadValue())) {\r\n        setchatmessages((chatmessages) => [...chatmessages,data])\r\n        // if(data.sender === sender)\r\n        // document.querySelector('#chat-log').value += ('\\t\\t\\t'+data.message+'\\n')\r\n        // else    \r\n        //document.querySelector('#chat-log').value += (data.message + '\\n');\r\n\r\n        // if (data.messagestamp == 'old') {\r\n        //     LoadOldMessagesStatus.loadmsgcount = data.messagecount\r\n        //     if (LoadOldMessagesStatus.loadmsgcount == 1){\r\n        //         LoadOldMessagesStatus.loaded = true;\r\n        //     }\r\n        // }    \r\n\r\n        // }\r\n        e.stopPropagation();\r\n    };\r\n    \r\n\r\n    chatSocket.onclose = function (e) {\r\n        console.error('Chat socket closed unexpectedly');\r\n    };\r\n\r\n    // document.querySelector('#chat-message-input').focus();\r\n    // document.querySelector('#chat-message-input').onkeyup = function(e) {\r\n    //     if (e.keyCode === 13) {  // enter, return\r\n    //         document.querySelector('#chat-message-submit').click();\r\n    //     }\r\n    // };\r\n\r\n    const onClickSendMessag =  (e)=> {\r\n\r\n        const message = textItem;\r\n        sender = friendGroup.username;\r\n\r\n        chatSocket.send(JSON.stringify({\r\n            'message': message,\r\n            'sender': sender,\r\n            \"connectionid\":friendGroup.connectionid,\r\n        \r\n        }));\r\n\r\n       \r\n        e.stopPropagation();\r\n        // settextItem(\"\")\r\n        // document.querySelector(\"#chat-message-sender\").value = \"\";\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container-fluid p-2 mx-auto' >\r\n                <nav class=\"navbar navbar-dark bg-primary\">\r\n                    <div class=\"container-fluid\">\r\n                        <NavLink className=\"btn btn-light\" exact to=\"/friends\">Back</NavLink>\r\n                        <h3>{friendGroup.friend}</h3>\r\n                    </div>\r\n                </nav>\r\n                <div className='overflow-auto'>\r\n                    {\r\n                        chatmessages.length !== 0 ?\r\n                            chatmessages.map((message) => {\r\n                                return (\r\n                                    <>\r\n\r\n                                        {\r\n                                         message.sender === friendGroup.username?\r\n                                         <>\r\n                                            <div className='container-fluid w-100' >\r\n                                             <div class=\"card mx-auto mt-1\" style={{\"max-width\":\"20rem\"}}>\r\n                                            \r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\">{message.sender}</h5>\r\n                                                <p class=\"card-text\">{message.message}</p>\r\n                                            </div>\r\n                                            <button type=\"button\" className='btn btn-sm btn-danger'>Mark Fake</button>\r\n                                            </div>\r\n                                            \r\n                                    </div>\r\n                                            <br/>\r\n                                         </>\r\n                                         :\r\n                                         <>\r\n                                         <div className='container-fluid w-100'>\r\n                                          <div class=\"card mx-auto mt-1\" style={{\"max-width\":\"20rem\"}}>\r\n                                            \r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\">{message.sender}</h5>\r\n                                                <p class=\"card-text\">{message.message}</p>\r\n                                            </div>\r\n                                    </div>\r\n                                    <button type=\"button\"  className='btn btn-sm btn-danger'>Mark Fake</button>\r\n                                    </div>\r\n                                    <br/>\r\n                                         </>\r\n                                        }\r\n                                       \r\n                                    </>\r\n                                )\r\n                            })\r\n                            :\r\n                            \"No Messages\"\r\n                    }\r\n                    {/* CHAT COMPONENT */}\r\n                </div>\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <div class=\"container-fluid\">\r\n                        <input type=\"text\" id=\"chat-message-submit\" onChange={(e) => onChangeMsgField(e) } className='form-control mx-auto' />\r\n                        <a class=\"btn btn-success mx-auto\" onClick={(e) => onClickSendMessag(e) } href=\"#\">Send</a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default connect(\"\",{})(ChatUI);\r\n"]},"metadata":{},"sourceType":"module"}