[{"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\index.js":"1","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\App.js":"2","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\store.js":"3","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Login.js":"4","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Register.js":"5","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Home.js":"6","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Dashboard.js":"7","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\Layout.js":"8","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\auth.js":"9","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Navbar.js":"10","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\index.js":"11","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\types.js":"12","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\auth.js":"13","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\CSRFToken.js":"14","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\profile.js":"15","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\profile.js":"16","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\PrivateRoute.js":"17","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Chat.js":"18","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Feedback.js":"19","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\friends.js":"20","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friends.js":"21","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friendCard.js":"22","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\FriendCard.js":"23","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Friends.js":"24","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\friends.js":"25","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Notifications.js":"26"},{"size":413,"mtime":1636184821176,"results":"27","hashOfConfig":"28"},{"size":1356,"mtime":1637498378632,"results":"29","hashOfConfig":"28"},{"size":537,"mtime":1635489634986,"results":"30","hashOfConfig":"28"},{"size":2565,"mtime":1637539187452,"results":"31","hashOfConfig":"28"},{"size":3468,"mtime":1637441149324,"results":"32","hashOfConfig":"28"},{"size":586,"mtime":1635272317078,"results":"33","hashOfConfig":"28"},{"size":4294,"mtime":1637525882533,"results":"34","hashOfConfig":"28"},{"size":836,"mtime":1637433274283,"results":"35","hashOfConfig":"28"},{"size":7556,"mtime":1637537489612,"results":"36","hashOfConfig":"28"},{"size":5618,"mtime":1637612474437,"results":"37","hashOfConfig":"28"},{"size":208,"mtime":1637539002492,"results":"38","hashOfConfig":"28"},{"size":2708,"mtime":1637523052878,"results":"39","hashOfConfig":"28"},{"size":1766,"mtime":1636187074095,"results":"40","hashOfConfig":"28"},{"size":1233,"mtime":1637408115459,"results":"41","hashOfConfig":"28"},{"size":2248,"mtime":1637528115588,"results":"42","hashOfConfig":"28"},{"size":1424,"mtime":1637538954195,"results":"43","hashOfConfig":"28"},{"size":513,"mtime":1635449291850,"results":"44","hashOfConfig":"28"},{"size":1048,"mtime":1637612079869,"results":"45","hashOfConfig":"28"},{"size":2087,"mtime":1637529187452,"results":"46","hashOfConfig":"28"},{"size":1260,"mtime":1637605752366,"results":"47","hashOfConfig":"28"},{"size":1944,"mtime":1635499076968,"results":"48","hashOfConfig":"28"},{"size":771,"mtime":1635498861057,"results":"49","hashOfConfig":"28"},{"size":782,"mtime":1637606373131,"results":"50","hashOfConfig":"28"},{"size":3790,"mtime":1637612643838,"results":"51","hashOfConfig":"28"},{"size":3922,"mtime":1637524648371,"results":"52","hashOfConfig":"28"},{"size":2040,"mtime":1637418099897,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xfb1h2",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\index.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\App.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\store.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Login.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Register.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Home.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Dashboard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\Layout.js",["115"],"import React, { Fragment,useEffect } from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated } from \"../actions/auth\";\r\nimport { load_user } from \"../actions/profile\";\r\n\r\nconst Layout = ({ children, checkAuthenticated, load_user })=> {\r\n    // console.log(\"Children => \",children)\r\n\r\n    useEffect(() => {\r\n        checkAuthenticated(); //checks authenticated or not upon every render once\r\n        load_user(); //after authenticationChaeck status user will be loaded\r\n    }, [])\r\n\r\n    let inputTextStyle = {\r\n        maxWidth:'20rem',\r\n        boxShadow:'none'\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Navbar design={inputTextStyle}/>\r\n        {children}\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null,{checkAuthenticated,load_user})(Layout);\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\auth.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Navbar.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\index.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\types.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\auth.js",["116"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    FEEDBACK_SEND_FAIL,\r\n    FEEDBACK_SEND_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    // username: '', no need as after login profile is being fetched\r\n    \r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                 ...state,\r\n                 isAuthenticated:payload\r\n             }\r\n             \r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n    \r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                username: payload\r\n            }    \r\n        \r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                isAuthenticated:false,\r\n                username:''\r\n            }     \r\n        \r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:  \r\n        case LOGOUT_FAIL:  \r\n        case DELETE_USER_FAIL:\r\n        case FEEDBACK_SEND_FAIL:\r\n        case FEEDBACK_SEND_SUCCESS:    \r\n                return state; \r\n         \r\n                \r\n                \r\n                \r\n                \r\n        default: return state    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\CSRFToken.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\profile.js",["117","118"],"import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport { LOAD_USER_PROFILE_FAIL, LOAD_USER_PROFILE_SUCCESS ,\r\n        UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n        } from './types'\r\n//To get user data\r\n//  const dispatch = useDispatch(function)\r\n export const update_user_profile = ( first_name, last_name, phone, city)=>async dispatch => {\r\n     console.log(\"yaha aya tha..\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        first_name:first_name,\r\n        last_name:last_name, \r\n        phone:phone, \r\n        city:city\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`,body,config)\r\n        \r\n        if(res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_FAIL,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:UPDATE_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//To UPDATE USER_PROFILE DATA\r\nexport const load_user = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\r\n        }\r\n    };\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOAD_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\profile.js",["119"],"import {\r\n    LOAD_USER_PROFILE_FAIL,\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: '',\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case UPDATE_USER_PROFILE_SUCCESS:\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username:payload.username,\r\n                first_name:payload.profile.first_name,\r\n                last_name:payload.profile.last_name,\r\n                phone:payload.profile.phone,\r\n                city:payload.profile.city\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username:'',\r\n                first_name:'',\r\n                last_name:'',\r\n                phone:'',\r\n                city:'',\r\n            }   \r\n        case UPDATE_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n           \r\n        default: return state    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\PrivateRoute.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Chat.js",["120"],"import React, { Fragment } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nexport default function ChatUI({ title, onDelete }) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container-fluid p-2'>\r\n                <nav class=\"navbar navbar-dark bg-primary\">\r\n                    <div class=\"container-fluid\">\r\n                        <NavLink className=\"btn btn-light\" exact to=\"/friends\">Back</NavLink>\r\n                        <h3>Friend/GroupName Dynamic</h3>\r\n                    </div>\r\n                </nav>    \r\n                <div className='overflow-auto'>\r\n                    {/* CHAT COMPONENT */}\r\n                </div>\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <div class=\"container-fluid\">\r\n                    <input type=\"text\" className='form-control w-50 mx-auto' />\r\n                    <a class=\"btn btn-success mx-auto\" href=\"#\">Send</a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Feedback.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\friends.js",["121"],"import {\r\n    ADD_FRIEND_FAIL,ADD_FRIEND_SUCCESS,\r\n    GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n    GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    friendlist:[],\r\n    searchedUser:[],\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case GET_FRIENDS_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                friendlist:\r\n                    payload.data.friends\r\n                \r\n            }\r\n        case GET_SEARCHED_FRIENDS_SUCCESS:    \r\n             console.log(\"Payload\",payload.data)   \r\n             return {\r\n                 ...state,\r\n                 searchedUser:payload.data\r\n    } \r\n        case ADD_FRIEND_SUCCESS:\r\n        case GET_FRIENDS_FAIL:        \r\n        case GET_SEARCHED_FRIENDS_FAIL:        \r\n        case ADD_FRIEND_FAIL:\r\n            return {\r\n                ...state\r\n    }\r\n           \r\n        default: return {...state}    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friends.js",["122","123","124","125"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { update_user_profile } from \"../actions/profile\";\r\nimport { delete_account } from \"../actions/auth\";\r\nimport FriendCard from \"./FriendCard\";\r\nconst Friends = ({\r\n\r\n    first_name_global,\r\n    last_name_global,\r\n    phone_global,\r\n    city_global,\r\n    friendlist_global,\r\n    groups_global\r\n\r\n}) => {\r\n\r\n    console.log(friendlist_global)\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card-group\">\r\n                {friendlist_global.length === 0 ? <>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            ChatApp\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <blockquote class=\"blockquote mb-0\">\r\n                                <h1>No Friends !</h1>\r\n                                <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">ADD FRIENDS</cite></footer>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                    friendlist_global.map(\r\n                        (myfriend) => {\r\n                            return (\r\n                                <FriendCard title={myfriend} />\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    first_name_global: state.profile.first_name,\r\n    last_name_global: state.profile.last_name,\r\n    phone_global: state.profile.phone,\r\n    city_global: state.profile.city,\r\n    friendlist_global: state.friends,\r\n    groups_global: state.groups,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Friends);\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friendCard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\FriendCard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Friends.js",["126","127","128","129","130","131"],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\friends.js",["132","133"],"\r\nimport {ADD_FRIEND_FAIL, ADD_FRIEND_SUCCESS, GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS} from './types'\r\nimport axios from 'axios'\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n//GET FRIEND LIST\r\nexport const get_friend_list = ( username )=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            //'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/getfriends`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//GET FRIEND LIST\r\n// export const get_searched_user_list = ( username )=>async dispatch => {\r\n//     console.log(\"aa gaya\")\r\n//     const config = {\r\n//         headers : {\r\n//             'Accept':'application/json',\r\n//             'Content-Type':'application/json',\r\n//             'X-CSRFToken':Cookies.get('csrftoken') \r\n//         }\r\n//     };\r\n\r\n//     const body = JSON.stringify({\r\n//        'username' : username,\r\n//     })\r\n\r\n//     try {\r\n        \r\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\r\n\r\n//         if(res.data.error) {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_FAIL,\r\n//             })\r\n//         }\r\n//         else {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_SUCCESS,\r\n//                 payload:res.data\r\n            \r\n//             })\r\n//         }\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type:GET_SEARCHED_FRIENDS_FAIL\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n//STORE FRIEND\r\n\r\nexport const store_friend_connection = (username,friend,connectionid)=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') //no need when get request is made\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'user':username,\r\n        'friend':friend,\r\n        'connectionid':connectionid\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/friends/addfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:ADD_FRIEND_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:ADD_FRIEND_SUCCESS,\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ADD_FRIEND_FAIL\r\n        })\r\n    }\r\n}\r\n//Delete Friend\r\nexport const del_friend = ( username )=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            //'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/delfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Notifications.js",["134","135"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Notification = ({ sendFeedback }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        sender: '',\r\n        feedback: ''\r\n    })\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    const { sender, feedback } = formData\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            sendFeedback(feedback, sender)\r\n        }\r\n        catch (err) {\r\n\r\n        }\r\n    }\r\n \r\n    return (\r\n        <Fragment className=\"nav-item\">\r\n            <Link className=\"nav-link \" type=\"\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasBottom\" aria-controls=\"offcanvasBottom\">Notifications</Link>\r\n\r\n            <div className=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasBottom\" aria-labelledby=\"offcanvasBottomLabel\">\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 id=\"offcanvasRightLabel\">Notifications</h5>\r\n                    <button type=\"button\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"offcanvas-body small\">\r\n                    Coming Soon..<br/>\r\n                    No Notifications Yet\r\n                    {/* <form onSubmit={e=>{onSubmit(e)}}>\r\n                    <label htmlFor=\"sender\">Name : </label>\r\n                    <input type=\"text\" className=\"form-control mt-3\" onChange={e => { onChange(e) }} name=\"sender\" />\r\n                    <label htmlFor=\"feedback\">Message : </label>\r\n                    \r\n                    <textarea className=\"form-control mt-3\" onChange={e => { onChange(e) }} name=\"feedback\" cols=\"30\" rows=\"10\"></textarea>\r\n                    <button type=\"submit\" className=\"btn btn-primary mt-4\">Submit</button>\r\n                    </form> */}\r\n                </div>\r\n            </div>\r\n                    \r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Notification;",{"ruleId":"136","severity":1,"message":"137","line":13,"column":8,"nodeType":"138","endLine":13,"endColumn":10,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":24,"column":1,"nodeType":"142","endLine":72,"endColumn":2},{"ruleId":"143","severity":1,"message":"144","line":6,"column":9,"nodeType":"145","messageId":"146","endLine":6,"endColumn":34},{"ruleId":"143","severity":1,"message":"147","line":6,"column":35,"nodeType":"145","messageId":"146","endLine":6,"endColumn":63},{"ruleId":"140","severity":1,"message":"141","line":20,"column":1,"nodeType":"142","endLine":52,"endColumn":2},{"ruleId":"148","severity":1,"message":"149","line":20,"column":21,"nodeType":"150","endLine":20,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":16,"column":1,"nodeType":"142","endLine":45,"endColumn":2},{"ruleId":"143","severity":1,"message":"151","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"152","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"153","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":29},{"ruleId":"143","severity":1,"message":"154","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":24},{"ruleId":"143","severity":1,"message":"152","line":1,"column":36,"nodeType":"145","messageId":"146","endLine":1,"endColumn":45},{"ruleId":"143","severity":1,"message":"155","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":26,"column":30,"nodeType":"158","messageId":"159","endLine":26,"endColumn":32},{"ruleId":"156","severity":1,"message":"160","line":30,"column":30,"nodeType":"158","messageId":"159","endLine":30,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":30,"column":58,"nodeType":"158","messageId":"159","endLine":30,"endColumn":60},{"ruleId":"156","severity":1,"message":"160","line":34,"column":30,"nodeType":"158","messageId":"159","endLine":34,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":3,"column":9,"nodeType":"145","messageId":"146","endLine":3,"endColumn":34},{"ruleId":"143","severity":1,"message":"147","line":3,"column":35,"nodeType":"145","messageId":"146","endLine":3,"endColumn":63},{"ruleId":"143","severity":1,"message":"161","line":12,"column":11,"nodeType":"145","messageId":"146","endLine":12,"endColumn":19},{"ruleId":"143","severity":1,"message":"162","line":14,"column":11,"nodeType":"145","messageId":"146","endLine":14,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["163"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'GET_SEARCHED_FRIENDS_FAIL' is defined but never used.","Identifier","unusedVar","'GET_SEARCHED_FRIENDS_SUCCESS' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'update_user_profile' is defined but never used.","'delete_account' is defined but never used.","'del_friend' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'onChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.",{"desc":"164","fix":"165"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"166","text":"167"},[546,548],"[checkAuthenticated, load_user]"]