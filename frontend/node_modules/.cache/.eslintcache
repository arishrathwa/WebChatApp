[{"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\index.js":"1","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\App.js":"2","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\store.js":"3","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Login.js":"4","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Register.js":"5","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Home.js":"6","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Dashboard.js":"7","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\Layout.js":"8","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\auth.js":"9","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Navbar.js":"10","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\index.js":"11","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\types.js":"12","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\auth.js":"13","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\CSRFToken.js":"14","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\profile.js":"15","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\profile.js":"16","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\PrivateRoute.js":"17","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Chat.js":"18","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Feedback.js":"19","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\friends.js":"20","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friends.js":"21","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friendCard.js":"22","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\FriendCard.js":"23","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Friends.js":"24","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\friends.js":"25","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Notifications.js":"26","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\notification.js":"27","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\notifications.js":"28"},{"size":413,"mtime":1636184821176,"results":"29","hashOfConfig":"30"},{"size":1356,"mtime":1637498378632,"results":"31","hashOfConfig":"30"},{"size":537,"mtime":1635489634986,"results":"32","hashOfConfig":"30"},{"size":2565,"mtime":1637539187452,"results":"33","hashOfConfig":"30"},{"size":3468,"mtime":1637441149324,"results":"34","hashOfConfig":"30"},{"size":586,"mtime":1635272317078,"results":"35","hashOfConfig":"30"},{"size":4294,"mtime":1637525882533,"results":"36","hashOfConfig":"30"},{"size":836,"mtime":1637433274283,"results":"37","hashOfConfig":"30"},{"size":7564,"mtime":1637917349007,"results":"38","hashOfConfig":"30"},{"size":5618,"mtime":1637612474437,"results":"39","hashOfConfig":"30"},{"size":274,"mtime":1637926155773,"results":"40","hashOfConfig":"30"},{"size":3021,"mtime":1637617869736,"results":"41","hashOfConfig":"30"},{"size":1766,"mtime":1636187074095,"results":"42","hashOfConfig":"30"},{"size":1233,"mtime":1637408115459,"results":"43","hashOfConfig":"30"},{"size":2248,"mtime":1637528115588,"results":"44","hashOfConfig":"30"},{"size":1424,"mtime":1637538954195,"results":"45","hashOfConfig":"30"},{"size":513,"mtime":1635449291850,"results":"46","hashOfConfig":"30"},{"size":1048,"mtime":1637612079869,"results":"47","hashOfConfig":"30"},{"size":2087,"mtime":1637529187452,"results":"48","hashOfConfig":"30"},{"size":1260,"mtime":1637605752366,"results":"49","hashOfConfig":"30"},{"size":1944,"mtime":1635499076968,"results":"50","hashOfConfig":"30"},{"size":771,"mtime":1635498861057,"results":"51","hashOfConfig":"30"},{"size":1338,"mtime":1637929426927,"results":"52","hashOfConfig":"30"},{"size":4581,"mtime":1637927617785,"results":"53","hashOfConfig":"30"},{"size":3982,"mtime":1637953981369,"results":"54","hashOfConfig":"30"},{"size":4680,"mtime":1637953952974,"results":"55","hashOfConfig":"30"},{"size":1981,"mtime":1637930167283,"results":"56","hashOfConfig":"30"},{"size":552,"mtime":1637927744168,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xfb1h2",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\index.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\App.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\store.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Login.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Register.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Home.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Dashboard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\Layout.js",["124"],"import React, { Fragment,useEffect } from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated } from \"../actions/auth\";\r\nimport { load_user } from \"../actions/profile\";\r\n\r\nconst Layout = ({ children, checkAuthenticated, load_user })=> {\r\n    // console.log(\"Children => \",children)\r\n\r\n    useEffect(() => {\r\n        checkAuthenticated(); //checks authenticated or not upon every render once\r\n        load_user(); //after authenticationChaeck status user will be loaded\r\n    }, [])\r\n\r\n    let inputTextStyle = {\r\n        maxWidth:'20rem',\r\n        boxShadow:'none'\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Navbar design={inputTextStyle}/>\r\n        {children}\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null,{checkAuthenticated,load_user})(Layout);\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\auth.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Navbar.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\index.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\types.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\auth.js",["125"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    FEEDBACK_SEND_FAIL,\r\n    FEEDBACK_SEND_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    // username: '', no need as after login profile is being fetched\r\n    \r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                 ...state,\r\n                 isAuthenticated:payload\r\n             }\r\n             \r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n    \r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                username: payload\r\n            }    \r\n        \r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                isAuthenticated:false,\r\n                username:''\r\n            }     \r\n        \r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:  \r\n        case LOGOUT_FAIL:  \r\n        case DELETE_USER_FAIL:\r\n        case FEEDBACK_SEND_FAIL:\r\n        case FEEDBACK_SEND_SUCCESS:    \r\n                return state; \r\n         \r\n                \r\n                \r\n                \r\n                \r\n        default: return state    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\CSRFToken.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\profile.js",["126","127"],"import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport { LOAD_USER_PROFILE_FAIL, LOAD_USER_PROFILE_SUCCESS ,\r\n        UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n        } from './types'\r\n//To get user data\r\n//  const dispatch = useDispatch(function)\r\n export const update_user_profile = ( first_name, last_name, phone, city)=>async dispatch => {\r\n     console.log(\"yaha aya tha..\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        first_name:first_name,\r\n        last_name:last_name, \r\n        phone:phone, \r\n        city:city\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`,body,config)\r\n        \r\n        if(res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_FAIL,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:UPDATE_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//To UPDATE USER_PROFILE DATA\r\nexport const load_user = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\r\n        }\r\n    };\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOAD_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\profile.js",["128"],"import {\r\n    LOAD_USER_PROFILE_FAIL,\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: '',\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case UPDATE_USER_PROFILE_SUCCESS:\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username:payload.username,\r\n                first_name:payload.profile.first_name,\r\n                last_name:payload.profile.last_name,\r\n                phone:payload.profile.phone,\r\n                city:payload.profile.city\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username:'',\r\n                first_name:'',\r\n                last_name:'',\r\n                phone:'',\r\n                city:'',\r\n            }   \r\n        case UPDATE_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n           \r\n        default: return state    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\PrivateRoute.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Chat.js",["129"],"import React, { Fragment } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nexport default function ChatUI({ title, onDelete }) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='container-fluid p-2'>\r\n                <nav class=\"navbar navbar-dark bg-primary\">\r\n                    <div class=\"container-fluid\">\r\n                        <NavLink className=\"btn btn-light\" exact to=\"/friends\">Back</NavLink>\r\n                        <h3>Friend/GroupName Dynamic</h3>\r\n                    </div>\r\n                </nav>    \r\n                <div className='overflow-auto'>\r\n                    {/* CHAT COMPONENT */}\r\n                </div>\r\n                <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n                    <div class=\"container-fluid\">\r\n                    <input type=\"text\" className='form-control w-50 mx-auto' />\r\n                    <a class=\"btn btn-success mx-auto\" href=\"#\">Send</a>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Feedback.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\friends.js",["130"],"import {\r\n    ADD_FRIEND_FAIL,ADD_FRIEND_SUCCESS,\r\n    GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n    GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    friendlist:[],\r\n    searchedUser:[],\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case GET_FRIENDS_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                friendlist:\r\n                    payload.data.friends\r\n                \r\n            }\r\n        case GET_SEARCHED_FRIENDS_SUCCESS:    \r\n             console.log(\"Payload\",payload.data)   \r\n             return {\r\n                 ...state,\r\n                 searchedUser:payload.data\r\n    } \r\n        case ADD_FRIEND_SUCCESS:\r\n        case GET_FRIENDS_FAIL:        \r\n        case GET_SEARCHED_FRIENDS_FAIL:        \r\n        case ADD_FRIEND_FAIL:\r\n            return {\r\n                ...state\r\n    }\r\n           \r\n        default: return {...state}    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friends.js",["131","132","133","134"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { update_user_profile } from \"../actions/profile\";\r\nimport { delete_account } from \"../actions/auth\";\r\nimport FriendCard from \"./FriendCard\";\r\nconst Friends = ({\r\n\r\n    first_name_global,\r\n    last_name_global,\r\n    phone_global,\r\n    city_global,\r\n    friendlist_global,\r\n    groups_global\r\n\r\n}) => {\r\n\r\n    console.log(friendlist_global)\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card-group\">\r\n                {friendlist_global.length === 0 ? <>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            ChatApp\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <blockquote class=\"blockquote mb-0\">\r\n                                <h1>No Friends !</h1>\r\n                                <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">ADD FRIENDS</cite></footer>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                    friendlist_global.map(\r\n                        (myfriend) => {\r\n                            return (\r\n                                <FriendCard title={myfriend} />\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    first_name_global: state.profile.first_name,\r\n    last_name_global: state.profile.last_name,\r\n    phone_global: state.profile.phone,\r\n    city_global: state.profile.city,\r\n    friendlist_global: state.friends,\r\n    groups_global: state.groups,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Friends);\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friendCard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\FriendCard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Friends.js",["135","136","137","138","139","140","141","142","143","144","145"],"import React, { Fragment ,useState,useEffect} from \"react\";\r\nimport { get_searched_user_list } from '../actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport { del_friend } from '../actions/friends'\r\n// import { update_user_profile } from \"../actions/profile\";\r\n// import { delete_account } from \"../actions/auth\";\r\nimport '../styles/friends.css'\r\nimport FriendCard from \"./FriendCard\";\r\n\r\nconst Friends = ({get_searched_user_list,searchedUser,friendlist,user_name}) => {\r\n\r\n    console.log(\"Searched User : \",searchedUser)\r\n\r\n\r\n    const [searchItem, setSearchItem] = useState(\"\")\r\n    const [searchList, setsearchList] = useState([])\r\n    const onChange = e => setSearchItem(e.target.value)\r\n\r\n    useEffect(()=>{\r\n        setsearchList(friendlist)\r\n    },[[friendlist],searchItem,searchList]);\r\n    \r\n\r\n    const onClick = (e) => {\r\n        // Check in friend list\r\n        let flag = 0;\r\n        if(friendlist.length != 0){\r\n             // Check in friend list\r\n                let list = friendlist.filter(checkUsername)\r\n                if(list.length != 0){    \r\n                    setsearchList(list); \r\n                    flag = 1;\r\n                }\r\n                       \r\n                 \r\n        }\r\n        // Check in searched users list\r\n        if(searchedUser.length != 0 && flag === 0) {\r\n            let list = searchedUser.filter(checkUsername);\r\n            if(list.length != 0){    \r\n                setsearchList(list)\r\n                flag = 1;\r\n            }\r\n           \r\n        }\r\n        //Check all\r\n        if(flag == 0){\r\n           get_searched_user_list(searchItem)   \r\n        }        \r\n    }\r\n    const checkUsername = (user)=>{\r\n       return user.username.includes(searchItem)        \r\n    }\r\n\r\n    const deleteCommonElements = (friendlist,searchedUser) =>{\r\n            let newList = []\r\n           friendlist.map((elem)=>{\r\n                for(let i = 0;i<searchedUser.length;i++) {\r\n                    if(searchedUser[i].user.username != elem.user.username){\r\n                         newList.push(searchedUser.user)\r\n                    }\r\n                }\r\n           }) \r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"navbar navbar-expand-sm w-100\">\r\n            <form action=\"\">\r\n                <div class=\"input-group input-group-sm m-2  float-start\">\r\n                    <input type=\"text\" onChange={e=>onChange(e)} id=\"searchbar\" className=\"form-control \" placeholder=\"Enter username\" aria-label=\"Recipient's username\" aria-describedby=\"searchbtn\"/>\r\n                    <button class=\"btn btn-outline-secondary btn-sm\" onClick={e => onClick(e)} type=\"button\" id=\"searchbtn\">Search</button>\r\n                </div>\r\n            </form>\r\n            \r\n            </div>\r\n\r\n            <div className=\"card-group\">\r\n                {searchedUser === undefined ? <>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            ChatApp\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <blockquote class=\"blockquote mb-0\">\r\n                                <h1>No Friends !</h1>\r\n                                <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">ADD FRIENDS</cite></footer>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                    searchedUser.map(\r\n                        (myfriend) => {\r\n                            console.log(\"in card iteration\")\r\n                            return (\r\n                                <FriendCard friend={myfriend} />\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {console.log(state.profile);\r\n\r\n    console.log(\r\n        \"Auth : \",state.auth\r\n    )\r\n    \r\n    console.log(\"=> \",state.friends)\r\n    // console.log(state.friends[0])    \r\n    return {\r\n    friendlist_global: state.friends,\r\n    groups_global: state.groups,\r\n    searchedUser:state.friends.searchedUser,\r\n    friendlist:state.friends.friendlist,\r\n    user_name:state.profile.username\r\n    // username:state.profile.username,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n}}\r\nexport default connect(mapStateToProps,{get_searched_user_list,})(Friends);\r\n// export default Friends;\r\n/*\r\n/* export default connect(mapStateToProps, { del_friend })(Friends);**/\r\n\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\friends.js",["146","147"],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Notifications.js",["148","149"],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\notification.js",["150"],"import {GET_NOTIFICATIONS_FAIL,GET_NOTIFICATIONS_SUCCESS,\r\n        STORE_NOTIFICATIONS_FAIL,STORE_NOTIFICATIONS_SUCCESS} from './types'\r\nimport axios from 'axios'\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n//GET FRIEND LIST\r\nexport const get_notification_list = (username) =>async dispatch => {\r\nconst config = {\r\n    headers : {\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json',\r\n        'X-CSRFToken':Cookies.get('csrftoken') \r\n    }\r\n};\r\n\r\nconst body = JSON.stringify({\r\n   'username':username,\r\n})\r\n\r\ntry {\r\n        \r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/notification/getnotified`,body,config)\r\n    console.log(\"Nsot : \",res.data)\r\n    if(res.data.error) {\r\n        dispatch({\r\n            type:GET_NOTIFICATIONS_FAIL,\r\n        })\r\n    }\r\n    else {\r\n        dispatch({\r\n            type:GET_NOTIFICATIONS_SUCCESS,\r\n            payload:res.data\r\n        \r\n        })\r\n    }\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type:GET_NOTIFICATIONS_FAIL\r\n    })\r\n}\r\n}\r\n\r\n//STORE FRIEND REQUEST\r\nexport const send_notification = ( username,receiver,status,info )=>async dispatch => {\r\nconst config = {\r\n    headers : {\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json',\r\n        'X-CSRFToken':Cookies.get('csrftoken') \r\n    }\r\n};\r\n\r\nconst body = JSON.stringify({\r\n   'sender':username,\r\n   'receiver':receiver,\r\n    'status':status, // sent ,accept and deny values\r\n    'info':info,\r\n    \"sender\":username\r\n\r\n})\r\nconsole.log(\"SENDER : \",body.sender)\r\ntry {\r\n    \r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/notification/notify`,body,config)\r\n\r\n    if(res.data.error) {\r\n        dispatch({\r\n            type:STORE_NOTIFICATIONS_FAIL,\r\n        })\r\n    }\r\n    else {\r\n        dispatch({\r\n            type:STORE_NOTIFICATIONS_SUCCESS,\r\n            payload:res.data\r\n        })\r\n    }\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type:GET_NOTIFICATIONS_FAIL\r\n    })\r\n}\r\n}\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\notifications.js",["151"],"import { GET_NOTIFICATIONS_FAIL,GET_NOTIFICATIONS_SUCCESS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    notify_list : []\r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case GET_NOTIFICATIONS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                notify_list : payload.data\r\n                \r\n            }\r\n                \r\n                \r\n       case GET_NOTIFICATIONS_FAIL:         \r\n        default: return {...state}    \r\n\r\n}\r\n\r\n}",{"ruleId":"152","severity":1,"message":"153","line":13,"column":8,"nodeType":"154","endLine":13,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":24,"column":1,"nodeType":"158","endLine":72,"endColumn":2},{"ruleId":"159","severity":1,"message":"160","line":6,"column":9,"nodeType":"161","messageId":"162","endLine":6,"endColumn":34},{"ruleId":"159","severity":1,"message":"163","line":6,"column":35,"nodeType":"161","messageId":"162","endLine":6,"endColumn":63},{"ruleId":"156","severity":1,"message":"157","line":20,"column":1,"nodeType":"158","endLine":52,"endColumn":2},{"ruleId":"164","severity":1,"message":"165","line":20,"column":21,"nodeType":"166","endLine":20,"endColumn":65},{"ruleId":"156","severity":1,"message":"157","line":16,"column":1,"nodeType":"158","endLine":45,"endColumn":2},{"ruleId":"159","severity":1,"message":"167","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"168","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":29},{"ruleId":"159","severity":1,"message":"170","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":24},{"ruleId":"159","severity":1,"message":"171","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":20},{"ruleId":"152","severity":1,"message":"172","line":21,"column":7,"nodeType":"154","endLine":21,"endColumn":43,"suggestions":"173"},{"ruleId":"152","severity":1,"message":"174","line":21,"column":8,"nodeType":"154","endLine":21,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":27,"column":30,"nodeType":"177","messageId":"178","endLine":27,"endColumn":32},{"ruleId":"175","severity":1,"message":"176","line":30,"column":32,"nodeType":"177","messageId":"178","endLine":30,"endColumn":34},{"ruleId":"175","severity":1,"message":"176","line":38,"column":32,"nodeType":"177","messageId":"178","endLine":38,"endColumn":34},{"ruleId":"175","severity":1,"message":"176","line":40,"column":28,"nodeType":"177","messageId":"178","endLine":40,"endColumn":30},{"ruleId":"175","severity":1,"message":"179","line":47,"column":17,"nodeType":"177","messageId":"178","endLine":47,"endColumn":19},{"ruleId":"159","severity":1,"message":"180","line":55,"column":11,"nodeType":"161","messageId":"162","endLine":55,"endColumn":31},{"ruleId":"181","severity":1,"message":"182","line":57,"column":33,"nodeType":"183","messageId":"184","endLine":57,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":59,"column":54,"nodeType":"177","messageId":"178","endLine":59,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":3,"column":9,"nodeType":"161","messageId":"162","endLine":3,"endColumn":34},{"ruleId":"159","severity":1,"message":"163","line":3,"column":35,"nodeType":"161","messageId":"162","endLine":3,"endColumn":63},{"ruleId":"159","severity":1,"message":"168","line":1,"column":36,"nodeType":"161","messageId":"162","endLine":1,"endColumn":45},{"ruleId":"159","severity":1,"message":"185","line":9,"column":24,"nodeType":"161","messageId":"162","endLine":9,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":61,"column":5,"nodeType":"188","messageId":"178","endLine":61,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":7,"column":1,"nodeType":"158","endLine":24,"endColumn":2},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["189"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'GET_SEARCHED_FRIENDS_FAIL' is defined but never used.","Identifier","unusedVar","'GET_SEARCHED_FRIENDS_SUCCESS' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'update_user_profile' is defined but never used.","'delete_account' is defined but never used.","'del_friend' is defined but never used.","React Hook useEffect has a missing dependency: 'friendlist'. Either include it or remove the dependency array. If 'setsearchList' needs the current value of 'friendlist', you can also switch to useReducer instead of useState and read 'friendlist' in the reducer.",["190"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'deleteCommonElements' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setnotifyList' is assigned a value but never used.","no-dupe-keys","Duplicate key 'sender'.","ObjectExpression",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"195","text":"196"},"Update the dependencies array to be: [friendlist, searchItem, searchList]",{"range":"197","text":"198"},[546,548],"[checkAuthenticated, load_user]",[767,803],"[friendlist, searchItem, searchList]"]