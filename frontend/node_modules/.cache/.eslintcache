[{"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\index.js":"1","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\App.js":"2","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\store.js":"3","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Login.js":"4","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Register.js":"5","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Home.js":"6","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Dashboard.js":"7","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\Layout.js":"8","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\auth.js":"9","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Navbar.js":"10","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\index.js":"11","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\types.js":"12","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\auth.js":"13","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\CSRFToken.js":"14","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\profile.js":"15","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\profile.js":"16","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\PrivateRoute.js":"17","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Chat.js":"18","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Feedback.js":"19","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\friends.js":"20","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friends.js":"21","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friendCard.js":"22","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\FriendCard.js":"23","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Friends.js":"24","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\friends.js":"25","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Notifications.js":"26","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\notification.js":"27","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\notifications.js":"28"},{"size":413,"mtime":1636184821176,"results":"29","hashOfConfig":"30"},{"size":1361,"mtime":1637971761425,"results":"31","hashOfConfig":"30"},{"size":537,"mtime":1635489634986,"results":"32","hashOfConfig":"30"},{"size":2565,"mtime":1637539187452,"results":"33","hashOfConfig":"30"},{"size":3468,"mtime":1637441149324,"results":"34","hashOfConfig":"30"},{"size":586,"mtime":1635272317078,"results":"35","hashOfConfig":"30"},{"size":4294,"mtime":1637525882533,"results":"36","hashOfConfig":"30"},{"size":836,"mtime":1637433274283,"results":"37","hashOfConfig":"30"},{"size":7564,"mtime":1637961555577,"results":"38","hashOfConfig":"30"},{"size":5618,"mtime":1637992301927,"results":"39","hashOfConfig":"30"},{"size":274,"mtime":1637926155773,"results":"40","hashOfConfig":"30"},{"size":3021,"mtime":1637617869736,"results":"41","hashOfConfig":"30"},{"size":1766,"mtime":1636187074095,"results":"42","hashOfConfig":"30"},{"size":1233,"mtime":1637408115459,"results":"43","hashOfConfig":"30"},{"size":2248,"mtime":1637528115588,"results":"44","hashOfConfig":"30"},{"size":1424,"mtime":1637538954195,"results":"45","hashOfConfig":"30"},{"size":513,"mtime":1635449291850,"results":"46","hashOfConfig":"30"},{"size":7900,"mtime":1638386173423,"results":"47","hashOfConfig":"30"},{"size":2087,"mtime":1637529187452,"results":"48","hashOfConfig":"30"},{"size":1252,"mtime":1637962813629,"results":"49","hashOfConfig":"30"},{"size":1944,"mtime":1635499076968,"results":"50","hashOfConfig":"30"},{"size":771,"mtime":1635498861057,"results":"51","hashOfConfig":"30"},{"size":1787,"mtime":1638292185687,"results":"52","hashOfConfig":"30"},{"size":5950,"mtime":1638127033367,"results":"53","hashOfConfig":"30"},{"size":4066,"mtime":1638255270327,"results":"54","hashOfConfig":"30"},{"size":4755,"mtime":1638255168226,"results":"55","hashOfConfig":"30"},{"size":1981,"mtime":1637930167283,"results":"56","hashOfConfig":"30"},{"size":552,"mtime":1637927744168,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xfb1h2",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\index.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\App.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\store.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Login.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Register.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Home.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Dashboard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\Layout.js",["125"],"import React, { Fragment,useEffect } from \"react\";\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated } from \"../actions/auth\";\r\nimport { load_user } from \"../actions/profile\";\r\n\r\nconst Layout = ({ children, checkAuthenticated, load_user })=> {\r\n    // console.log(\"Children => \",children)\r\n\r\n    useEffect(() => {\r\n        checkAuthenticated(); //checks authenticated or not upon every render once\r\n        load_user(); //after authenticationChaeck status user will be loaded\r\n    }, [])\r\n\r\n    let inputTextStyle = {\r\n        maxWidth:'20rem',\r\n        boxShadow:'none'\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Navbar design={inputTextStyle}/>\r\n        {children}\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null,{checkAuthenticated,load_user})(Layout);\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\auth.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Navbar.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\index.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\types.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\auth.js",["126"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    FEEDBACK_SEND_FAIL,\r\n    FEEDBACK_SEND_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    // username: '', no need as after login profile is being fetched\r\n    \r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                 ...state,\r\n                 isAuthenticated:payload\r\n             }\r\n             \r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n    \r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                username: payload\r\n            }    \r\n        \r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                isAuthenticated:false,\r\n                username:''\r\n            }     \r\n        \r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:  \r\n        case LOGOUT_FAIL:  \r\n        case DELETE_USER_FAIL:\r\n        case FEEDBACK_SEND_FAIL:\r\n        case FEEDBACK_SEND_SUCCESS:    \r\n                return state; \r\n         \r\n                \r\n                \r\n                \r\n                \r\n        default: return state    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\CSRFToken.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\profile.js",["127","128"],"import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport { LOAD_USER_PROFILE_FAIL, LOAD_USER_PROFILE_SUCCESS ,\r\n        UPDATE_USER_PROFILE_FAIL,UPDATE_USER_PROFILE_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n        } from './types'\r\n//To get user data\r\n//  const dispatch = useDispatch(function)\r\n export const update_user_profile = ( first_name, last_name, phone, city)=>async dispatch => {\r\n     console.log(\"yaha aya tha..\")\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials':true,\r\n        first_name:first_name,\r\n        last_name:last_name, \r\n        phone:phone, \r\n        city:city\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`,body,config)\r\n        \r\n        if(res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:UPDATE_USER_PROFILE_FAIL,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:UPDATE_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n//To UPDATE USER_PROFILE DATA\r\nexport const load_user = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            // 'X-CSRFToken':Cookies.get('csrftoken') no need when get request is made\r\n        }\r\n    };\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:LOAD_USER_PROFILE_SUCCESS,\r\n                payload:res.data\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:LOAD_USER_PROFILE_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\profile.js",["129"],"import {\r\n    LOAD_USER_PROFILE_FAIL,\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: '',\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case UPDATE_USER_PROFILE_SUCCESS:\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username:payload.username,\r\n                first_name:payload.profile.first_name,\r\n                last_name:payload.profile.last_name,\r\n                phone:payload.profile.phone,\r\n                city:payload.profile.city\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username:'',\r\n                first_name:'',\r\n                last_name:'',\r\n                phone:'',\r\n                city:'',\r\n            }   \r\n        case UPDATE_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n           \r\n        default: return state    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\higherOrderComponents\\PrivateRoute.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Chat.js",["130","131","132","133","134","135"],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Feedback.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\friends.js",["136"],"import {\r\n    ADD_FRIEND_FAIL,ADD_FRIEND_SUCCESS,\r\n    GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n    GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    // isAuthenticated: null, as after authentication only it is being accessed, so no need here\r\n    friendlist:[],\r\n    searchedUser:[],\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n//thunk dispatch calls these states according to type\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type,payload } = action; \r\n    switch (type) {\r\n        case GET_FRIENDS_SUCCESS:    \r\n            return {\r\n                ...state,\r\n                friendlist:\r\n                    payload.data\r\n                \r\n            }\r\n        case GET_SEARCHED_FRIENDS_SUCCESS:    \r\n             console.log(\"Payload\",payload.data)   \r\n             return {\r\n                 ...state,\r\n                 searchedUser:payload.data\r\n    } \r\n        case ADD_FRIEND_SUCCESS:\r\n        case GET_FRIENDS_FAIL:        \r\n        case GET_SEARCHED_FRIENDS_FAIL:        \r\n        case ADD_FRIEND_FAIL:\r\n            return {\r\n                ...state\r\n    }\r\n           \r\n        default: return {...state}    \r\n\r\n}\r\n\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friends.js",["137","138","139","140"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { update_user_profile } from \"../actions/profile\";\r\nimport { delete_account } from \"../actions/auth\";\r\nimport FriendCard from \"./FriendCard\";\r\nconst Friends = ({\r\n\r\n    first_name_global,\r\n    last_name_global,\r\n    phone_global,\r\n    city_global,\r\n    friendlist_global,\r\n    groups_global\r\n\r\n}) => {\r\n\r\n    console.log(friendlist_global)\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card-group\">\r\n                {friendlist_global.length === 0 ? <>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            ChatApp\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <blockquote class=\"blockquote mb-0\">\r\n                                <h1>No Friends !</h1>\r\n                                <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">ADD FRIENDS</cite></footer>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                    friendlist_global.map(\r\n                        (myfriend) => {\r\n                            return (\r\n                                <FriendCard title={myfriend} />\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    first_name_global: state.profile.first_name,\r\n    last_name_global: state.profile.last_name,\r\n    phone_global: state.profile.phone,\r\n    city_global: state.profile.city,\r\n    friendlist_global: state.friends,\r\n    groups_global: state.groups,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Friends);\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\friendCard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\FriendCard.js",[],"D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\containers\\Friends.js",["141","142","143","144","145","146","147","148","149","150","151","152","153"],"import React, { Fragment ,useState,useEffect} from \"react\";\r\nimport { get_searched_user_list } from '../actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport { get_friend_list } from \"../actions/friends\";\r\nimport { del_friend } from '../actions/friends'\r\n// import { update_user_profile } from \"../actions/profile\";\r\n// import { delete_account } from \"../actions/auth\";\r\nimport '../styles/friends.css'\r\nimport FriendCard from \"./FriendCard\";\r\n\r\nconst Friends = ({get_searched_user_list,get_friend_list,searchedUser,friendlist,user_name}) => {\r\n\r\n    console.log(\"Searched User : \",searchedUser)\r\n\r\n\r\n    const [searchItem, setSearchItem] = useState(\"\")\r\n    const [searchList, setsearchList] = useState(friendlist)\r\n    const onChange = e => setSearchItem(e.target.value)\r\n\r\n    useEffect(()=>{\r\n        get_friend_list()   \r\n    },[]);\r\n    \r\n    useEffect(()=>{\r\n        setsearchList(friendlist)\r\n        friendTag()\r\n        console.log(\"DRUGS\")\r\n    },[friendlist])\r\n    \r\n    useEffect(()=>{\r\n        deleteCommonElements(friendlist,searchedUser);    \r\n    },[searchedUser])\r\n\r\n    \r\n    console.log(\"SearchList : \",searchList)\r\n    console.log(\"FriendList : \",friendlist)\r\n\r\n    const onClick = (e) => {\r\n        // Check in friend list\r\n        let flag = 0;\r\n        if(friendlist.length != 0){\r\n             // Check in friend list\r\n                let list = friendlist.filter(checkUsername)\r\n                if(list.length != 0){    \r\n                    setsearchList(list); \r\n                    flag = 1;\r\n                }           \r\n                 \r\n        }\r\n        // Check in searched users list\r\n        if(searchedUser.length != 0 && flag === 0) {\r\n            let list = searchedUser.filter(checkUsername);\r\n            if(list.length != 0){    \r\n                setsearchList(list)\r\n                flag = 1;\r\n            }\r\n           \r\n        }\r\n        //Check all\r\n        if(flag == 0){\r\n           get_searched_user_list(searchItem)   \r\n        }        \r\n    }\r\n    const checkUsername = (user)=>{\r\n       return user.username.includes(searchItem)        \r\n    }\r\n\r\n    const deleteCommonElements = (friendlist,searchedUser) =>{\r\n            \r\n        searchedUser.map((elem)=>{\r\n            friendlist.map(friend=>{\r\n                if(friend[\"username\"] !== elem[\"username\"]){\r\n                    elem[\"tag\"] = \"not friend\"\r\n                }\r\n                else {\r\n                    elem[\"tag\"] = \"friend\"\r\n                }\r\n\r\n            })\r\n        })\r\n\r\n        searchedUser = searchedUser.filter((elem)=>{\r\n            return elem[\"tag\"] !== \"friend\"\r\n        })\r\n        \r\n            setsearchList(friendlist.concat(searchedUser))\r\n                 \r\n    }\r\n      \r\n\r\n    const friendTag = ()=> {\r\n        friendlist.map((friend)=>{\r\n            friend[\"tag\"] = \"friend\"\r\n        })\r\n        setsearchList(friendlist)\r\n        console.log(\"FEDN ls:\",friendlist)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"navbar navbar-expand-sm w-100\">\r\n            <form action=\"\">\r\n                <div class=\"input-group input-group-sm m-2  float-start\">\r\n                    <input type=\"text\" onChange={e=>onChange(e)} id=\"searchbar\" className=\"form-control \" placeholder=\"Enter username\" aria-label=\"Recipient's username\" aria-describedby=\"searchbtn\"/>\r\n                    <button class=\"btn btn-outline-secondary btn-sm\" onClick={e => onClick(e)} type=\"button\" id=\"searchbtn\">Search</button>\r\n                </div>\r\n                \r\n            </form>\r\n            \r\n            </div>\r\n\r\n            <div className=\"card-group\" >\r\n                {searchList === undefined ? <>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            ChatApp\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <blockquote class=\"blockquote mb-0\">\r\n                                <h1>No Friends !</h1>\r\n                                <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">ADD FRIENDS</cite></footer>\r\n                            </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                     searchItem == \"\" ?\r\n                        \r\n                        friendlist.map(\r\n                            (myfriend) => {\r\n                                console.log(\"in card iteration\")\r\n                                return (\r\n                                    <FriendCard tag={{\"tag\":\"friend\"}} friend={myfriend} />\r\n                                )\r\n                            }\r\n                        )\r\n                        :\r\n                        searchList.map(\r\n                            (myfriend) => {\r\n                                console.log(\"Searchg Iteration : \",myfriend)\r\n                                return (\r\n                                    <FriendCard tag={{\"tag\":\"mixed\"}} friend={myfriend} />\r\n                                )\r\n                            }\r\n                        )      \r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {console.log(state.profile);\r\n\r\n    console.log(\r\n        \"Auth : \",state.auth\r\n    )\r\n    \r\n    console.log(\"=> \",state.friends)\r\n    // console.log(state.friends[0])    \r\n    return {\r\n    friendlist_global: state.friends,\r\n    groups_global: state.groups,\r\n    searchedUser:state.friends.searchedUser,\r\n    friendlist:state.friends.friendlist,\r\n    user_name:state.profile.username\r\n    // username:state.profile.username,\r\n    //these are the variables passed as props globally tomaintain state of application\r\n}}\r\nexport default connect(mapStateToProps,{get_searched_user_list,get_friend_list})(Friends);\r\n// export default Friends;\r\n/*\r\n/* export default connect(mapStateToProps, { del_friend })(Friends);**/\r\n\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\friends.js",["154","155"],"\r\nimport {ADD_FRIEND_FAIL, ADD_FRIEND_SUCCESS, GET_FRIENDS_FAIL,GET_FRIENDS_SUCCESS,\r\n        GET_SEARCHED_FRIENDS_FAIL,GET_SEARCHED_FRIENDS_SUCCESS} from './types'\r\nimport axios from 'axios'\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n//GET FRIEND LIST\r\nexport const get_friend_list = ()=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n    console.log(\"in get friend\")\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/getfriends`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            console.log(res)\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data,\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//GET FRIEND LIST\r\n// export const get_searched_user_list = ( username )=>async dispatch => {\r\n//     console.log(\"aa gaya\")\r\n//     const config = {\r\n//         headers : {\r\n//             'Accept':'application/json',\r\n//             'Content-Type':'application/json',\r\n//             'X-CSRFToken':Cookies.get('csrftoken') \r\n//         }\r\n//     };\r\n\r\n//     const body = JSON.stringify({\r\n//        'username' : username,\r\n//     })\r\n\r\n//     try {\r\n        \r\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/get_searched_users`,body,config)\r\n\r\n//         if(res.data.error) {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_FAIL,\r\n//             })\r\n//         }\r\n//         else {\r\n//             dispatch({\r\n//                 type:GET_SEARCHED_FRIENDS_SUCCESS,\r\n//                 payload:res.data\r\n            \r\n//             })\r\n//         }\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type:GET_SEARCHED_FRIENDS_FAIL\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n//STORE FRIEND\r\n\r\nexport const store_friend_connection = (username,friend,status,connectionid=\"\")=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            'X-CSRFToken':Cookies.get('csrftoken') //no need when get request is made\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'user':username,\r\n        'friend_username':friend,\r\n        'status':status,\r\n        'connectionid':connectionid,\r\n    })\r\n    console.log(\"info : inreq : \",connectionid)\r\n    try {\r\n        \r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/friends/addfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:ADD_FRIEND_FAIL\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:ADD_FRIEND_SUCCESS,\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ADD_FRIEND_FAIL\r\n        })\r\n    }\r\n}\r\n//Delete Friend\r\nexport const del_friend = ( username )=>async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json',\r\n            //'X-CSRFToken':Cookies.get('csrftoken') \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n       \r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/friends/delfriend`,body,config)\r\n\r\n        if(res.data.error) {\r\n            dispatch({\r\n                type:GET_FRIENDS_FAIL,\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:GET_FRIENDS_SUCCESS,\r\n                payload:res.data\r\n            \r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_FRIENDS_FAIL\r\n        })\r\n    }\r\n}","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\components\\Notifications.js",["156","157","158","159"],"import React, { Fragment, useState,useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { store_friend_connection } from \"../actions/friends\";\r\nimport { send_notification } from \"../actions/notification\";\r\nimport { get_notification_list } from \"../actions/notification\";\r\nconst Notification = ({notifications,username,store_friend_connection,send_notification,get_notification_list}) => {\r\n\r\n    const [notifyList, setnotifyList] = useState([])\r\n\r\n    // useEffect(async ()=>{\r\n    //    setnotifyList([...notifications])\r\n    // },[notifyList]);\r\n    console.log(\"Not List : \",notifyList)\r\n    console.log(\"noti list : \",notifications);\r\n    const onClick = async (e,sender,receiver,status,info)=> {\r\n        if(status == \"accept\" || status == \"done\")\r\n            await store_friend_connection(receiver,sender,status,info);\r\n        else\r\n            await send_notification(sender,receiver,status,\"\")\r\n        console.log(\"info : \",info)\r\n        // if(status !== \"done\")\r\n        \r\n\r\n    }\r\n    const onDeny = async(e,sender,receiver,status)=>{\r\n        await send_notification(sender,receiver,status,\"\")\r\n    }\r\n    const getNotify =  (e)=> {\r\n         get_notification_list(username);\r\n    }\r\n    return (\r\n        <Fragment className=\"nav-item\">\r\n            <Link className=\"nav-link \" type=\"\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasBottom\" onClick={(e)=>{getNotify(username)}} aria-controls=\"offcanvasBottom\">Notifications</Link>\r\n\r\n            <div className=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasBottom\" aria-labelledby=\"offcanvasBottomLabel\">\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 id=\"offcanvasRightLabel\">Notifications</h5>\r\n                    <button type=\"button\" className=\"btn-primary btn-sm\" onClick={(e)=>{getNotify(username)}} data-bs-dismiss=\"offcanvas\" aria-label=\"Close\">Refresh</button>\r\n                    <button type=\"button\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"offcanvas-body small\">\r\n                {\r\n                    \r\n                notifications.length !== 0 ?  \r\n                notifications.map(\r\n                        (notification) => {\r\n                            console.log(\"in card iteration\")\r\n                            return (\r\n                                <>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">{notification.sender}</h5>\r\n                                        <p class=\"card-text\">{notification.status}</p>\r\n                                        {notification.request === \"sent\"?<>\r\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onClick={(e)=>{onClick(e,notification.sender,notification.receiver,\"accept\")}}>Accept</button>\r\n                                        <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" onClick={(e)=>{onDeny(e,notification.sender,notification.receiver,\"deny\")}}>Deny X</button>\r\n                                        </>\r\n                                        :\r\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onClick={(e)=>{onClick(e,notification.sender,notification.receiver,\"done\",notification.info)}}>Confirm</button>\r\n                                              \r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                 )\r\n                            \r\n                        }\r\n                    ):\r\n                        <>\r\n                            <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                No Notifications..\r\n                            </div>\r\n                            </div>\r\n                                \r\n\r\n                        </>\r\n                    }      \r\n                </div>\r\n            </div>\r\n                    \r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"state noti : \",state.notifications)\r\n    console.log(state.notifications.notify_list)\r\n    return {\r\n    notifications:state.notifications.notify_list,\r\n    username:state.profile.username\r\n    //these are the variables passed as props globally tomaintain state of application\r\n}}\r\n\r\nexport default connect(mapStateToProps,{store_friend_connection,send_notification,get_notification_list})(Notification);","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\actions\\notification.js",["160"],"import {GET_NOTIFICATIONS_FAIL,GET_NOTIFICATIONS_SUCCESS,\r\n        STORE_NOTIFICATIONS_FAIL,STORE_NOTIFICATIONS_SUCCESS} from './types'\r\nimport axios from 'axios'\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n//GET FRIEND LIST\r\nexport const get_notification_list = (username) =>async dispatch => {\r\nconst config = {\r\n    headers : {\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json',\r\n        'X-CSRFToken':Cookies.get('csrftoken') \r\n    }\r\n};\r\n\r\nconst body = JSON.stringify({\r\n   'username':username,\r\n})\r\n\r\ntry {\r\n        \r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/notification/getnotified`,body,config)\r\n    console.log(\"Nsot : \",res.data)\r\n    if(res.data.error) {\r\n        dispatch({\r\n            type:GET_NOTIFICATIONS_FAIL,\r\n        })\r\n    }\r\n    else {\r\n        dispatch({\r\n            type:GET_NOTIFICATIONS_SUCCESS,\r\n            payload:res.data\r\n        \r\n        })\r\n    }\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type:GET_NOTIFICATIONS_FAIL\r\n    })\r\n}\r\n}\r\n\r\n//STORE FRIEND REQUEST\r\nexport const send_notification = ( username,receiver,status,info )=>async dispatch => {\r\nconst config = {\r\n    headers : {\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json',\r\n        'X-CSRFToken':Cookies.get('csrftoken') \r\n    }\r\n};\r\n\r\nconst body = JSON.stringify({\r\n   'sender':username,\r\n   'receiver':receiver,\r\n    'status':status, // sent ,accept and deny values\r\n    'info':info,\r\n    \"sender\":username\r\n\r\n})\r\nconsole.log(\"SENDER : \",body.sender)\r\ntry {\r\n    \r\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/notification/notify`,body,config)\r\n\r\n    if(res.data.error) {\r\n        dispatch({\r\n            type:STORE_NOTIFICATIONS_FAIL,\r\n        })\r\n    }\r\n    else {\r\n        dispatch({\r\n            type:STORE_NOTIFICATIONS_SUCCESS,\r\n            payload:res.data\r\n        })\r\n    }\r\n\r\n} catch (error) {\r\n    dispatch({\r\n        type:GET_NOTIFICATIONS_FAIL\r\n    })\r\n}\r\n}\r\n","D:\\VSCode\\SessionAuth\\ChatApp\\frontend\\src\\reducers\\notifications.js",["161"],"import { GET_NOTIFICATIONS_FAIL,GET_NOTIFICATIONS_SUCCESS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    notify_list : []\r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n\r\n    const { type,payload } = action;\r\n    switch (type) {\r\n        case GET_NOTIFICATIONS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                notify_list : payload.data\r\n                \r\n            }\r\n                \r\n                \r\n       case GET_NOTIFICATIONS_FAIL:         \r\n        default: return {...state}    \r\n\r\n}\r\n\r\n}",{"ruleId":"162","severity":1,"message":"163","line":13,"column":8,"nodeType":"164","endLine":13,"endColumn":10,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":24,"column":1,"nodeType":"168","endLine":72,"endColumn":2},{"ruleId":"169","severity":1,"message":"170","line":6,"column":9,"nodeType":"171","messageId":"172","endLine":6,"endColumn":34},{"ruleId":"169","severity":1,"message":"173","line":6,"column":35,"nodeType":"171","messageId":"172","endLine":6,"endColumn":63},{"ruleId":"166","severity":1,"message":"167","line":20,"column":1,"nodeType":"168","endLine":52,"endColumn":2},{"ruleId":"169","severity":1,"message":"174","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"175","severity":1,"message":"176","line":13,"column":5,"nodeType":"177","messageId":"178","endLine":15,"endColumn":6},{"ruleId":"169","severity":1,"message":"179","line":34,"column":24,"nodeType":"171","messageId":"172","endLine":34,"endColumn":38},{"ruleId":"162","severity":1,"message":"180","line":47,"column":7,"nodeType":"164","endLine":47,"endColumn":29,"suggestions":"181"},{"ruleId":"162","severity":1,"message":"182","line":63,"column":7,"nodeType":"164","endLine":63,"endColumn":9,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":194,"column":25,"nodeType":"186","endLine":194,"endColumn":100},{"ruleId":"166","severity":1,"message":"167","line":16,"column":1,"nodeType":"168","endLine":45,"endColumn":2},{"ruleId":"169","severity":1,"message":"187","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"188","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"189","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":29},{"ruleId":"169","severity":1,"message":"190","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":24},{"ruleId":"169","severity":1,"message":"191","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":20},{"ruleId":"162","severity":1,"message":"192","line":22,"column":7,"nodeType":"164","endLine":22,"endColumn":9,"suggestions":"193"},{"ruleId":"162","severity":1,"message":"194","line":28,"column":7,"nodeType":"164","endLine":28,"endColumn":19,"suggestions":"195"},{"ruleId":"162","severity":1,"message":"196","line":32,"column":7,"nodeType":"164","endLine":32,"endColumn":21,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":41,"column":30,"nodeType":"200","messageId":"201","endLine":41,"endColumn":32},{"ruleId":"198","severity":1,"message":"199","line":44,"column":32,"nodeType":"200","messageId":"201","endLine":44,"endColumn":34},{"ruleId":"198","severity":1,"message":"199","line":51,"column":32,"nodeType":"200","messageId":"201","endLine":51,"endColumn":34},{"ruleId":"198","severity":1,"message":"199","line":53,"column":28,"nodeType":"200","messageId":"201","endLine":53,"endColumn":30},{"ruleId":"198","severity":1,"message":"202","line":60,"column":17,"nodeType":"200","messageId":"201","endLine":60,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":70,"column":32,"nodeType":"205","messageId":"206","endLine":70,"endColumn":34},{"ruleId":"203","severity":1,"message":"204","line":71,"column":34,"nodeType":"205","messageId":"206","endLine":71,"endColumn":36},{"ruleId":"203","severity":1,"message":"204","line":92,"column":32,"nodeType":"205","messageId":"206","endLine":92,"endColumn":34},{"ruleId":"198","severity":1,"message":"202","line":128,"column":33,"nodeType":"200","messageId":"201","endLine":128,"endColumn":35},{"ruleId":"169","severity":1,"message":"170","line":3,"column":9,"nodeType":"171","messageId":"172","endLine":3,"endColumn":34},{"ruleId":"169","severity":1,"message":"173","line":3,"column":35,"nodeType":"171","messageId":"172","endLine":3,"endColumn":63},{"ruleId":"169","severity":1,"message":"188","line":1,"column":36,"nodeType":"171","messageId":"172","endLine":1,"endColumn":45},{"ruleId":"169","severity":1,"message":"207","line":9,"column":24,"nodeType":"171","messageId":"172","endLine":9,"endColumn":37},{"ruleId":"198","severity":1,"message":"202","line":17,"column":19,"nodeType":"200","messageId":"201","endLine":17,"endColumn":21},{"ruleId":"198","severity":1,"message":"202","line":17,"column":41,"nodeType":"200","messageId":"201","endLine":17,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":61,"column":5,"nodeType":"210","messageId":"201","endLine":61,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":7,"column":1,"nodeType":"168","endLine":24,"endColumn":2},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["211"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'GET_SEARCHED_FRIENDS_FAIL' is defined but never used.","Identifier","unusedVar","'GET_SEARCHED_FRIENDS_SUCCESS' is defined but never used.","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'setFriendGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socketVar'. Either include it or remove the dependency array. Outer scope values like 'SocketOp.socketState' aren't valid dependencies because mutating them doesn't re-render the component.",["212"],"React Hook useLayoutEffect has a missing dependency: 'roomName'. Either include it or remove the dependency array.",["213"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'update_user_profile' is defined but never used.","'delete_account' is defined but never used.","'del_friend' is defined but never used.","React Hook useEffect has a missing dependency: 'get_friend_list'. Either include it or remove the dependency array. If 'get_friend_list' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["214"],"React Hook useEffect has a missing dependency: 'friendTag'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'friendlist'. Either include it or remove the dependency array.",["216"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setnotifyList' is assigned a value but never used.","no-dupe-keys","Duplicate key 'sender'.","ObjectExpression",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"229","text":"230"},"Update the dependencies array to be: [socketVar]",{"range":"231","text":"232"},"Update the dependencies array to be: [roomName]",{"range":"233","text":"234"},"Update the dependencies array to be: [get_friend_list]",{"range":"235","text":"236"},"Update the dependencies array to be: [friendTag, friendlist]",{"range":"237","text":"238"},"Update the dependencies array to be: [friendlist, searchedUser]",{"range":"239","text":"240"},[546,548],"[checkAuthenticated, load_user]",[1381,1403],"[socketVar]",[1818,1820],"[roomName]",[841,843],"[get_friend_list]",[966,978],"[friendTag, friendlist]",[1074,1088],"[friendlist, searchedUser]"]